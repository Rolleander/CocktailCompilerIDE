/**
 * generated by Xtext 2.9.2
 */
package de.roma.cocktail.xtext.rpp;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getScanner <em>Scanner</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getExport <em>Export</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getImports <em>Imports</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getGlobal <em>Global</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getLocal <em>Local</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getDefault <em>Default</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getEof <em>Eof</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getBegin <em>Begin</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getClose <em>Close</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getDefine <em>Define</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getStates <em>States</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getRules <em>Rules</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.rpp.Model#getInsert <em>Insert</em>}</li>
 * </ul>
 *
 * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel()
 * @model
 * @generated
 */
public interface Model extends EObject
{
  /**
   * Returns the value of the '<em><b>Scanner</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Scanner</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Scanner</em>' containment reference.
   * @see #setScanner(Scanner)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Scanner()
   * @model containment="true"
   * @generated
   */
  Scanner getScanner();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getScanner <em>Scanner</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Scanner</em>' containment reference.
   * @see #getScanner()
   * @generated
   */
  void setScanner(Scanner value);

  /**
   * Returns the value of the '<em><b>Export</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Export</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Export</em>' containment reference.
   * @see #setExport(Export)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Export()
   * @model containment="true"
   * @generated
   */
  Export getExport();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getExport <em>Export</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Export</em>' containment reference.
   * @see #getExport()
   * @generated
   */
  void setExport(Export value);

  /**
   * Returns the value of the '<em><b>Imports</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Imports</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Imports</em>' containment reference.
   * @see #setImports(Import)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Imports()
   * @model containment="true"
   * @generated
   */
  Import getImports();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getImports <em>Imports</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Imports</em>' containment reference.
   * @see #getImports()
   * @generated
   */
  void setImports(Import value);

  /**
   * Returns the value of the '<em><b>Global</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Global</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Global</em>' containment reference.
   * @see #setGlobal(Global)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Global()
   * @model containment="true"
   * @generated
   */
  Global getGlobal();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getGlobal <em>Global</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Global</em>' containment reference.
   * @see #getGlobal()
   * @generated
   */
  void setGlobal(Global value);

  /**
   * Returns the value of the '<em><b>Local</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Local</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Local</em>' containment reference.
   * @see #setLocal(Local)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Local()
   * @model containment="true"
   * @generated
   */
  Local getLocal();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getLocal <em>Local</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Local</em>' containment reference.
   * @see #getLocal()
   * @generated
   */
  void setLocal(Local value);

  /**
   * Returns the value of the '<em><b>Default</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Default</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Default</em>' containment reference.
   * @see #setDefault(Default)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Default()
   * @model containment="true"
   * @generated
   */
  Default getDefault();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getDefault <em>Default</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Default</em>' containment reference.
   * @see #getDefault()
   * @generated
   */
  void setDefault(Default value);

  /**
   * Returns the value of the '<em><b>Eof</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Eof</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Eof</em>' containment reference.
   * @see #setEof(Eof)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Eof()
   * @model containment="true"
   * @generated
   */
  Eof getEof();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getEof <em>Eof</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Eof</em>' containment reference.
   * @see #getEof()
   * @generated
   */
  void setEof(Eof value);

  /**
   * Returns the value of the '<em><b>Begin</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Begin</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Begin</em>' containment reference.
   * @see #setBegin(Begin)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Begin()
   * @model containment="true"
   * @generated
   */
  Begin getBegin();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getBegin <em>Begin</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Begin</em>' containment reference.
   * @see #getBegin()
   * @generated
   */
  void setBegin(Begin value);

  /**
   * Returns the value of the '<em><b>Close</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Close</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Close</em>' containment reference.
   * @see #setClose(Close)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Close()
   * @model containment="true"
   * @generated
   */
  Close getClose();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getClose <em>Close</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Close</em>' containment reference.
   * @see #getClose()
   * @generated
   */
  void setClose(Close value);

  /**
   * Returns the value of the '<em><b>Define</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Define</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Define</em>' containment reference.
   * @see #setDefine(Define)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Define()
   * @model containment="true"
   * @generated
   */
  Define getDefine();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getDefine <em>Define</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Define</em>' containment reference.
   * @see #getDefine()
   * @generated
   */
  void setDefine(Define value);

  /**
   * Returns the value of the '<em><b>States</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>States</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>States</em>' containment reference.
   * @see #setStates(StartStates)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_States()
   * @model containment="true"
   * @generated
   */
  StartStates getStates();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getStates <em>States</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>States</em>' containment reference.
   * @see #getStates()
   * @generated
   */
  void setStates(StartStates value);

  /**
   * Returns the value of the '<em><b>Rules</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Rules</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Rules</em>' containment reference.
   * @see #setRules(Rule)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Rules()
   * @model containment="true"
   * @generated
   */
  Rule getRules();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getRules <em>Rules</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Rules</em>' containment reference.
   * @see #getRules()
   * @generated
   */
  void setRules(Rule value);

  /**
   * Returns the value of the '<em><b>Insert</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Insert</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Insert</em>' containment reference.
   * @see #setInsert(RuleInsert)
   * @see de.roma.cocktail.xtext.rpp.RppPackage#getModel_Insert()
   * @model containment="true"
   * @generated
   */
  RuleInsert getInsert();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.rpp.Model#getInsert <em>Insert</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Insert</em>' containment reference.
   * @see #getInsert()
   * @generated
   */
  void setInsert(RuleInsert value);

} // Model
