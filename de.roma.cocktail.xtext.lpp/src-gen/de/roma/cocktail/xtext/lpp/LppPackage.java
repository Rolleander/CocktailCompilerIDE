/**
 * generated by Xtext 2.9.1
 */
package de.roma.cocktail.xtext.lpp;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.roma.cocktail.xtext.lpp.LppFactory
 * @model kind="package"
 * @generated
 */
public interface LppPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "lpp";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.roma.de/cocktail/xtext/Lpp";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "lpp";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  LppPackage eINSTANCE = de.roma.cocktail.xtext.lpp.impl.LppPackageImpl.init();

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ParserModelImpl <em>Parser Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ParserModelImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getParserModel()
   * @generated
   */
  int PARSER_MODEL = 0;

  /**
   * The feature id for the '<em><b>Scanner</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__SCANNER = 0;

  /**
   * The feature id for the '<em><b>Parser</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__PARSER = 1;

  /**
   * The feature id for the '<em><b>Import Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__IMPORT_BLOCK = 2;

  /**
   * The feature id for the '<em><b>Export Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__EXPORT_BLOCK = 3;

  /**
   * The feature id for the '<em><b>Global Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__GLOBAL_BLOCK = 4;

  /**
   * The feature id for the '<em><b>Local Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__LOCAL_BLOCK = 5;

  /**
   * The feature id for the '<em><b>Begin Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__BEGIN_BLOCK = 6;

  /**
   * The feature id for the '<em><b>Close Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__CLOSE_BLOCK = 7;

  /**
   * The feature id for the '<em><b>Tokens</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__TOKENS = 8;

  /**
   * The feature id for the '<em><b>Precedenc</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__PRECEDENC = 9;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__START = 10;

  /**
   * The feature id for the '<em><b>Rules</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL__RULES = 11;

  /**
   * The number of structural features of the '<em>Parser Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_MODEL_FEATURE_COUNT = 12;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ScannerNameImpl <em>Scanner Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ScannerNameImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getScannerName()
   * @generated
   */
  int SCANNER_NAME = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCANNER_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Scanner Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCANNER_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ParserNameImpl <em>Parser Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ParserNameImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getParserName()
   * @generated
   */
  int PARSER_NAME = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Parser Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ImportImpl <em>Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ImportImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getImport()
   * @generated
   */
  int IMPORT = 3;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ExportImpl <em>Export</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ExportImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getExport()
   * @generated
   */
  int EXPORT = 4;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Export</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.GlobalImpl <em>Global</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.GlobalImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGlobal()
   * @generated
   */
  int GLOBAL = 5;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GLOBAL__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Global</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GLOBAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.LocalImpl <em>Local</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.LocalImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getLocal()
   * @generated
   */
  int LOCAL = 6;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Local</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.BeginImpl <em>Begin</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.BeginImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getBegin()
   * @generated
   */
  int BEGIN = 7;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEGIN__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Begin</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEGIN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.CloseImpl <em>Close</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.CloseImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getClose()
   * @generated
   */
  int CLOSE = 8;

  /**
   * The feature id for the '<em><b>Content</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLOSE__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Close</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLOSE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.TokensImpl <em>Tokens</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.TokensImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getTokens()
   * @generated
   */
  int TOKENS = 9;

  /**
   * The feature id for the '<em><b>Tokens</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOKENS__TOKENS = 0;

  /**
   * The number of structural features of the '<em>Tokens</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOKENS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.GrammerReferenceImpl <em>Grammer Reference</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.GrammerReferenceImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGrammerReference()
   * @generated
   */
  int GRAMMER_REFERENCE = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMER_REFERENCE__NAME = 0;

  /**
   * The number of structural features of the '<em>Grammer Reference</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMER_REFERENCE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.DefinedTokenImpl <em>Defined Token</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.DefinedTokenImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getDefinedToken()
   * @generated
   */
  int DEFINED_TOKEN = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINED_TOKEN__NAME = GRAMMER_REFERENCE__NAME;

  /**
   * The feature id for the '<em><b>Number</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINED_TOKEN__NUMBER = GRAMMER_REFERENCE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Extra</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINED_TOKEN__EXTRA = GRAMMER_REFERENCE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Defined Token</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEFINED_TOKEN_FEATURE_COUNT = GRAMMER_REFERENCE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.TokenExtraImpl <em>Token Extra</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.TokenExtraImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getTokenExtra()
   * @generated
   */
  int TOKEN_EXTRA = 11;

  /**
   * The feature id for the '<em><b>Cost</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOKEN_EXTRA__COST = 0;

  /**
   * The feature id for the '<em><b>Presentation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOKEN_EXTRA__PRESENTATION = 1;

  /**
   * The number of structural features of the '<em>Token Extra</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOKEN_EXTRA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.PrecedenceImpl <em>Precedence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.PrecedenceImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedence()
   * @generated
   */
  int PRECEDENCE = 12;

  /**
   * The feature id for the '<em><b>Rows</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE__ROWS = 0;

  /**
   * The number of structural features of the '<em>Precedence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.PrecedenceRowImpl <em>Precedence Row</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.PrecedenceRowImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedenceRow()
   * @generated
   */
  int PRECEDENCE_ROW = 13;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE_ROW__TYPE = 0;

  /**
   * The feature id for the '<em><b>Tokens</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE_ROW__TOKENS = 1;

  /**
   * The number of structural features of the '<em>Precedence Row</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE_ROW_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.StartSymbolsImpl <em>Start Symbols</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.StartSymbolsImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getStartSymbols()
   * @generated
   */
  int START_SYMBOLS = 14;

  /**
   * The feature id for the '<em><b>States</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_SYMBOLS__STATES = 0;

  /**
   * The number of structural features of the '<em>Start Symbols</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_SYMBOLS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.StartStateImpl <em>Start State</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.StartStateImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getStartState()
   * @generated
   */
  int START_STATE = 15;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_STATE__NAME = 0;

  /**
   * The number of structural features of the '<em>Start State</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_STATE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.GrammarRulesImpl <em>Grammar Rules</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.GrammarRulesImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGrammarRules()
   * @generated
   */
  int GRAMMAR_RULES = 16;

  /**
   * The feature id for the '<em><b>Rules</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULES__RULES = 0;

  /**
   * The number of structural features of the '<em>Grammar Rules</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.GrammarRuleImpl <em>Grammar Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.GrammarRuleImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGrammarRule()
   * @generated
   */
  int GRAMMAR_RULE = 18;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULE__NAME = GRAMMER_REFERENCE__NAME;

  /**
   * The feature id for the '<em><b>Rules</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULE__RULES = GRAMMER_REFERENCE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Grammar Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULE_FEATURE_COUNT = GRAMMER_REFERENCE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.SimpleRuleImpl <em>Simple Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.SimpleRuleImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getSimpleRule()
   * @generated
   */
  int SIMPLE_RULE = 19;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_RULE__NAME = 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_RULE__BODY = 1;

  /**
   * The feature id for the '<em><b>Rules</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_RULE__RULES = 2;

  /**
   * The number of structural features of the '<em>Simple Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_RULE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.RuleBodyImpl <em>Rule Body</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.RuleBodyImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getRuleBody()
   * @generated
   */
  int RULE_BODY = 20;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_BODY__PART = 0;

  /**
   * The feature id for the '<em><b>Code</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_BODY__CODE = 1;

  /**
   * The number of structural features of the '<em>Rule Body</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_BODY_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.RuleContentImpl <em>Rule Content</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.RuleContentImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getRuleContent()
   * @generated
   */
  int RULE_CONTENT = 21;

  /**
   * The feature id for the '<em><b>Regex</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_CONTENT__REGEX = 0;

  /**
   * The feature id for the '<em><b>Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_CONTENT__REF = 1;

  /**
   * The number of structural features of the '<em>Rule Content</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_CONTENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.RulePartImpl <em>Rule Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.RulePartImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getRulePart()
   * @generated
   */
  int RULE_PART = 22;

  /**
   * The feature id for the '<em><b>Content</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_PART__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Rule Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.PrecedenceType <em>Precedence Type</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.PrecedenceType
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedenceType()
   * @generated
   */
  int PRECEDENCE_TYPE = 23;


  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.ParserModel <em>Parser Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parser Model</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel
   * @generated
   */
  EClass getParserModel();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getScanner <em>Scanner</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Scanner</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getScanner()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_Scanner();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getParser <em>Parser</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parser</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getParser()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_Parser();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getImportBlock <em>Import Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Import Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getImportBlock()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_ImportBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getExportBlock <em>Export Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Export Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getExportBlock()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_ExportBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getGlobalBlock <em>Global Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Global Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getGlobalBlock()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_GlobalBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getLocalBlock <em>Local Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Local Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getLocalBlock()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_LocalBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getBeginBlock <em>Begin Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Begin Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getBeginBlock()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_BeginBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getCloseBlock <em>Close Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Close Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getCloseBlock()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_CloseBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getTokens <em>Tokens</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tokens</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getTokens()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_Tokens();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getPrecedenc <em>Precedenc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Precedenc</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getPrecedenc()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_Precedenc();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getStart <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Start</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getStart()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_Start();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ParserModel#getRules <em>Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rules</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserModel#getRules()
   * @see #getParserModel()
   * @generated
   */
  EReference getParserModel_Rules();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.ScannerName <em>Scanner Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Scanner Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.ScannerName
   * @generated
   */
  EClass getScannerName();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.ScannerName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.ScannerName#getName()
   * @see #getScannerName()
   * @generated
   */
  EAttribute getScannerName_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.ParserName <em>Parser Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parser Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserName
   * @generated
   */
  EClass getParserName();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.ParserName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserName#getName()
   * @see #getParserName()
   * @generated
   */
  EAttribute getParserName_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import</em>'.
   * @see de.roma.cocktail.xtext.lpp.Import
   * @generated
   */
  EClass getImport();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.Import#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Import#getContent()
   * @see #getImport()
   * @generated
   */
  EAttribute getImport_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Export <em>Export</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Export</em>'.
   * @see de.roma.cocktail.xtext.lpp.Export
   * @generated
   */
  EClass getExport();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.Export#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Export#getContent()
   * @see #getExport()
   * @generated
   */
  EAttribute getExport_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Global <em>Global</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Global</em>'.
   * @see de.roma.cocktail.xtext.lpp.Global
   * @generated
   */
  EClass getGlobal();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.Global#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Global#getContent()
   * @see #getGlobal()
   * @generated
   */
  EAttribute getGlobal_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Local <em>Local</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Local</em>'.
   * @see de.roma.cocktail.xtext.lpp.Local
   * @generated
   */
  EClass getLocal();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.Local#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Local#getContent()
   * @see #getLocal()
   * @generated
   */
  EAttribute getLocal_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Begin <em>Begin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Begin</em>'.
   * @see de.roma.cocktail.xtext.lpp.Begin
   * @generated
   */
  EClass getBegin();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.Begin#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Begin#getContent()
   * @see #getBegin()
   * @generated
   */
  EAttribute getBegin_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Close <em>Close</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Close</em>'.
   * @see de.roma.cocktail.xtext.lpp.Close
   * @generated
   */
  EClass getClose();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.Close#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Close#getContent()
   * @see #getClose()
   * @generated
   */
  EAttribute getClose_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Tokens <em>Tokens</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tokens</em>'.
   * @see de.roma.cocktail.xtext.lpp.Tokens
   * @generated
   */
  EClass getTokens();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.Tokens#getTokens <em>Tokens</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Tokens</em>'.
   * @see de.roma.cocktail.xtext.lpp.Tokens#getTokens()
   * @see #getTokens()
   * @generated
   */
  EReference getTokens_Tokens();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.DefinedToken <em>Defined Token</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Defined Token</em>'.
   * @see de.roma.cocktail.xtext.lpp.DefinedToken
   * @generated
   */
  EClass getDefinedToken();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.DefinedToken#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Number</em>'.
   * @see de.roma.cocktail.xtext.lpp.DefinedToken#getNumber()
   * @see #getDefinedToken()
   * @generated
   */
  EAttribute getDefinedToken_Number();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.DefinedToken#getExtra <em>Extra</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Extra</em>'.
   * @see de.roma.cocktail.xtext.lpp.DefinedToken#getExtra()
   * @see #getDefinedToken()
   * @generated
   */
  EReference getDefinedToken_Extra();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.TokenExtra <em>Token Extra</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Token Extra</em>'.
   * @see de.roma.cocktail.xtext.lpp.TokenExtra
   * @generated
   */
  EClass getTokenExtra();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.TokenExtra#getCost <em>Cost</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cost</em>'.
   * @see de.roma.cocktail.xtext.lpp.TokenExtra#getCost()
   * @see #getTokenExtra()
   * @generated
   */
  EAttribute getTokenExtra_Cost();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.TokenExtra#getPresentation <em>Presentation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Presentation</em>'.
   * @see de.roma.cocktail.xtext.lpp.TokenExtra#getPresentation()
   * @see #getTokenExtra()
   * @generated
   */
  EAttribute getTokenExtra_Presentation();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Precedence <em>Precedence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Precedence</em>'.
   * @see de.roma.cocktail.xtext.lpp.Precedence
   * @generated
   */
  EClass getPrecedence();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.Precedence#getRows <em>Rows</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rows</em>'.
   * @see de.roma.cocktail.xtext.lpp.Precedence#getRows()
   * @see #getPrecedence()
   * @generated
   */
  EReference getPrecedence_Rows();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.PrecedenceRow <em>Precedence Row</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Precedence Row</em>'.
   * @see de.roma.cocktail.xtext.lpp.PrecedenceRow
   * @generated
   */
  EClass getPrecedenceRow();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.PrecedenceRow#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see de.roma.cocktail.xtext.lpp.PrecedenceRow#getType()
   * @see #getPrecedenceRow()
   * @generated
   */
  EAttribute getPrecedenceRow_Type();

  /**
   * Returns the meta object for the reference list '{@link de.roma.cocktail.xtext.lpp.PrecedenceRow#getTokens <em>Tokens</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Tokens</em>'.
   * @see de.roma.cocktail.xtext.lpp.PrecedenceRow#getTokens()
   * @see #getPrecedenceRow()
   * @generated
   */
  EReference getPrecedenceRow_Tokens();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.StartSymbols <em>Start Symbols</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Start Symbols</em>'.
   * @see de.roma.cocktail.xtext.lpp.StartSymbols
   * @generated
   */
  EClass getStartSymbols();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.StartSymbols#getStates <em>States</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>States</em>'.
   * @see de.roma.cocktail.xtext.lpp.StartSymbols#getStates()
   * @see #getStartSymbols()
   * @generated
   */
  EReference getStartSymbols_States();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.StartState <em>Start State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Start State</em>'.
   * @see de.roma.cocktail.xtext.lpp.StartState
   * @generated
   */
  EClass getStartState();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.StartState#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.StartState#getName()
   * @see #getStartState()
   * @generated
   */
  EAttribute getStartState_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.GrammarRules <em>Grammar Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Grammar Rules</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRules
   * @generated
   */
  EClass getGrammarRules();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.GrammarRules#getRules <em>Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rules</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRules#getRules()
   * @see #getGrammarRules()
   * @generated
   */
  EReference getGrammarRules_Rules();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.GrammerReference <em>Grammer Reference</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Grammer Reference</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammerReference
   * @generated
   */
  EClass getGrammerReference();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.GrammerReference#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammerReference#getName()
   * @see #getGrammerReference()
   * @generated
   */
  EAttribute getGrammerReference_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.GrammarRule <em>Grammar Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Grammar Rule</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRule
   * @generated
   */
  EClass getGrammarRule();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.GrammarRule#getRules <em>Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rules</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRule#getRules()
   * @see #getGrammarRule()
   * @generated
   */
  EReference getGrammarRule_Rules();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.SimpleRule <em>Simple Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Rule</em>'.
   * @see de.roma.cocktail.xtext.lpp.SimpleRule
   * @generated
   */
  EClass getSimpleRule();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.SimpleRule#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.SimpleRule#getName()
   * @see #getSimpleRule()
   * @generated
   */
  EAttribute getSimpleRule_Name();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.SimpleRule#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Body</em>'.
   * @see de.roma.cocktail.xtext.lpp.SimpleRule#getBody()
   * @see #getSimpleRule()
   * @generated
   */
  EReference getSimpleRule_Body();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.SimpleRule#getRules <em>Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rules</em>'.
   * @see de.roma.cocktail.xtext.lpp.SimpleRule#getRules()
   * @see #getSimpleRule()
   * @generated
   */
  EReference getSimpleRule_Rules();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.RuleBody <em>Rule Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rule Body</em>'.
   * @see de.roma.cocktail.xtext.lpp.RuleBody
   * @generated
   */
  EClass getRuleBody();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.RuleBody#getPart <em>Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Part</em>'.
   * @see de.roma.cocktail.xtext.lpp.RuleBody#getPart()
   * @see #getRuleBody()
   * @generated
   */
  EReference getRuleBody_Part();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.RuleBody#getCode <em>Code</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Code</em>'.
   * @see de.roma.cocktail.xtext.lpp.RuleBody#getCode()
   * @see #getRuleBody()
   * @generated
   */
  EAttribute getRuleBody_Code();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.RuleContent <em>Rule Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rule Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.RuleContent
   * @generated
   */
  EClass getRuleContent();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.RuleContent#getRegex <em>Regex</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Regex</em>'.
   * @see de.roma.cocktail.xtext.lpp.RuleContent#getRegex()
   * @see #getRuleContent()
   * @generated
   */
  EAttribute getRuleContent_Regex();

  /**
   * Returns the meta object for the reference '{@link de.roma.cocktail.xtext.lpp.RuleContent#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Ref</em>'.
   * @see de.roma.cocktail.xtext.lpp.RuleContent#getRef()
   * @see #getRuleContent()
   * @generated
   */
  EReference getRuleContent_Ref();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.RulePart <em>Rule Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rule Part</em>'.
   * @see de.roma.cocktail.xtext.lpp.RulePart
   * @generated
   */
  EClass getRulePart();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.RulePart#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.RulePart#getContent()
   * @see #getRulePart()
   * @generated
   */
  EReference getRulePart_Content();

  /**
   * Returns the meta object for enum '{@link de.roma.cocktail.xtext.lpp.PrecedenceType <em>Precedence Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Precedence Type</em>'.
   * @see de.roma.cocktail.xtext.lpp.PrecedenceType
   * @generated
   */
  EEnum getPrecedenceType();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  LppFactory getLppFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ParserModelImpl <em>Parser Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ParserModelImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getParserModel()
     * @generated
     */
    EClass PARSER_MODEL = eINSTANCE.getParserModel();

    /**
     * The meta object literal for the '<em><b>Scanner</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__SCANNER = eINSTANCE.getParserModel_Scanner();

    /**
     * The meta object literal for the '<em><b>Parser</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__PARSER = eINSTANCE.getParserModel_Parser();

    /**
     * The meta object literal for the '<em><b>Import Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__IMPORT_BLOCK = eINSTANCE.getParserModel_ImportBlock();

    /**
     * The meta object literal for the '<em><b>Export Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__EXPORT_BLOCK = eINSTANCE.getParserModel_ExportBlock();

    /**
     * The meta object literal for the '<em><b>Global Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__GLOBAL_BLOCK = eINSTANCE.getParserModel_GlobalBlock();

    /**
     * The meta object literal for the '<em><b>Local Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__LOCAL_BLOCK = eINSTANCE.getParserModel_LocalBlock();

    /**
     * The meta object literal for the '<em><b>Begin Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__BEGIN_BLOCK = eINSTANCE.getParserModel_BeginBlock();

    /**
     * The meta object literal for the '<em><b>Close Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__CLOSE_BLOCK = eINSTANCE.getParserModel_CloseBlock();

    /**
     * The meta object literal for the '<em><b>Tokens</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__TOKENS = eINSTANCE.getParserModel_Tokens();

    /**
     * The meta object literal for the '<em><b>Precedenc</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__PRECEDENC = eINSTANCE.getParserModel_Precedenc();

    /**
     * The meta object literal for the '<em><b>Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__START = eINSTANCE.getParserModel_Start();

    /**
     * The meta object literal for the '<em><b>Rules</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER_MODEL__RULES = eINSTANCE.getParserModel_Rules();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ScannerNameImpl <em>Scanner Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ScannerNameImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getScannerName()
     * @generated
     */
    EClass SCANNER_NAME = eINSTANCE.getScannerName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SCANNER_NAME__NAME = eINSTANCE.getScannerName_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ParserNameImpl <em>Parser Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ParserNameImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getParserName()
     * @generated
     */
    EClass PARSER_NAME = eINSTANCE.getParserName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARSER_NAME__NAME = eINSTANCE.getParserName_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ImportImpl <em>Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ImportImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getImport()
     * @generated
     */
    EClass IMPORT = eINSTANCE.getImport();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT__CONTENT = eINSTANCE.getImport_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ExportImpl <em>Export</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ExportImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getExport()
     * @generated
     */
    EClass EXPORT = eINSTANCE.getExport();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPORT__CONTENT = eINSTANCE.getExport_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.GlobalImpl <em>Global</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.GlobalImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGlobal()
     * @generated
     */
    EClass GLOBAL = eINSTANCE.getGlobal();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GLOBAL__CONTENT = eINSTANCE.getGlobal_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.LocalImpl <em>Local</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.LocalImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getLocal()
     * @generated
     */
    EClass LOCAL = eINSTANCE.getLocal();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCAL__CONTENT = eINSTANCE.getLocal_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.BeginImpl <em>Begin</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.BeginImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getBegin()
     * @generated
     */
    EClass BEGIN = eINSTANCE.getBegin();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BEGIN__CONTENT = eINSTANCE.getBegin_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.CloseImpl <em>Close</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.CloseImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getClose()
     * @generated
     */
    EClass CLOSE = eINSTANCE.getClose();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLOSE__CONTENT = eINSTANCE.getClose_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.TokensImpl <em>Tokens</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.TokensImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getTokens()
     * @generated
     */
    EClass TOKENS = eINSTANCE.getTokens();

    /**
     * The meta object literal for the '<em><b>Tokens</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TOKENS__TOKENS = eINSTANCE.getTokens_Tokens();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.DefinedTokenImpl <em>Defined Token</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.DefinedTokenImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getDefinedToken()
     * @generated
     */
    EClass DEFINED_TOKEN = eINSTANCE.getDefinedToken();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DEFINED_TOKEN__NUMBER = eINSTANCE.getDefinedToken_Number();

    /**
     * The meta object literal for the '<em><b>Extra</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEFINED_TOKEN__EXTRA = eINSTANCE.getDefinedToken_Extra();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.TokenExtraImpl <em>Token Extra</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.TokenExtraImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getTokenExtra()
     * @generated
     */
    EClass TOKEN_EXTRA = eINSTANCE.getTokenExtra();

    /**
     * The meta object literal for the '<em><b>Cost</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TOKEN_EXTRA__COST = eINSTANCE.getTokenExtra_Cost();

    /**
     * The meta object literal for the '<em><b>Presentation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TOKEN_EXTRA__PRESENTATION = eINSTANCE.getTokenExtra_Presentation();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.PrecedenceImpl <em>Precedence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.PrecedenceImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedence()
     * @generated
     */
    EClass PRECEDENCE = eINSTANCE.getPrecedence();

    /**
     * The meta object literal for the '<em><b>Rows</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRECEDENCE__ROWS = eINSTANCE.getPrecedence_Rows();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.PrecedenceRowImpl <em>Precedence Row</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.PrecedenceRowImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedenceRow()
     * @generated
     */
    EClass PRECEDENCE_ROW = eINSTANCE.getPrecedenceRow();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRECEDENCE_ROW__TYPE = eINSTANCE.getPrecedenceRow_Type();

    /**
     * The meta object literal for the '<em><b>Tokens</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRECEDENCE_ROW__TOKENS = eINSTANCE.getPrecedenceRow_Tokens();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.StartSymbolsImpl <em>Start Symbols</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.StartSymbolsImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getStartSymbols()
     * @generated
     */
    EClass START_SYMBOLS = eINSTANCE.getStartSymbols();

    /**
     * The meta object literal for the '<em><b>States</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference START_SYMBOLS__STATES = eINSTANCE.getStartSymbols_States();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.StartStateImpl <em>Start State</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.StartStateImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getStartState()
     * @generated
     */
    EClass START_STATE = eINSTANCE.getStartState();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute START_STATE__NAME = eINSTANCE.getStartState_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.GrammarRulesImpl <em>Grammar Rules</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.GrammarRulesImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGrammarRules()
     * @generated
     */
    EClass GRAMMAR_RULES = eINSTANCE.getGrammarRules();

    /**
     * The meta object literal for the '<em><b>Rules</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAMMAR_RULES__RULES = eINSTANCE.getGrammarRules_Rules();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.GrammerReferenceImpl <em>Grammer Reference</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.GrammerReferenceImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGrammerReference()
     * @generated
     */
    EClass GRAMMER_REFERENCE = eINSTANCE.getGrammerReference();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GRAMMER_REFERENCE__NAME = eINSTANCE.getGrammerReference_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.GrammarRuleImpl <em>Grammar Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.GrammarRuleImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGrammarRule()
     * @generated
     */
    EClass GRAMMAR_RULE = eINSTANCE.getGrammarRule();

    /**
     * The meta object literal for the '<em><b>Rules</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAMMAR_RULE__RULES = eINSTANCE.getGrammarRule_Rules();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.SimpleRuleImpl <em>Simple Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.SimpleRuleImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getSimpleRule()
     * @generated
     */
    EClass SIMPLE_RULE = eINSTANCE.getSimpleRule();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_RULE__NAME = eINSTANCE.getSimpleRule_Name();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_RULE__BODY = eINSTANCE.getSimpleRule_Body();

    /**
     * The meta object literal for the '<em><b>Rules</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_RULE__RULES = eINSTANCE.getSimpleRule_Rules();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.RuleBodyImpl <em>Rule Body</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.RuleBodyImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getRuleBody()
     * @generated
     */
    EClass RULE_BODY = eINSTANCE.getRuleBody();

    /**
     * The meta object literal for the '<em><b>Part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE_BODY__PART = eINSTANCE.getRuleBody_Part();

    /**
     * The meta object literal for the '<em><b>Code</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RULE_BODY__CODE = eINSTANCE.getRuleBody_Code();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.RuleContentImpl <em>Rule Content</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.RuleContentImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getRuleContent()
     * @generated
     */
    EClass RULE_CONTENT = eINSTANCE.getRuleContent();

    /**
     * The meta object literal for the '<em><b>Regex</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RULE_CONTENT__REGEX = eINSTANCE.getRuleContent_Regex();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE_CONTENT__REF = eINSTANCE.getRuleContent_Ref();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.RulePartImpl <em>Rule Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.RulePartImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getRulePart()
     * @generated
     */
    EClass RULE_PART = eINSTANCE.getRulePart();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE_PART__CONTENT = eINSTANCE.getRulePart_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.PrecedenceType <em>Precedence Type</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.PrecedenceType
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedenceType()
     * @generated
     */
    EEnum PRECEDENCE_TYPE = eINSTANCE.getPrecedenceType();

  }

} //LppPackage
