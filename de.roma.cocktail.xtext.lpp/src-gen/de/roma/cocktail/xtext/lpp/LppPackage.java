/**
 * generated by Xtext 2.9.2
 */
package de.roma.cocktail.xtext.lpp;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.roma.cocktail.xtext.lpp.LppFactory
 * @model kind="package"
 * @generated
 */
public interface LppPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "lpp";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.roma.de/cocktail/xtext/Lpp";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "lpp";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  LppPackage eINSTANCE = de.roma.cocktail.xtext.lpp.impl.LppPackageImpl.init();

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ParserImpl <em>Parser</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ParserImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getParser()
   * @generated
   */
  int PARSER = 0;

  /**
   * The feature id for the '<em><b>Scanner</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__SCANNER = 0;

  /**
   * The feature id for the '<em><b>Parser</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__PARSER = 1;

  /**
   * The feature id for the '<em><b>Import Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__IMPORT_BLOCK = 2;

  /**
   * The feature id for the '<em><b>Export Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__EXPORT_BLOCK = 3;

  /**
   * The feature id for the '<em><b>Global Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__GLOBAL_BLOCK = 4;

  /**
   * The feature id for the '<em><b>Local Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__LOCAL_BLOCK = 5;

  /**
   * The feature id for the '<em><b>Begin Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__BEGIN_BLOCK = 6;

  /**
   * The feature id for the '<em><b>Close Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__CLOSE_BLOCK = 7;

  /**
   * The feature id for the '<em><b>Precedence</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__PRECEDENCE = 8;

  /**
   * The feature id for the '<em><b>Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__START = 9;

  /**
   * The feature id for the '<em><b>Rules</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER__RULES = 10;

  /**
   * The number of structural features of the '<em>Parser</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_FEATURE_COUNT = 11;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ScannerNameImpl <em>Scanner Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ScannerNameImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getScannerName()
   * @generated
   */
  int SCANNER_NAME = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCANNER_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Scanner Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCANNER_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ParserNameImpl <em>Parser Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ParserNameImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getParserName()
   * @generated
   */
  int PARSER_NAME = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Parser Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARSER_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ImportImpl <em>Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ImportImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getImport()
   * @generated
   */
  int IMPORT = 3;

  /**
   * The feature id for the '<em><b>Content</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ExportImpl <em>Export</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ExportImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getExport()
   * @generated
   */
  int EXPORT = 4;

  /**
   * The feature id for the '<em><b>Content</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Export</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.GlobalImpl <em>Global</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.GlobalImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGlobal()
   * @generated
   */
  int GLOBAL = 5;

  /**
   * The feature id for the '<em><b>Content</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GLOBAL__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Global</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GLOBAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.LocalImpl <em>Local</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.LocalImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getLocal()
   * @generated
   */
  int LOCAL = 6;

  /**
   * The feature id for the '<em><b>Content</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Local</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.BeginImpl <em>Begin</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.BeginImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getBegin()
   * @generated
   */
  int BEGIN = 7;

  /**
   * The feature id for the '<em><b>Content</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEGIN__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Begin</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEGIN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.CloseImpl <em>Close</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.CloseImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getClose()
   * @generated
   */
  int CLOSE = 8;

  /**
   * The feature id for the '<em><b>Content</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLOSE__CONTENT = 0;

  /**
   * The number of structural features of the '<em>Close</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLOSE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.TokenExtraImpl <em>Token Extra</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.TokenExtraImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getTokenExtra()
   * @generated
   */
  int TOKEN_EXTRA = 9;

  /**
   * The feature id for the '<em><b>Cost</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOKEN_EXTRA__COST = 0;

  /**
   * The feature id for the '<em><b>Presentation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOKEN_EXTRA__PRESENTATION = 1;

  /**
   * The number of structural features of the '<em>Token Extra</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TOKEN_EXTRA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.CodeBlockImpl <em>Code Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.CodeBlockImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getCodeBlock()
   * @generated
   */
  int CODE_BLOCK = 10;

  /**
   * The feature id for the '<em><b>Wall</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CODE_BLOCK__WALL = 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CODE_BLOCK__BLOCK = 1;

  /**
   * The number of structural features of the '<em>Code Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CODE_BLOCK_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.PrecedenceImpl <em>Precedence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.PrecedenceImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedence()
   * @generated
   */
  int PRECEDENCE = 11;

  /**
   * The feature id for the '<em><b>Rows</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE__ROWS = 0;

  /**
   * The number of structural features of the '<em>Precedence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.PrecedenceRowImpl <em>Precedence Row</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.PrecedenceRowImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedenceRow()
   * @generated
   */
  int PRECEDENCE_ROW = 12;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE_ROW__TYPE = 0;

  /**
   * The feature id for the '<em><b>Strings</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE_ROW__STRINGS = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE_ROW__NAME = 2;

  /**
   * The number of structural features of the '<em>Precedence Row</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE_ROW_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.StartSymbolsImpl <em>Start Symbols</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.StartSymbolsImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getStartSymbols()
   * @generated
   */
  int START_SYMBOLS = 13;

  /**
   * The feature id for the '<em><b>States</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_SYMBOLS__STATES = 0;

  /**
   * The number of structural features of the '<em>Start Symbols</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_SYMBOLS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.StartStateImpl <em>Start State</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.StartStateImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getStartState()
   * @generated
   */
  int START_STATE = 14;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_STATE__NAME = 0;

  /**
   * The number of structural features of the '<em>Start State</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int START_STATE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.GrammarRulesImpl <em>Grammar Rules</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.GrammarRulesImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGrammarRules()
   * @generated
   */
  int GRAMMAR_RULES = 15;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULES__NODES = 0;

  /**
   * The number of structural features of the '<em>Grammar Rules</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.GrammarRuleImpl <em>Grammar Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.GrammarRuleImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGrammarRule()
   * @generated
   */
  int GRAMMAR_RULE = 16;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULE__NAME = 0;

  /**
   * The feature id for the '<em><b>Nodetype</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULE__NODETYPE = 1;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULE__PART = 2;

  /**
   * The feature id for the '<em><b>Token</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULE__TOKEN = 3;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULE__BLOCK = 4;

  /**
   * The feature id for the '<em><b>Extension</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULE__EXTENSION = 5;

  /**
   * The number of structural features of the '<em>Grammar Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GRAMMAR_RULE_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ExtensionRuleImpl <em>Extension Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ExtensionRuleImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getExtensionRule()
   * @generated
   */
  int EXTENSION_RULE = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_RULE__NAME = 0;

  /**
   * The feature id for the '<em><b>Nodetype</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_RULE__NODETYPE = 1;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_RULE__PART = 2;

  /**
   * The feature id for the '<em><b>Token</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_RULE__TOKEN = 3;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_RULE__BLOCK = 4;

  /**
   * The feature id for the '<em><b>Extension</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_RULE__EXTENSION = 5;

  /**
   * The number of structural features of the '<em>Extension Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSION_RULE_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.ExtensionsImpl <em>Extensions</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.ExtensionsImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getExtensions()
   * @generated
   */
  int EXTENSIONS = 18;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSIONS__NODES = 0;

  /**
   * The number of structural features of the '<em>Extensions</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSIONS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.NodePartImpl <em>Node Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.NodePartImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getNodePart()
   * @generated
   */
  int NODE_PART = 19;

  /**
   * The feature id for the '<em><b>Child</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PART__CHILD = 0;

  /**
   * The feature id for the '<em><b>Attribute</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PART__ATTRIBUTE = 1;

  /**
   * The number of structural features of the '<em>Node Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PART_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.NodeImpl <em>Node</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.NodeImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getNode()
   * @generated
   */
  int NODE = 20;

  /**
   * The feature id for the '<em><b>Selector</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__SELECTOR = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE__NAME = 1;

  /**
   * The number of structural features of the '<em>Node</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.NodeAttributeImpl <em>Node Attribute</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.NodeAttributeImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getNodeAttribute()
   * @generated
   */
  int NODE_ATTRIBUTE = 21;

  /**
   * The feature id for the '<em><b>Attribute</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_ATTRIBUTE__ATTRIBUTE = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_ATTRIBUTE__TYPE = 1;

  /**
   * The number of structural features of the '<em>Node Attribute</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_ATTRIBUTE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.impl.RuleNameImpl <em>Rule Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.impl.RuleNameImpl
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getRuleName()
   * @generated
   */
  int RULE_NAME = 22;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Rule Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.lpp.PrecedenceType <em>Precedence Type</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.lpp.PrecedenceType
   * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedenceType()
   * @generated
   */
  int PRECEDENCE_TYPE = 23;


  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Parser <em>Parser</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parser</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser
   * @generated
   */
  EClass getParser();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getScanner <em>Scanner</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Scanner</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getScanner()
   * @see #getParser()
   * @generated
   */
  EReference getParser_Scanner();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getParser <em>Parser</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parser</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getParser()
   * @see #getParser()
   * @generated
   */
  EReference getParser_Parser();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getImportBlock <em>Import Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Import Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getImportBlock()
   * @see #getParser()
   * @generated
   */
  EReference getParser_ImportBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getExportBlock <em>Export Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Export Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getExportBlock()
   * @see #getParser()
   * @generated
   */
  EReference getParser_ExportBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getGlobalBlock <em>Global Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Global Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getGlobalBlock()
   * @see #getParser()
   * @generated
   */
  EReference getParser_GlobalBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getLocalBlock <em>Local Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Local Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getLocalBlock()
   * @see #getParser()
   * @generated
   */
  EReference getParser_LocalBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getBeginBlock <em>Begin Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Begin Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getBeginBlock()
   * @see #getParser()
   * @generated
   */
  EReference getParser_BeginBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getCloseBlock <em>Close Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Close Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getCloseBlock()
   * @see #getParser()
   * @generated
   */
  EReference getParser_CloseBlock();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getPrecedence <em>Precedence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Precedence</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getPrecedence()
   * @see #getParser()
   * @generated
   */
  EReference getParser_Precedence();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getStart <em>Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Start</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getStart()
   * @see #getParser()
   * @generated
   */
  EReference getParser_Start();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Parser#getRules <em>Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rules</em>'.
   * @see de.roma.cocktail.xtext.lpp.Parser#getRules()
   * @see #getParser()
   * @generated
   */
  EReference getParser_Rules();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.ScannerName <em>Scanner Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Scanner Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.ScannerName
   * @generated
   */
  EClass getScannerName();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.ScannerName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.ScannerName#getName()
   * @see #getScannerName()
   * @generated
   */
  EAttribute getScannerName_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.ParserName <em>Parser Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Parser Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserName
   * @generated
   */
  EClass getParserName();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.ParserName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.ParserName#getName()
   * @see #getParserName()
   * @generated
   */
  EAttribute getParserName_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import</em>'.
   * @see de.roma.cocktail.xtext.lpp.Import
   * @generated
   */
  EClass getImport();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Import#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Import#getContent()
   * @see #getImport()
   * @generated
   */
  EReference getImport_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Export <em>Export</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Export</em>'.
   * @see de.roma.cocktail.xtext.lpp.Export
   * @generated
   */
  EClass getExport();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Export#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Export#getContent()
   * @see #getExport()
   * @generated
   */
  EReference getExport_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Global <em>Global</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Global</em>'.
   * @see de.roma.cocktail.xtext.lpp.Global
   * @generated
   */
  EClass getGlobal();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Global#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Global#getContent()
   * @see #getGlobal()
   * @generated
   */
  EReference getGlobal_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Local <em>Local</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Local</em>'.
   * @see de.roma.cocktail.xtext.lpp.Local
   * @generated
   */
  EClass getLocal();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Local#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Local#getContent()
   * @see #getLocal()
   * @generated
   */
  EReference getLocal_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Begin <em>Begin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Begin</em>'.
   * @see de.roma.cocktail.xtext.lpp.Begin
   * @generated
   */
  EClass getBegin();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Begin#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Begin#getContent()
   * @see #getBegin()
   * @generated
   */
  EReference getBegin_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Close <em>Close</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Close</em>'.
   * @see de.roma.cocktail.xtext.lpp.Close
   * @generated
   */
  EClass getClose();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.Close#getContent <em>Content</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Content</em>'.
   * @see de.roma.cocktail.xtext.lpp.Close#getContent()
   * @see #getClose()
   * @generated
   */
  EReference getClose_Content();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.TokenExtra <em>Token Extra</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Token Extra</em>'.
   * @see de.roma.cocktail.xtext.lpp.TokenExtra
   * @generated
   */
  EClass getTokenExtra();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.TokenExtra#getCost <em>Cost</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cost</em>'.
   * @see de.roma.cocktail.xtext.lpp.TokenExtra#getCost()
   * @see #getTokenExtra()
   * @generated
   */
  EAttribute getTokenExtra_Cost();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.TokenExtra#getPresentation <em>Presentation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Presentation</em>'.
   * @see de.roma.cocktail.xtext.lpp.TokenExtra#getPresentation()
   * @see #getTokenExtra()
   * @generated
   */
  EAttribute getTokenExtra_Presentation();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.CodeBlock <em>Code Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Code Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.CodeBlock
   * @generated
   */
  EClass getCodeBlock();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.CodeBlock#getWall <em>Wall</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Wall</em>'.
   * @see de.roma.cocktail.xtext.lpp.CodeBlock#getWall()
   * @see #getCodeBlock()
   * @generated
   */
  EAttribute getCodeBlock_Wall();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.CodeBlock#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.CodeBlock#getBlock()
   * @see #getCodeBlock()
   * @generated
   */
  EReference getCodeBlock_Block();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Precedence <em>Precedence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Precedence</em>'.
   * @see de.roma.cocktail.xtext.lpp.Precedence
   * @generated
   */
  EClass getPrecedence();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.Precedence#getRows <em>Rows</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rows</em>'.
   * @see de.roma.cocktail.xtext.lpp.Precedence#getRows()
   * @see #getPrecedence()
   * @generated
   */
  EReference getPrecedence_Rows();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.PrecedenceRow <em>Precedence Row</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Precedence Row</em>'.
   * @see de.roma.cocktail.xtext.lpp.PrecedenceRow
   * @generated
   */
  EClass getPrecedenceRow();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.PrecedenceRow#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see de.roma.cocktail.xtext.lpp.PrecedenceRow#getType()
   * @see #getPrecedenceRow()
   * @generated
   */
  EAttribute getPrecedenceRow_Type();

  /**
   * Returns the meta object for the attribute list '{@link de.roma.cocktail.xtext.lpp.PrecedenceRow#getStrings <em>Strings</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Strings</em>'.
   * @see de.roma.cocktail.xtext.lpp.PrecedenceRow#getStrings()
   * @see #getPrecedenceRow()
   * @generated
   */
  EAttribute getPrecedenceRow_Strings();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.PrecedenceRow#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.PrecedenceRow#getName()
   * @see #getPrecedenceRow()
   * @generated
   */
  EAttribute getPrecedenceRow_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.StartSymbols <em>Start Symbols</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Start Symbols</em>'.
   * @see de.roma.cocktail.xtext.lpp.StartSymbols
   * @generated
   */
  EClass getStartSymbols();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.StartSymbols#getStates <em>States</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>States</em>'.
   * @see de.roma.cocktail.xtext.lpp.StartSymbols#getStates()
   * @see #getStartSymbols()
   * @generated
   */
  EReference getStartSymbols_States();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.StartState <em>Start State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Start State</em>'.
   * @see de.roma.cocktail.xtext.lpp.StartState
   * @generated
   */
  EClass getStartState();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.StartState#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.StartState#getName()
   * @see #getStartState()
   * @generated
   */
  EAttribute getStartState_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.GrammarRules <em>Grammar Rules</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Grammar Rules</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRules
   * @generated
   */
  EClass getGrammarRules();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.GrammarRules#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Nodes</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRules#getNodes()
   * @see #getGrammarRules()
   * @generated
   */
  EReference getGrammarRules_Nodes();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.GrammarRule <em>Grammar Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Grammar Rule</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRule
   * @generated
   */
  EClass getGrammarRule();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.GrammarRule#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRule#getName()
   * @see #getGrammarRule()
   * @generated
   */
  EReference getGrammarRule_Name();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.GrammarRule#getNodetype <em>Nodetype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nodetype</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRule#getNodetype()
   * @see #getGrammarRule()
   * @generated
   */
  EAttribute getGrammarRule_Nodetype();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.GrammarRule#getPart <em>Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Part</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRule#getPart()
   * @see #getGrammarRule()
   * @generated
   */
  EReference getGrammarRule_Part();

  /**
   * Returns the meta object for the reference '{@link de.roma.cocktail.xtext.lpp.GrammarRule#getToken <em>Token</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Token</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRule#getToken()
   * @see #getGrammarRule()
   * @generated
   */
  EReference getGrammarRule_Token();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.GrammarRule#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRule#getBlock()
   * @see #getGrammarRule()
   * @generated
   */
  EReference getGrammarRule_Block();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.GrammarRule#getExtension <em>Extension</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Extension</em>'.
   * @see de.roma.cocktail.xtext.lpp.GrammarRule#getExtension()
   * @see #getGrammarRule()
   * @generated
   */
  EReference getGrammarRule_Extension();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.ExtensionRule <em>Extension Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Extension Rule</em>'.
   * @see de.roma.cocktail.xtext.lpp.ExtensionRule
   * @generated
   */
  EClass getExtensionRule();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ExtensionRule#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.ExtensionRule#getName()
   * @see #getExtensionRule()
   * @generated
   */
  EReference getExtensionRule_Name();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.ExtensionRule#getNodetype <em>Nodetype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nodetype</em>'.
   * @see de.roma.cocktail.xtext.lpp.ExtensionRule#getNodetype()
   * @see #getExtensionRule()
   * @generated
   */
  EAttribute getExtensionRule_Nodetype();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.ExtensionRule#getPart <em>Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Part</em>'.
   * @see de.roma.cocktail.xtext.lpp.ExtensionRule#getPart()
   * @see #getExtensionRule()
   * @generated
   */
  EReference getExtensionRule_Part();

  /**
   * Returns the meta object for the reference '{@link de.roma.cocktail.xtext.lpp.ExtensionRule#getToken <em>Token</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Token</em>'.
   * @see de.roma.cocktail.xtext.lpp.ExtensionRule#getToken()
   * @see #getExtensionRule()
   * @generated
   */
  EReference getExtensionRule_Token();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ExtensionRule#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see de.roma.cocktail.xtext.lpp.ExtensionRule#getBlock()
   * @see #getExtensionRule()
   * @generated
   */
  EReference getExtensionRule_Block();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.ExtensionRule#getExtension <em>Extension</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Extension</em>'.
   * @see de.roma.cocktail.xtext.lpp.ExtensionRule#getExtension()
   * @see #getExtensionRule()
   * @generated
   */
  EReference getExtensionRule_Extension();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Extensions <em>Extensions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Extensions</em>'.
   * @see de.roma.cocktail.xtext.lpp.Extensions
   * @generated
   */
  EClass getExtensions();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.lpp.Extensions#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Nodes</em>'.
   * @see de.roma.cocktail.xtext.lpp.Extensions#getNodes()
   * @see #getExtensions()
   * @generated
   */
  EReference getExtensions_Nodes();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.NodePart <em>Node Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Part</em>'.
   * @see de.roma.cocktail.xtext.lpp.NodePart
   * @generated
   */
  EClass getNodePart();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.NodePart#getChild <em>Child</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Child</em>'.
   * @see de.roma.cocktail.xtext.lpp.NodePart#getChild()
   * @see #getNodePart()
   * @generated
   */
  EReference getNodePart_Child();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.lpp.NodePart#getAttribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attribute</em>'.
   * @see de.roma.cocktail.xtext.lpp.NodePart#getAttribute()
   * @see #getNodePart()
   * @generated
   */
  EReference getNodePart_Attribute();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.Node <em>Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node</em>'.
   * @see de.roma.cocktail.xtext.lpp.Node
   * @generated
   */
  EClass getNode();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.Node#getSelector <em>Selector</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Selector</em>'.
   * @see de.roma.cocktail.xtext.lpp.Node#getSelector()
   * @see #getNode()
   * @generated
   */
  EAttribute getNode_Selector();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.Node#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.Node#getName()
   * @see #getNode()
   * @generated
   */
  EAttribute getNode_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.NodeAttribute <em>Node Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Attribute</em>'.
   * @see de.roma.cocktail.xtext.lpp.NodeAttribute
   * @generated
   */
  EClass getNodeAttribute();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.NodeAttribute#getAttribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Attribute</em>'.
   * @see de.roma.cocktail.xtext.lpp.NodeAttribute#getAttribute()
   * @see #getNodeAttribute()
   * @generated
   */
  EAttribute getNodeAttribute_Attribute();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.NodeAttribute#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see de.roma.cocktail.xtext.lpp.NodeAttribute#getType()
   * @see #getNodeAttribute()
   * @generated
   */
  EAttribute getNodeAttribute_Type();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.lpp.RuleName <em>Rule Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rule Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.RuleName
   * @generated
   */
  EClass getRuleName();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.lpp.RuleName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.lpp.RuleName#getName()
   * @see #getRuleName()
   * @generated
   */
  EAttribute getRuleName_Name();

  /**
   * Returns the meta object for enum '{@link de.roma.cocktail.xtext.lpp.PrecedenceType <em>Precedence Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Precedence Type</em>'.
   * @see de.roma.cocktail.xtext.lpp.PrecedenceType
   * @generated
   */
  EEnum getPrecedenceType();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  LppFactory getLppFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ParserImpl <em>Parser</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ParserImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getParser()
     * @generated
     */
    EClass PARSER = eINSTANCE.getParser();

    /**
     * The meta object literal for the '<em><b>Scanner</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__SCANNER = eINSTANCE.getParser_Scanner();

    /**
     * The meta object literal for the '<em><b>Parser</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__PARSER = eINSTANCE.getParser_Parser();

    /**
     * The meta object literal for the '<em><b>Import Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__IMPORT_BLOCK = eINSTANCE.getParser_ImportBlock();

    /**
     * The meta object literal for the '<em><b>Export Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__EXPORT_BLOCK = eINSTANCE.getParser_ExportBlock();

    /**
     * The meta object literal for the '<em><b>Global Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__GLOBAL_BLOCK = eINSTANCE.getParser_GlobalBlock();

    /**
     * The meta object literal for the '<em><b>Local Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__LOCAL_BLOCK = eINSTANCE.getParser_LocalBlock();

    /**
     * The meta object literal for the '<em><b>Begin Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__BEGIN_BLOCK = eINSTANCE.getParser_BeginBlock();

    /**
     * The meta object literal for the '<em><b>Close Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__CLOSE_BLOCK = eINSTANCE.getParser_CloseBlock();

    /**
     * The meta object literal for the '<em><b>Precedence</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__PRECEDENCE = eINSTANCE.getParser_Precedence();

    /**
     * The meta object literal for the '<em><b>Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__START = eINSTANCE.getParser_Start();

    /**
     * The meta object literal for the '<em><b>Rules</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARSER__RULES = eINSTANCE.getParser_Rules();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ScannerNameImpl <em>Scanner Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ScannerNameImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getScannerName()
     * @generated
     */
    EClass SCANNER_NAME = eINSTANCE.getScannerName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SCANNER_NAME__NAME = eINSTANCE.getScannerName_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ParserNameImpl <em>Parser Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ParserNameImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getParserName()
     * @generated
     */
    EClass PARSER_NAME = eINSTANCE.getParserName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARSER_NAME__NAME = eINSTANCE.getParserName_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ImportImpl <em>Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ImportImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getImport()
     * @generated
     */
    EClass IMPORT = eINSTANCE.getImport();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IMPORT__CONTENT = eINSTANCE.getImport_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ExportImpl <em>Export</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ExportImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getExport()
     * @generated
     */
    EClass EXPORT = eINSTANCE.getExport();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPORT__CONTENT = eINSTANCE.getExport_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.GlobalImpl <em>Global</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.GlobalImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGlobal()
     * @generated
     */
    EClass GLOBAL = eINSTANCE.getGlobal();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GLOBAL__CONTENT = eINSTANCE.getGlobal_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.LocalImpl <em>Local</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.LocalImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getLocal()
     * @generated
     */
    EClass LOCAL = eINSTANCE.getLocal();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOCAL__CONTENT = eINSTANCE.getLocal_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.BeginImpl <em>Begin</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.BeginImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getBegin()
     * @generated
     */
    EClass BEGIN = eINSTANCE.getBegin();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BEGIN__CONTENT = eINSTANCE.getBegin_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.CloseImpl <em>Close</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.CloseImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getClose()
     * @generated
     */
    EClass CLOSE = eINSTANCE.getClose();

    /**
     * The meta object literal for the '<em><b>Content</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CLOSE__CONTENT = eINSTANCE.getClose_Content();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.TokenExtraImpl <em>Token Extra</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.TokenExtraImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getTokenExtra()
     * @generated
     */
    EClass TOKEN_EXTRA = eINSTANCE.getTokenExtra();

    /**
     * The meta object literal for the '<em><b>Cost</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TOKEN_EXTRA__COST = eINSTANCE.getTokenExtra_Cost();

    /**
     * The meta object literal for the '<em><b>Presentation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TOKEN_EXTRA__PRESENTATION = eINSTANCE.getTokenExtra_Presentation();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.CodeBlockImpl <em>Code Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.CodeBlockImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getCodeBlock()
     * @generated
     */
    EClass CODE_BLOCK = eINSTANCE.getCodeBlock();

    /**
     * The meta object literal for the '<em><b>Wall</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CODE_BLOCK__WALL = eINSTANCE.getCodeBlock_Wall();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CODE_BLOCK__BLOCK = eINSTANCE.getCodeBlock_Block();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.PrecedenceImpl <em>Precedence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.PrecedenceImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedence()
     * @generated
     */
    EClass PRECEDENCE = eINSTANCE.getPrecedence();

    /**
     * The meta object literal for the '<em><b>Rows</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRECEDENCE__ROWS = eINSTANCE.getPrecedence_Rows();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.PrecedenceRowImpl <em>Precedence Row</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.PrecedenceRowImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedenceRow()
     * @generated
     */
    EClass PRECEDENCE_ROW = eINSTANCE.getPrecedenceRow();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRECEDENCE_ROW__TYPE = eINSTANCE.getPrecedenceRow_Type();

    /**
     * The meta object literal for the '<em><b>Strings</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRECEDENCE_ROW__STRINGS = eINSTANCE.getPrecedenceRow_Strings();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRECEDENCE_ROW__NAME = eINSTANCE.getPrecedenceRow_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.StartSymbolsImpl <em>Start Symbols</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.StartSymbolsImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getStartSymbols()
     * @generated
     */
    EClass START_SYMBOLS = eINSTANCE.getStartSymbols();

    /**
     * The meta object literal for the '<em><b>States</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference START_SYMBOLS__STATES = eINSTANCE.getStartSymbols_States();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.StartStateImpl <em>Start State</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.StartStateImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getStartState()
     * @generated
     */
    EClass START_STATE = eINSTANCE.getStartState();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute START_STATE__NAME = eINSTANCE.getStartState_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.GrammarRulesImpl <em>Grammar Rules</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.GrammarRulesImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGrammarRules()
     * @generated
     */
    EClass GRAMMAR_RULES = eINSTANCE.getGrammarRules();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAMMAR_RULES__NODES = eINSTANCE.getGrammarRules_Nodes();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.GrammarRuleImpl <em>Grammar Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.GrammarRuleImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getGrammarRule()
     * @generated
     */
    EClass GRAMMAR_RULE = eINSTANCE.getGrammarRule();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAMMAR_RULE__NAME = eINSTANCE.getGrammarRule_Name();

    /**
     * The meta object literal for the '<em><b>Nodetype</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GRAMMAR_RULE__NODETYPE = eINSTANCE.getGrammarRule_Nodetype();

    /**
     * The meta object literal for the '<em><b>Part</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAMMAR_RULE__PART = eINSTANCE.getGrammarRule_Part();

    /**
     * The meta object literal for the '<em><b>Token</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAMMAR_RULE__TOKEN = eINSTANCE.getGrammarRule_Token();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAMMAR_RULE__BLOCK = eINSTANCE.getGrammarRule_Block();

    /**
     * The meta object literal for the '<em><b>Extension</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GRAMMAR_RULE__EXTENSION = eINSTANCE.getGrammarRule_Extension();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ExtensionRuleImpl <em>Extension Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ExtensionRuleImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getExtensionRule()
     * @generated
     */
    EClass EXTENSION_RULE = eINSTANCE.getExtensionRule();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENSION_RULE__NAME = eINSTANCE.getExtensionRule_Name();

    /**
     * The meta object literal for the '<em><b>Nodetype</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXTENSION_RULE__NODETYPE = eINSTANCE.getExtensionRule_Nodetype();

    /**
     * The meta object literal for the '<em><b>Part</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENSION_RULE__PART = eINSTANCE.getExtensionRule_Part();

    /**
     * The meta object literal for the '<em><b>Token</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENSION_RULE__TOKEN = eINSTANCE.getExtensionRule_Token();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENSION_RULE__BLOCK = eINSTANCE.getExtensionRule_Block();

    /**
     * The meta object literal for the '<em><b>Extension</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENSION_RULE__EXTENSION = eINSTANCE.getExtensionRule_Extension();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.ExtensionsImpl <em>Extensions</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.ExtensionsImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getExtensions()
     * @generated
     */
    EClass EXTENSIONS = eINSTANCE.getExtensions();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENSIONS__NODES = eINSTANCE.getExtensions_Nodes();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.NodePartImpl <em>Node Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.NodePartImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getNodePart()
     * @generated
     */
    EClass NODE_PART = eINSTANCE.getNodePart();

    /**
     * The meta object literal for the '<em><b>Child</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_PART__CHILD = eINSTANCE.getNodePart_Child();

    /**
     * The meta object literal for the '<em><b>Attribute</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_PART__ATTRIBUTE = eINSTANCE.getNodePart_Attribute();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.NodeImpl <em>Node</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.NodeImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getNode()
     * @generated
     */
    EClass NODE = eINSTANCE.getNode();

    /**
     * The meta object literal for the '<em><b>Selector</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE__SELECTOR = eINSTANCE.getNode_Selector();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE__NAME = eINSTANCE.getNode_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.NodeAttributeImpl <em>Node Attribute</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.NodeAttributeImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getNodeAttribute()
     * @generated
     */
    EClass NODE_ATTRIBUTE = eINSTANCE.getNodeAttribute();

    /**
     * The meta object literal for the '<em><b>Attribute</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE_ATTRIBUTE__ATTRIBUTE = eINSTANCE.getNodeAttribute_Attribute();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE_ATTRIBUTE__TYPE = eINSTANCE.getNodeAttribute_Type();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.impl.RuleNameImpl <em>Rule Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.impl.RuleNameImpl
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getRuleName()
     * @generated
     */
    EClass RULE_NAME = eINSTANCE.getRuleName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RULE_NAME__NAME = eINSTANCE.getRuleName_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.lpp.PrecedenceType <em>Precedence Type</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.lpp.PrecedenceType
     * @see de.roma.cocktail.xtext.lpp.impl.LppPackageImpl#getPrecedenceType()
     * @generated
     */
    EEnum PRECEDENCE_TYPE = eINSTANCE.getPrecedenceType();

  }

} //LppPackage
