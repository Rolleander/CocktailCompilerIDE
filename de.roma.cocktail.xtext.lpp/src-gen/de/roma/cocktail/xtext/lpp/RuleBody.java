/**
 * generated by Xtext 2.9.1
 */
package de.roma.cocktail.xtext.lpp;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Rule Body</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * <ul>
 *   <li>{@link de.roma.cocktail.xtext.lpp.RuleBody#getNodetype <em>Nodetype</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.lpp.RuleBody#getPart <em>Part</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.lpp.RuleBody#getToken <em>Token</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.lpp.RuleBody#getBlock <em>Block</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.lpp.RuleBody#getExtension <em>Extension</em>}</li>
 * </ul>
 * </p>
 *
 * @see de.roma.cocktail.xtext.lpp.LppPackage#getRuleBody()
 * @model
 * @generated
 */
public interface RuleBody extends EObject
{
  /**
   * Returns the value of the '<em><b>Nodetype</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Nodetype</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Nodetype</em>' attribute.
   * @see #setNodetype(String)
   * @see de.roma.cocktail.xtext.lpp.LppPackage#getRuleBody_Nodetype()
   * @model
   * @generated
   */
  String getNodetype();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.lpp.RuleBody#getNodetype <em>Nodetype</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Nodetype</em>' attribute.
   * @see #getNodetype()
   * @generated
   */
  void setNodetype(String value);

  /**
   * Returns the value of the '<em><b>Part</b></em>' containment reference list.
   * The list contents are of type {@link de.roma.cocktail.xtext.lpp.NodePart}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Part</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Part</em>' containment reference list.
   * @see de.roma.cocktail.xtext.lpp.LppPackage#getRuleBody_Part()
   * @model containment="true"
   * @generated
   */
  EList<NodePart> getPart();

  /**
   * Returns the value of the '<em><b>Token</b></em>' reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Token</em>' reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Token</em>' reference.
   * @see #setToken(PrecedenceRow)
   * @see de.roma.cocktail.xtext.lpp.LppPackage#getRuleBody_Token()
   * @model
   * @generated
   */
  PrecedenceRow getToken();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.lpp.RuleBody#getToken <em>Token</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Token</em>' reference.
   * @see #getToken()
   * @generated
   */
  void setToken(PrecedenceRow value);

  /**
   * Returns the value of the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Block</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Block</em>' containment reference.
   * @see #setBlock(CodeBlock)
   * @see de.roma.cocktail.xtext.lpp.LppPackage#getRuleBody_Block()
   * @model containment="true"
   * @generated
   */
  CodeBlock getBlock();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.lpp.RuleBody#getBlock <em>Block</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Block</em>' containment reference.
   * @see #getBlock()
   * @generated
   */
  void setBlock(CodeBlock value);

  /**
   * Returns the value of the '<em><b>Extension</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Extension</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Extension</em>' containment reference.
   * @see #setExtension(Extensions)
   * @see de.roma.cocktail.xtext.lpp.LppPackage#getRuleBody_Extension()
   * @model containment="true"
   * @generated
   */
  Extensions getExtension();

  /**
   * Sets the value of the '{@link de.roma.cocktail.xtext.lpp.RuleBody#getExtension <em>Extension</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Extension</em>' containment reference.
   * @see #getExtension()
   * @generated
   */
  void setExtension(Extensions value);

} // RuleBody
