/*
 * generated by Xtext 2.9.1
 */
grammar InternalScanner;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.cocktail.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.cocktail.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.cocktail.services.ScannerGrammarAccess;

}
@parser::members {
	private ScannerGrammarAccess grammarAccess;

	public void setGrammarAccess(ScannerGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScanner
entryRuleScanner
:
{ before(grammarAccess.getScannerRule()); }
	 ruleScanner
{ after(grammarAccess.getScannerRule()); } 
	 EOF 
;

// Rule Scanner
ruleScanner 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScannerAccess().getGroup()); }
		(rule__Scanner__Group__0)
		{ after(grammarAccess.getScannerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExport
entryRuleExport
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExportAccess().getGroup()); }
		(rule__Export__Group__0)
		{ after(grammarAccess.getExportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobal
entryRuleGlobal
:
{ before(grammarAccess.getGlobalRule()); }
	 ruleGlobal
{ after(grammarAccess.getGlobalRule()); } 
	 EOF 
;

// Rule Global
ruleGlobal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalAccess().getGroup()); }
		(rule__Global__Group__0)
		{ after(grammarAccess.getGlobalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocal
entryRuleLocal
:
{ before(grammarAccess.getLocalRule()); }
	 ruleLocal
{ after(grammarAccess.getLocalRule()); } 
	 EOF 
;

// Rule Local
ruleLocal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalAccess().getGroup()); }
		(rule__Local__Group__0)
		{ after(grammarAccess.getLocalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefault
entryRuleDefault
:
{ before(grammarAccess.getDefaultRule()); }
	 ruleDefault
{ after(grammarAccess.getDefaultRule()); } 
	 EOF 
;

// Rule Default
ruleDefault 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefaultAccess().getGroup()); }
		(rule__Default__Group__0)
		{ after(grammarAccess.getDefaultAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEof
entryRuleEof
:
{ before(grammarAccess.getEofRule()); }
	 ruleEof
{ after(grammarAccess.getEofRule()); } 
	 EOF 
;

// Rule Eof
ruleEof 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEofAccess().getGroup()); }
		(rule__Eof__Group__0)
		{ after(grammarAccess.getEofAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefine
entryRuleDefine
:
{ before(grammarAccess.getDefineRule()); }
	 ruleDefine
{ after(grammarAccess.getDefineRule()); } 
	 EOF 
;

// Rule Define
ruleDefine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefineAccess().getGroup()); }
		(rule__Define__Group__0)
		{ after(grammarAccess.getDefineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefineRule
entryRuleDefineRule
:
{ before(grammarAccess.getDefineRuleRule()); }
	 ruleDefineRule
{ after(grammarAccess.getDefineRuleRule()); } 
	 EOF 
;

// Rule DefineRule
ruleDefineRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefineRuleAccess().getGroup()); }
		(rule__DefineRule__Group__0)
		{ after(grammarAccess.getDefineRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartStates
entryRuleStartStates
:
{ before(grammarAccess.getStartStatesRule()); }
	 ruleStartStates
{ after(grammarAccess.getStartStatesRule()); } 
	 EOF 
;

// Rule StartStates
ruleStartStates 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartStatesAccess().getGroup()); }
		(rule__StartStates__Group__0)
		{ after(grammarAccess.getStartStatesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartState
entryRuleStartState
:
{ before(grammarAccess.getStartStateRule()); }
	 ruleStartState
{ after(grammarAccess.getStartStateRule()); } 
	 EOF 
;

// Rule StartState
ruleStartState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartStateAccess().getNameAssignment()); }
		(rule__StartState__NameAssignment)
		{ after(grammarAccess.getStartStateAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleRule
entryRuleSingleRule
:
{ before(grammarAccess.getSingleRuleRule()); }
	 ruleSingleRule
{ after(grammarAccess.getSingleRuleRule()); } 
	 EOF 
;

// Rule SingleRule
ruleSingleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleRuleAccess().getGroup()); }
		(rule__SingleRule__Group__0)
		{ after(grammarAccess.getSingleRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleStart
entryRuleRuleStart
:
{ before(grammarAccess.getRuleStartRule()); }
	 ruleRuleStart
{ after(grammarAccess.getRuleStartRule()); } 
	 EOF 
;

// Rule RuleStart
ruleRuleStart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleStartAccess().getGroup()); }
		(rule__RuleStart__Group__0)
		{ after(grammarAccess.getRuleStartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__InfoAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getInfoRULEKeyword_0_0_0()); }
		'RULE'
		{ after(grammarAccess.getRuleAccess().getInfoRULEKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getInfoRULESKeyword_0_0_1()); }
		'RULES'
		{ after(grammarAccess.getRuleAccess().getInfoRULESKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getColonHyphenMinusKeyword_2_0()); }
		':-'
		{ after(grammarAccess.getSingleRuleAccess().getColonHyphenMinusKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleRuleAccess().getColonKeyword_2_1()); }
		':'
		{ after(grammarAccess.getSingleRuleAccess().getColonKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getNOTKeyword_0_0()); }
		'NOT'
		{ after(grammarAccess.getRuleStartAccess().getNOTKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleStartAccess().getHyphenMinusKeyword_0_1()); }
		'-'
		{ after(grammarAccess.getRuleStartAccess().getHyphenMinusKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getGroup_2_0()); }
		(rule__RuleStart__Group_2_0__0)
		{ after(grammarAccess.getRuleStartAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleStartAccess().getSTDKeyword_2_1()); }
		'STD'
		{ after(grammarAccess.getRuleStartAccess().getSTDKeyword_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getRuleStartAccess().getAsteriskKeyword_2_2()); }
		'*'
		{ after(grammarAccess.getRuleStartAccess().getAsteriskKeyword_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScannerAssignment_0()); }
	(rule__Model__ScannerAssignment_0)?
	{ after(grammarAccess.getModelAccess().getScannerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScannerAssignment_1()); }
	(rule__Model__ScannerAssignment_1)?
	{ after(grammarAccess.getModelAccess().getScannerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScannerAssignment_2()); }
	(rule__Model__ScannerAssignment_2)?
	{ after(grammarAccess.getModelAccess().getScannerAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScannerAssignment_3()); }
	(rule__Model__ScannerAssignment_3)?
	{ after(grammarAccess.getModelAccess().getScannerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScannerAssignment_4()); }
	(rule__Model__ScannerAssignment_4)?
	{ after(grammarAccess.getModelAccess().getScannerAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScannerAssignment_5()); }
	(rule__Model__ScannerAssignment_5)?
	{ after(grammarAccess.getModelAccess().getScannerAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__6__Impl
	rule__Model__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScannerAssignment_6()); }
	(rule__Model__ScannerAssignment_6)
	{ after(grammarAccess.getModelAccess().getScannerAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__7__Impl
	rule__Model__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScannerAssignment_7()); }
	(rule__Model__ScannerAssignment_7)?
	{ after(grammarAccess.getModelAccess().getScannerAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScannerAssignment_8()); }
	(rule__Model__ScannerAssignment_8)
	{ after(grammarAccess.getModelAccess().getScannerAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scanner__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scanner__Group__0__Impl
	rule__Scanner__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScannerAccess().getSCANNERKeyword_0()); }
	'SCANNER'
	{ after(grammarAccess.getScannerAccess().getSCANNERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scanner__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScannerAccess().getNameAssignment_1()); }
	(rule__Scanner__NameAssignment_1)
	{ after(grammarAccess.getScannerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getEXPORTKeyword_0()); }
	'EXPORT {'
	{ after(grammarAccess.getExportAccess().getEXPORTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__1__Impl
	rule__Export__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getContentAssignment_1()); }
	(rule__Export__ContentAssignment_1)
	{ after(grammarAccess.getExportAccess().getContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Global__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__0__Impl
	rule__Global__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getGLOBALKeyword_0()); }
	'GLOBAL {'
	{ after(grammarAccess.getGlobalAccess().getGLOBALKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__1__Impl
	rule__Global__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getContentAssignment_1()); }
	(rule__Global__ContentAssignment_1)
	{ after(grammarAccess.getGlobalAccess().getContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getGlobalAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__0__Impl
	rule__Local__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getLOCALKeyword_0()); }
	'LOCAL {'
	{ after(grammarAccess.getLocalAccess().getLOCALKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__1__Impl
	rule__Local__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getContentAssignment_1()); }
	(rule__Local__ContentAssignment_1)
	{ after(grammarAccess.getLocalAccess().getContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getLocalAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Default__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group__0__Impl
	rule__Default__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getDEFAULTKeyword_0()); }
	'DEFAULT {'
	{ after(grammarAccess.getDefaultAccess().getDEFAULTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group__1__Impl
	rule__Default__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getContentAssignment_1()); }
	(rule__Default__ContentAssignment_1)
	{ after(grammarAccess.getDefaultAccess().getContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getDefaultAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Eof__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eof__Group__0__Impl
	rule__Eof__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEofAccess().getEOFKeyword_0()); }
	'EOF {'
	{ after(grammarAccess.getEofAccess().getEOFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eof__Group__1__Impl
	rule__Eof__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEofAccess().getContentAssignment_1()); }
	(rule__Eof__ContentAssignment_1)
	{ after(grammarAccess.getEofAccess().getContentAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eof__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEofAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getEofAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Define__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__0__Impl
	rule__Define__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineAccess().getDEFINEKeyword_0()); }
	'DEFINE'
	{ after(grammarAccess.getDefineAccess().getDEFINEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDefineAccess().getDefinesAssignment_1()); }
		(rule__Define__DefinesAssignment_1)
		{ after(grammarAccess.getDefineAccess().getDefinesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getDefineAccess().getDefinesAssignment_1()); }
		(rule__Define__DefinesAssignment_1)*
		{ after(grammarAccess.getDefineAccess().getDefinesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefineRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineRule__Group__0__Impl
	rule__DefineRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineRuleAccess().getNameAssignment_0()); }
	(rule__DefineRule__NameAssignment_0)
	{ after(grammarAccess.getDefineRuleAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineRule__Group__1__Impl
	rule__DefineRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineRuleAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDefineRuleAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineRule__Group__2__Impl
	rule__DefineRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineRuleAccess().getRuleAssignment_2()); }
	(rule__DefineRule__RuleAssignment_2)
	{ after(grammarAccess.getDefineRuleAccess().getRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineRuleAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getDefineRuleAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartStates__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group__0__Impl
	rule__StartStates__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getSTARTKeyword_0()); }
	'START'
	{ after(grammarAccess.getStartStatesAccess().getSTARTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group__1__Impl
	rule__StartStates__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getIncstatesAssignment_1()); }
	(rule__StartStates__IncstatesAssignment_1)
	{ after(grammarAccess.getStartStatesAccess().getIncstatesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group__2__Impl
	rule__StartStates__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getGroup_2()); }
	(rule__StartStates__Group_2__0)*
	{ after(grammarAccess.getStartStatesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getGroup_3()); }
	(rule__StartStates__Group_3__0)?
	{ after(grammarAccess.getStartStatesAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartStates__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_2__0__Impl
	rule__StartStates__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getStartStatesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getIncstatesAssignment_2_1()); }
	(rule__StartStates__IncstatesAssignment_2_1)
	{ after(grammarAccess.getStartStatesAccess().getIncstatesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartStates__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_3__0__Impl
	rule__StartStates__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getHyphenMinusKeyword_3_0()); }
	'-'
	{ after(grammarAccess.getStartStatesAccess().getHyphenMinusKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_3__1__Impl
	rule__StartStates__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getExstatesAssignment_3_1()); }
	(rule__StartStates__ExstatesAssignment_3_1)
	{ after(grammarAccess.getStartStatesAccess().getExstatesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getGroup_3_2()); }
	(rule__StartStates__Group_3_2__0)*
	{ after(grammarAccess.getStartStatesAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartStates__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_3_2__0__Impl
	rule__StartStates__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getStartStatesAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getExstatesAssignment_3_2_1()); }
	(rule__StartStates__ExstatesAssignment_3_2_1)
	{ after(grammarAccess.getStartStatesAccess().getExstatesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getInfoAssignment_0()); }
	(rule__Rule__InfoAssignment_0)
	{ after(grammarAccess.getRuleAccess().getInfoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRulesAssignment_1()); }
	(rule__Rule__RulesAssignment_1)*
	{ after(grammarAccess.getRuleAccess().getRulesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__0__Impl
	rule__SingleRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getRuleStartParserRuleCall_0()); }
	(ruleRuleStart)?
	{ after(grammarAccess.getSingleRuleAccess().getRuleStartParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__1__Impl
	rule__SingleRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getRuleAssignment_1()); }
	(rule__SingleRule__RuleAssignment_1)
	{ after(grammarAccess.getSingleRuleAccess().getRuleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__2__Impl
	rule__SingleRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getAlternatives_2()); }
	(rule__SingleRule__Alternatives_2)
	{ after(grammarAccess.getSingleRuleAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__3__Impl
	rule__SingleRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getSingleRuleAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__4__Impl
	rule__SingleRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getContentAssignment_4()); }
	(rule__SingleRule__ContentAssignment_4)
	{ after(grammarAccess.getSingleRuleAccess().getContentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getSingleRuleAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleStart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group__0__Impl
	rule__RuleStart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getAlternatives_0()); }
	(rule__RuleStart__Alternatives_0)?
	{ after(grammarAccess.getRuleStartAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group__1__Impl
	rule__RuleStart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getNumberSignKeyword_1()); }
	'#'
	{ after(grammarAccess.getRuleStartAccess().getNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group__2__Impl
	rule__RuleStart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getAlternatives_2()); }
	(rule__RuleStart__Alternatives_2)
	{ after(grammarAccess.getRuleStartAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getNumberSignKeyword_3()); }
	'#'
	{ after(grammarAccess.getRuleStartAccess().getNumberSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleStart__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group_2_0__0__Impl
	rule__RuleStart__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getStateAssignment_2_0_0()); }
	(rule__RuleStart__StateAssignment_2_0_0)
	{ after(grammarAccess.getRuleStartAccess().getStateAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getGroup_2_0_1()); }
	(rule__RuleStart__Group_2_0_1__0)*
	{ after(grammarAccess.getRuleStartAccess().getGroup_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleStart__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group_2_0_1__0__Impl
	rule__RuleStart__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getCommaKeyword_2_0_1_0()); }
	','
	{ after(grammarAccess.getRuleStartAccess().getCommaKeyword_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getStateAssignment_2_0_1_1()); }
	(rule__RuleStart__StateAssignment_2_0_1_1)
	{ after(grammarAccess.getRuleStartAccess().getStateAssignment_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ScannerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScannerScannerParserRuleCall_0_0()); }
		ruleScanner
		{ after(grammarAccess.getModelAccess().getScannerScannerParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScannerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScannerExportParserRuleCall_1_0()); }
		ruleExport
		{ after(grammarAccess.getModelAccess().getScannerExportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScannerAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScannerGlobalParserRuleCall_2_0()); }
		ruleGlobal
		{ after(grammarAccess.getModelAccess().getScannerGlobalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScannerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScannerLocalParserRuleCall_3_0()); }
		ruleLocal
		{ after(grammarAccess.getModelAccess().getScannerLocalParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScannerAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScannerDefaultParserRuleCall_4_0()); }
		ruleDefault
		{ after(grammarAccess.getModelAccess().getScannerDefaultParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScannerAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScannerEofParserRuleCall_5_0()); }
		ruleEof
		{ after(grammarAccess.getModelAccess().getScannerEofParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScannerAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScannerDefineParserRuleCall_6_0()); }
		ruleDefine
		{ after(grammarAccess.getModelAccess().getScannerDefineParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScannerAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScannerStartStatesParserRuleCall_7_0()); }
		ruleStartStates
		{ after(grammarAccess.getModelAccess().getScannerStartStatesParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScannerAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScannerRuleParserRuleCall_8_0()); }
		ruleRule
		{ after(grammarAccess.getModelAccess().getScannerRuleParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScannerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScannerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__ContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportAccess().getContentINLINE_CODETerminalRuleCall_1_0()); }
		RULE_INLINE_CODE
		{ after(grammarAccess.getExportAccess().getContentINLINE_CODETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__ContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getContentIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGlobalAccess().getContentIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__ContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAccess().getContentIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLocalAccess().getContentIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__ContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultAccess().getContentIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDefaultAccess().getContentIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__ContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEofAccess().getContentIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEofAccess().getContentIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__DefinesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineAccess().getDefinesDefineRuleParserRuleCall_1_0()); }
		ruleDefineRule
		{ after(grammarAccess.getDefineAccess().getDefinesDefineRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineRuleAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDefineRuleAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__RuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineRuleAccess().getRuleIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getDefineRuleAccess().getRuleIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__IncstatesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_1_0()); }
		ruleStartState
		{ after(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__IncstatesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_2_1_0()); }
		ruleStartState
		{ after(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__ExstatesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_1_0()); }
		ruleStartState
		{ after(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__ExstatesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_2_1_0()); }
		ruleStartState
		{ after(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartState__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartStateAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getStartStateAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__InfoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getInfoAlternatives_0_0()); }
		(rule__Rule__InfoAlternatives_0_0)
		{ after(grammarAccess.getRuleAccess().getInfoAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__RulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getRulesSingleRuleParserRuleCall_1_0()); }
		ruleSingleRule
		{ after(grammarAccess.getRuleAccess().getRulesSingleRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__RuleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getRuleSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSingleRuleAccess().getRuleSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__ContentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getContentIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getSingleRuleAccess().getContentIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__StateAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getStateStartStateCrossReference_2_0_0_0()); }
		(
			{ before(grammarAccess.getRuleStartAccess().getStateStartStateIDTerminalRuleCall_2_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleStartAccess().getStateStartStateIDTerminalRuleCall_2_0_0_0_1()); }
		)
		{ after(grammarAccess.getRuleStartAccess().getStateStartStateCrossReference_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__StateAssignment_2_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getStateStartStateCrossReference_2_0_1_1_0()); }
		(
			{ before(grammarAccess.getRuleStartAccess().getStateStartStateIDTerminalRuleCall_2_0_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleStartAccess().getStateStartStateIDTerminalRuleCall_2_0_1_1_0_1()); }
		)
		{ after(grammarAccess.getRuleStartAccess().getStateStartStateCrossReference_2_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_INLINE_CODE : '{' ( options {greedy=false;} : . )*'}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
