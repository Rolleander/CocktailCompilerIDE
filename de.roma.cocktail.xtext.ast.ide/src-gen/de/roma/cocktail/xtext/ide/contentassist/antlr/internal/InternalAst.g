/*
 * generated by Xtext 2.9.1
 */
grammar InternalAst;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.roma.cocktail.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.roma.cocktail.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.roma.cocktail.xtext.services.AstGrammarAccess;

}
@parser::members {
	private AstGrammarAccess grammarAccess;

	public void setGrammarAccess(AstGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getUnorderedGroup()); }
		(rule__Model__UnorderedGroup)
		{ after(grammarAccess.getModelAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModule
entryRuleModule
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleAccess().getGroup()); }
		(rule__Module__Group__0)
		{ after(grammarAccess.getModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTree
entryRuleTree
:
{ before(grammarAccess.getTreeRule()); }
	 ruleTree
{ after(grammarAccess.getTreeRule()); } 
	 EOF 
;

// Rule Tree
ruleTree 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTreeAccess().getGroup()); }
		(rule__Tree__Group__0)
		{ after(grammarAccess.getTreeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExport
entryRuleExport
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExportAccess().getGroup()); }
		(rule__Export__Group__0)
		{ after(grammarAccess.getExportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobal
entryRuleGlobal
:
{ before(grammarAccess.getGlobalRule()); }
	 ruleGlobal
{ after(grammarAccess.getGlobalRule()); } 
	 EOF 
;

// Rule Global
ruleGlobal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalAccess().getGroup()); }
		(rule__Global__Group__0)
		{ after(grammarAccess.getGlobalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocal
entryRuleLocal
:
{ before(grammarAccess.getLocalRule()); }
	 ruleLocal
{ after(grammarAccess.getLocalRule()); } 
	 EOF 
;

// Rule Local
ruleLocal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalAccess().getGroup()); }
		(rule__Local__Group__0)
		{ after(grammarAccess.getLocalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBegin
entryRuleBegin
:
{ before(grammarAccess.getBeginRule()); }
	 ruleBegin
{ after(grammarAccess.getBeginRule()); } 
	 EOF 
;

// Rule Begin
ruleBegin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBeginAccess().getGroup()); }
		(rule__Begin__Group__0)
		{ after(grammarAccess.getBeginAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClose
entryRuleClose
:
{ before(grammarAccess.getCloseRule()); }
	 ruleClose
{ after(grammarAccess.getCloseRule()); } 
	 EOF 
;

// Rule Close
ruleClose 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCloseAccess().getGroup()); }
		(rule__Close__Group__0)
		{ after(grammarAccess.getCloseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperties
entryRuleProperties
:
{ before(grammarAccess.getPropertiesRule()); }
	 ruleProperties
{ after(grammarAccess.getPropertiesRule()); } 
	 EOF 
;

// Rule Properties
ruleProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertiesAccess().getGroup()); }
		(rule__Properties__Group__0)
		{ after(grammarAccess.getPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyList
entryRulePropertyList
:
{ before(grammarAccess.getPropertyListRule()); }
	 rulePropertyList
{ after(grammarAccess.getPropertyListRule()); } 
	 EOF 
;

// Rule PropertyList
rulePropertyList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyListAccess().getUnorderedGroup()); }
		(rule__PropertyList__UnorderedGroup)
		{ after(grammarAccess.getPropertyListAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclare
entryRuleDeclare
:
{ before(grammarAccess.getDeclareRule()); }
	 ruleDeclare
{ after(grammarAccess.getDeclareRule()); } 
	 EOF 
;

// Rule Declare
ruleDeclare 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclareAccess().getGroup()); }
		(rule__Declare__Group__0)
		{ after(grammarAccess.getDeclareAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclareNode
entryRuleDeclareNode
:
{ before(grammarAccess.getDeclareNodeRule()); }
	 ruleDeclareNode
{ after(grammarAccess.getDeclareNodeRule()); } 
	 EOF 
;

// Rule DeclareNode
ruleDeclareNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclareNodeAccess().getGroup()); }
		(rule__DeclareNode__Group__0)
		{ after(grammarAccess.getDeclareNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRootNode
entryRuleRootNode
:
{ before(grammarAccess.getRootNodeRule()); }
	 ruleRootNode
{ after(grammarAccess.getRootNodeRule()); } 
	 EOF 
;

// Rule RootNode
ruleRootNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootNodeAccess().getGroup()); }
		(rule__RootNode__Group__0)
		{ after(grammarAccess.getRootNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBaseTypes
entryRuleBaseTypes
:
{ before(grammarAccess.getBaseTypesRule()); }
	 ruleBaseTypes
{ after(grammarAccess.getBaseTypesRule()); } 
	 EOF 
;

// Rule BaseTypes
ruleBaseTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseTypesAccess().getGroup()); }
		(rule__BaseTypes__Group__0)
		{ after(grammarAccess.getBaseTypesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtensions
entryRuleExtensions
:
{ before(grammarAccess.getExtensionsRule()); }
	 ruleExtensions
{ after(grammarAccess.getExtensionsRule()); } 
	 EOF 
;

// Rule Extensions
ruleExtensions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtensionsAccess().getGroup()); }
		(rule__Extensions__Group__0)
		{ after(grammarAccess.getExtensionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodePart
entryRuleNodePart
:
{ before(grammarAccess.getNodePartRule()); }
	 ruleNodePart
{ after(grammarAccess.getNodePartRule()); } 
	 EOF 
;

// Rule NodePart
ruleNodePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodePartAccess().getAlternatives()); }
		(rule__NodePart__Alternatives)
		{ after(grammarAccess.getNodePartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChildNode
entryRuleChildNode
:
{ before(grammarAccess.getChildNodeRule()); }
	 ruleChildNode
{ after(grammarAccess.getChildNodeRule()); } 
	 EOF 
;

// Rule ChildNode
ruleChildNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChildNodeAccess().getGroup()); }
		(rule__ChildNode__Group__0)
		{ after(grammarAccess.getChildNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeAttribute
entryRuleNodeAttribute
:
{ before(grammarAccess.getNodeAttributeRule()); }
	 ruleNodeAttribute
{ after(grammarAccess.getNodeAttributeRule()); } 
	 EOF 
;

// Rule NodeAttribute
ruleNodeAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAttributeAccess().getGroup()); }
		(rule__NodeAttribute__Group__0)
		{ after(grammarAccess.getNodeAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeName
entryRuleNodeName
:
{ before(grammarAccess.getNodeNameRule()); }
	 ruleNodeName
{ after(grammarAccess.getNodeNameRule()); } 
	 EOF 
;

// Rule NodeName
ruleNodeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeNameAccess().getNameAssignment()); }
		(rule__NodeName__NameAssignment)
		{ after(grammarAccess.getNodeNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeType
entryRuleNodeType
:
{ before(grammarAccess.getNodeTypeRule()); }
	 ruleNodeType
{ after(grammarAccess.getNodeTypeRule()); } 
	 EOF 
;

// Rule NodeType
ruleNodeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeTypeAccess().getAlternatives()); }
		(rule__NodeType__Alternatives)
		{ after(grammarAccess.getNodeTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCodeBlock
entryRuleCodeBlock
:
{ before(grammarAccess.getCodeBlockRule()); }
	 ruleCodeBlock
{ after(grammarAccess.getCodeBlockRule()); } 
	 EOF 
;

// Rule CodeBlock
ruleCodeBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeBlockAccess().getAlternatives()); }
		(rule__CodeBlock__Alternatives)*
		{ after(grammarAccess.getCodeBlockAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCodeWall
entryRuleCodeWall
:
{ before(grammarAccess.getCodeWallRule()); }
	 ruleCodeWall
{ after(grammarAccess.getCodeWallRule()); } 
	 EOF 
;

// Rule CodeWall
ruleCodeWall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeWallAccess().getAlternatives()); }
		(rule__CodeWall__Alternatives)
		{ after(grammarAccess.getCodeWallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__TypeAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclareNodeAccess().getTypeEqualsSignKeyword_1_0_0()); }
		'='
		{ after(grammarAccess.getDeclareNodeAccess().getTypeEqualsSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeclareNodeAccess().getTypeColonKeyword_1_0_1()); }
		':'
		{ after(grammarAccess.getDeclareNodeAccess().getTypeColonKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodePart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodePartAccess().getChildAssignment_0()); }
		(rule__NodePart__ChildAssignment_0)
		{ after(grammarAccess.getNodePartAccess().getChildAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodePartAccess().getAttributeAssignment_1()); }
		(rule__NodePart__AttributeAssignment_1)
		{ after(grammarAccess.getNodePartAccess().getAttributeAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeName__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNameAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeNameAccess().getNameIDTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeNameAccess().getNameSTRINGTerminalRuleCall_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getNodeNameAccess().getNameSTRINGTerminalRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeTypeAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getNodeTypeAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getColonKeyword_1()); }
		':'
		{ after(grammarAccess.getNodeTypeAccess().getColonKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getNodeTypeAccess().getColonEqualsSignKeyword_2()); }
		':='
		{ after(grammarAccess.getNodeTypeAccess().getColonEqualsSignKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getCodeWallParserRuleCall_0()); }
		ruleCodeWall
		{ after(grammarAccess.getCodeBlockAccess().getCodeWallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCodeBlockAccess().getGroup_1()); }
		(rule__CodeBlock__Group_1__0)
		{ after(grammarAccess.getCodeBlockAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeWall__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeWallAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getCodeWallAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getCodeWallAccess().getINTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getSTRINGTerminalRuleCall_2()); }
		RULE_STRING
		{ after(grammarAccess.getCodeWallAccess().getSTRINGTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getWSTerminalRuleCall_3()); }
		RULE_WS
		{ after(grammarAccess.getCodeWallAccess().getWSTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getPlusSignKeyword_4()); }
		'+'
		{ after(grammarAccess.getCodeWallAccess().getPlusSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getHyphenMinusKeyword_5()); }
		'-'
		{ after(grammarAccess.getCodeWallAccess().getHyphenMinusKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getLeftParenthesisKeyword_6()); }
		'('
		{ after(grammarAccess.getCodeWallAccess().getLeftParenthesisKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getRightParenthesisKeyword_7()); }
		')'
		{ after(grammarAccess.getCodeWallAccess().getRightParenthesisKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getAsteriskKeyword_8()); }
		'*'
		{ after(grammarAccess.getCodeWallAccess().getAsteriskKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getFullStopKeyword_9()); }
		'.'
		{ after(grammarAccess.getCodeWallAccess().getFullStopKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getSolidusKeyword_10()); }
		'/'
		{ after(grammarAccess.getCodeWallAccess().getSolidusKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getReverseSolidusKeyword_11()); }
		'\\'
		{ after(grammarAccess.getCodeWallAccess().getReverseSolidusKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getVerticalLineKeyword_12()); }
		'|'
		{ after(grammarAccess.getCodeWallAccess().getVerticalLineKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getQuestionMarkKeyword_13()); }
		'?'
		{ after(grammarAccess.getCodeWallAccess().getQuestionMarkKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getGreaterThanSignKeyword_14()); }
		'>'
		{ after(grammarAccess.getCodeWallAccess().getGreaterThanSignKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getLessThanSignKeyword_15()); }
		'<'
		{ after(grammarAccess.getCodeWallAccess().getLessThanSignKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getNumberSignKeyword_16()); }
		'#'
		{ after(grammarAccess.getCodeWallAccess().getNumberSignKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getDollarSignKeyword_17()); }
		'$'
		{ after(grammarAccess.getCodeWallAccess().getDollarSignKeyword_17()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getPercentSignKeyword_18()); }
		'%'
		{ after(grammarAccess.getCodeWallAccess().getPercentSignKeyword_18()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getSemicolonKeyword_19()); }
		';'
		{ after(grammarAccess.getCodeWallAccess().getSemicolonKeyword_19()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getColonKeyword_20()); }
		':'
		{ after(grammarAccess.getCodeWallAccess().getColonKeyword_20()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getExclamationMarkKeyword_21()); }
		'!'
		{ after(grammarAccess.getCodeWallAccess().getExclamationMarkKeyword_21()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getEqualsSignKeyword_22()); }
		'='
		{ after(grammarAccess.getCodeWallAccess().getEqualsSignKeyword_22()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getCommaKeyword_23()); }
		','
		{ after(grammarAccess.getCodeWallAccess().getCommaKeyword_23()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getMODULEKeyword_0()); }
	'MODULE'
	{ after(grammarAccess.getModuleAccess().getMODULEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getNameAssignment_1()); }
	(rule__Module__NameAssignment_1)
	{ after(grammarAccess.getModuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tree__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group__0__Impl
	rule__Tree__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getTREEKeyword_0()); }
	'TREE'
	{ after(grammarAccess.getTreeAccess().getTREEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tree__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTreeAccess().getNameAssignment_1()); }
	(rule__Tree__NameAssignment_1)
	{ after(grammarAccess.getTreeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getIMPORTKeyword_0()); }
	'IMPORT'
	{ after(grammarAccess.getImportAccess().getIMPORTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getImportAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getCodeAssignment_2()); }
	(rule__Import__CodeAssignment_2)
	{ after(grammarAccess.getImportAccess().getCodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getImportAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getEXPORTKeyword_0()); }
	'EXPORT'
	{ after(grammarAccess.getExportAccess().getEXPORTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__1__Impl
	rule__Export__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__2__Impl
	rule__Export__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getCodeAssignment_2()); }
	(rule__Export__CodeAssignment_2)
	{ after(grammarAccess.getExportAccess().getCodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Global__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__0__Impl
	rule__Global__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getGLOBALKeyword_0()); }
	'GLOBAL'
	{ after(grammarAccess.getGlobalAccess().getGLOBALKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__1__Impl
	rule__Global__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getGlobalAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__2__Impl
	rule__Global__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getCodeAssignment_2()); }
	(rule__Global__CodeAssignment_2)
	{ after(grammarAccess.getGlobalAccess().getCodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getGlobalAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__0__Impl
	rule__Local__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getLOCALKeyword_0()); }
	'LOCAL'
	{ after(grammarAccess.getLocalAccess().getLOCALKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__1__Impl
	rule__Local__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLocalAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__2__Impl
	rule__Local__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getCodeAssignment_2()); }
	(rule__Local__CodeAssignment_2)
	{ after(grammarAccess.getLocalAccess().getCodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getLocalAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Begin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Begin__Group__0__Impl
	rule__Begin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeginAccess().getBEGINKeyword_0()); }
	'BEGIN'
	{ after(grammarAccess.getBeginAccess().getBEGINKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Begin__Group__1__Impl
	rule__Begin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeginAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBeginAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Begin__Group__2__Impl
	rule__Begin__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeginAccess().getCodeAssignment_2()); }
	(rule__Begin__CodeAssignment_2)
	{ after(grammarAccess.getBeginAccess().getCodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Begin__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeginAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBeginAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Close__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group__0__Impl
	rule__Close__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getCLOSEKeyword_0()); }
	'CLOSE'
	{ after(grammarAccess.getCloseAccess().getCLOSEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group__1__Impl
	rule__Close__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCloseAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group__2__Impl
	rule__Close__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getCodeAssignment_2()); }
	(rule__Close__CodeAssignment_2)
	{ after(grammarAccess.getCloseAccess().getCodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getCloseAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Properties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__0__Impl
	rule__Properties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getPROPERTYKeyword_0()); }
	'PROPERTY'
	{ after(grammarAccess.getPropertiesAccess().getPROPERTYKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getPropertyAssignment_1()); }
	(rule__Properties__PropertyAssignment_1)
	{ after(grammarAccess.getPropertiesAccess().getPropertyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declare__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declare__Group__0__Impl
	rule__Declare__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declare__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclareAccess().getDECLAREKeyword_0()); }
	'DECLARE'
	{ after(grammarAccess.getDeclareAccess().getDECLAREKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declare__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declare__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declare__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclareAccess().getNodesAssignment_1()); }
	(rule__Declare__NodesAssignment_1)*
	{ after(grammarAccess.getDeclareAccess().getNodesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclareNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclareNode__Group__0__Impl
	rule__DeclareNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDeclareNodeAccess().getNamesAssignment_0()); }
		(rule__DeclareNode__NamesAssignment_0)
		{ after(grammarAccess.getDeclareNodeAccess().getNamesAssignment_0()); }
	)
	(
		{ before(grammarAccess.getDeclareNodeAccess().getNamesAssignment_0()); }
		(rule__DeclareNode__NamesAssignment_0)*
		{ after(grammarAccess.getDeclareNodeAccess().getNamesAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclareNode__Group__1__Impl
	rule__DeclareNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclareNodeAccess().getTypeAssignment_1()); }
	(rule__DeclareNode__TypeAssignment_1)
	{ after(grammarAccess.getDeclareNodeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclareNode__Group__2__Impl
	rule__DeclareNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclareNodeAccess().getPartAssignment_2()); }
	(rule__DeclareNode__PartAssignment_2)*
	{ after(grammarAccess.getDeclareNodeAccess().getPartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclareNode__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclareNodeAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getDeclareNodeAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRULEKeyword_0()); }
	'RULE'
	{ after(grammarAccess.getRuleAccess().getRULEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNodesAssignment_1()); }
	(rule__Rule__NodesAssignment_1)*
	{ after(grammarAccess.getRuleAccess().getNodesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RootNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootNode__Group__0__Impl
	rule__RootNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootNodeAccess().getNameAssignment_0()); }
	(rule__RootNode__NameAssignment_0)
	{ after(grammarAccess.getRootNodeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootNode__Group__1__Impl
	rule__RootNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootNodeAccess().getBaseTypesAssignment_1()); }
	(rule__RootNode__BaseTypesAssignment_1)?
	{ after(grammarAccess.getRootNodeAccess().getBaseTypesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootNode__Group__2__Impl
	rule__RootNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootNodeAccess().getTypeAssignment_2()); }
	(rule__RootNode__TypeAssignment_2)?
	{ after(grammarAccess.getRootNodeAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootNode__Group__3__Impl
	rule__RootNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootNodeAccess().getPartAssignment_3()); }
	(rule__RootNode__PartAssignment_3)*
	{ after(grammarAccess.getRootNodeAccess().getPartAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootNode__Group__4__Impl
	rule__RootNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootNodeAccess().getExtensionAssignment_4()); }
	(rule__RootNode__ExtensionAssignment_4)?
	{ after(grammarAccess.getRootNodeAccess().getExtensionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootNode__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootNodeAccess().getFullStopKeyword_5()); }
	'.'
	{ after(grammarAccess.getRootNodeAccess().getFullStopKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BaseTypes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseTypes__Group__0__Impl
	rule__BaseTypes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseTypes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseTypesAccess().getLessThanSignHyphenMinusKeyword_0()); }
	'<-'
	{ after(grammarAccess.getBaseTypesAccess().getLessThanSignHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseTypes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseTypes__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseTypes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseTypesAccess().getNamesAssignment_1()); }
	(rule__BaseTypes__NamesAssignment_1)*
	{ after(grammarAccess.getBaseTypesAccess().getNamesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Extensions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extensions__Group__0__Impl
	rule__Extensions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extensions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionsAccess().getLessThanSignKeyword_0()); }
	'<'
	{ after(grammarAccess.getExtensionsAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extensions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extensions__Group__1__Impl
	rule__Extensions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Extensions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionsAccess().getNodesAssignment_1()); }
	(rule__Extensions__NodesAssignment_1)*
	{ after(grammarAccess.getExtensionsAccess().getNodesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extensions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Extensions__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extensions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionsAccess().getGreaterThanSignKeyword_2()); }
	'>'
	{ after(grammarAccess.getExtensionsAccess().getGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChildNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChildNode__Group__0__Impl
	rule__ChildNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChildNodeAccess().getGroup_0()); }
	(rule__ChildNode__Group_0__0)?
	{ after(grammarAccess.getChildNodeAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChildNode__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChildNodeAccess().getTypeAssignment_1()); }
	(rule__ChildNode__TypeAssignment_1)
	{ after(grammarAccess.getChildNodeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChildNode__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChildNode__Group_0__0__Impl
	rule__ChildNode__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNode__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChildNodeAccess().getSelectorAssignment_0_0()); }
	(rule__ChildNode__SelectorAssignment_0_0)
	{ after(grammarAccess.getChildNodeAccess().getSelectorAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNode__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChildNode__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNode__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChildNodeAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getChildNodeAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeAttribute__Group__0__Impl
	rule__NodeAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAttributeAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getNodeAttributeAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeAttribute__Group__1__Impl
	rule__NodeAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAttributeAccess().getAttributeAssignment_1()); }
	(rule__NodeAttribute__AttributeAssignment_1)
	{ after(grammarAccess.getNodeAttributeAccess().getAttributeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeAttribute__Group__2__Impl
	rule__NodeAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAttributeAccess().getGroup_2()); }
	(rule__NodeAttribute__Group_2__0)?
	{ after(grammarAccess.getNodeAttributeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeAttribute__Group__3__Impl
	rule__NodeAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAttributeAccess().getPropertyAssignment_3()); }
	(rule__NodeAttribute__PropertyAssignment_3)
	{ after(grammarAccess.getNodeAttributeAccess().getPropertyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeAttribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAttributeAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getNodeAttributeAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeAttribute__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeAttribute__Group_2__0__Impl
	rule__NodeAttribute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAttributeAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getNodeAttributeAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeAttribute__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAttributeAccess().getTypeAssignment_2_1()); }
	(rule__NodeAttribute__TypeAssignment_2_1)
	{ after(grammarAccess.getNodeAttributeAccess().getTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlock__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_1__0__Impl
	rule__CodeBlock__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_1__1__Impl
	rule__CodeBlock__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getCodeBlockParserRuleCall_1_1()); }
	ruleCodeBlock
	{ after(grammarAccess.getCodeBlockAccess().getCodeBlockParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getCodeBlockAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
	}
:
	rule__Model__UnorderedGroup__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getModelAccess().getUnorderedGroup())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getModuleAssignment_0()); }
					(rule__Model__ModuleAssignment_0)
					{ after(grammarAccess.getModelAccess().getModuleAssignment_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getTreeAssignment_1()); }
					(rule__Model__TreeAssignment_1)
					{ after(grammarAccess.getModelAccess().getTreeAssignment_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getImpAssignment_2()); }
					(rule__Model__ImpAssignment_2)
					{ after(grammarAccess.getModelAccess().getImpAssignment_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getExpAssignment_3()); }
					(rule__Model__ExpAssignment_3)
					{ after(grammarAccess.getModelAccess().getExpAssignment_3()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 4);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getGloAssignment_4()); }
					(rule__Model__GloAssignment_4)
					{ after(grammarAccess.getModelAccess().getGloAssignment_4()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 5);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getLocAssignment_5()); }
					(rule__Model__LocAssignment_5)
					{ after(grammarAccess.getModelAccess().getLocAssignment_5()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 6)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 6);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getBegAssignment_6()); }
					(rule__Model__BegAssignment_6)
					{ after(grammarAccess.getModelAccess().getBegAssignment_6()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 7)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 7);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getCloAssignment_7()); }
					(rule__Model__CloAssignment_7)
					{ after(grammarAccess.getModelAccess().getCloAssignment_7()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 8)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 8);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getProAssignment_8()); }
					(rule__Model__ProAssignment_8)
					{ after(grammarAccess.getModelAccess().getProAssignment_8()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 9)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 9);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getRulAssignment_9()); }
					(rule__Model__RulAssignment_9)
					{ after(grammarAccess.getModelAccess().getRulAssignment_9()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 10)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 10);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getDecAssignment_10()); }
					(rule__Model__DecAssignment_10)
					{ after(grammarAccess.getModelAccess().getDecAssignment_10()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__5?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__6?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__7?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__8?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__9?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__10?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyList__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getPropertyListAccess().getUnorderedGroup());
	}
:
	rule__PropertyList__UnorderedGroup__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getPropertyListAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__PropertyList__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPropertyListAccess().getPropsAssignment_0()); }
					(rule__PropertyList__PropsAssignment_0)
					{ after(grammarAccess.getPropertyListAccess().getPropsAssignment_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPropertyListAccess().getPropsAssignment_1()); }
					(rule__PropertyList__PropsAssignment_1)
					{ after(grammarAccess.getPropertyListAccess().getPropsAssignment_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPropertyListAccess().getPropsAssignment_2()); }
					(rule__PropertyList__PropsAssignment_2)
					{ after(grammarAccess.getPropertyListAccess().getPropsAssignment_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPropertyListAccess().getPropsAssignment_3()); }
					(rule__PropertyList__PropsAssignment_3)
					{ after(grammarAccess.getPropertyListAccess().getPropsAssignment_3()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 4);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPropertyListAccess().getPropsAssignment_4()); }
					(rule__PropertyList__PropsAssignment_4)
					{ after(grammarAccess.getPropertyListAccess().getPropsAssignment_4()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 5);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPropertyListAccess().getPropsAssignment_5()); }
					(rule__PropertyList__PropsAssignment_5)
					{ after(grammarAccess.getPropertyListAccess().getPropsAssignment_5()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 6)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 6);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPropertyListAccess().getPropsAssignment_6()); }
					(rule__PropertyList__PropsAssignment_6)
					{ after(grammarAccess.getPropertyListAccess().getPropsAssignment_6()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 7)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 7);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getPropertyListAccess().getPropsAssignment_7()); }
					(rule__PropertyList__PropsAssignment_7)
					{ after(grammarAccess.getPropertyListAccess().getPropsAssignment_7()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyListAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__PropertyList__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyList__UnorderedGroup__Impl
	rule__PropertyList__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyList__UnorderedGroup__Impl
	rule__PropertyList__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyList__UnorderedGroup__Impl
	rule__PropertyList__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__UnorderedGroup__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyList__UnorderedGroup__Impl
	rule__PropertyList__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__UnorderedGroup__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyList__UnorderedGroup__Impl
	rule__PropertyList__UnorderedGroup__5?
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__UnorderedGroup__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyList__UnorderedGroup__Impl
	rule__PropertyList__UnorderedGroup__6?
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__UnorderedGroup__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyList__UnorderedGroup__Impl
	rule__PropertyList__UnorderedGroup__7?
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__UnorderedGroup__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyList__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ModuleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getModuleModuleParserRuleCall_0_0()); }
		ruleModule
		{ after(grammarAccess.getModelAccess().getModuleModuleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TreeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTreeTreeParserRuleCall_1_0()); }
		ruleTree
		{ after(grammarAccess.getModelAccess().getTreeTreeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImpImportParserRuleCall_2_0()); }
		ruleImport
		{ after(grammarAccess.getModelAccess().getImpImportParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getExpExportParserRuleCall_3_0()); }
		ruleExport
		{ after(grammarAccess.getModelAccess().getExpExportParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GloAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGloGlobalParserRuleCall_4_0()); }
		ruleGlobal
		{ after(grammarAccess.getModelAccess().getGloGlobalParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__LocAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getLocLocalParserRuleCall_5_0()); }
		ruleLocal
		{ after(grammarAccess.getModelAccess().getLocLocalParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__BegAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getBegBeginParserRuleCall_6_0()); }
		ruleBegin
		{ after(grammarAccess.getModelAccess().getBegBeginParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__CloAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCloCloseParserRuleCall_7_0()); }
		ruleClose
		{ after(grammarAccess.getModelAccess().getCloCloseParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ProAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getProPropertiesParserRuleCall_8_0()); }
		ruleProperties
		{ after(grammarAccess.getModelAccess().getProPropertiesParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RulAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRulRuleParserRuleCall_9_0()); }
		ruleRule
		{ after(grammarAccess.getModelAccess().getRulRuleParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DecAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDecDeclareParserRuleCall_10_0()); }
		ruleDeclare
		{ after(grammarAccess.getModelAccess().getDecDeclareParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tree__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTreeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTreeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__CodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getCodeCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getImportAccess().getCodeCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__CodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportAccess().getCodeCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getExportAccess().getCodeCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__CodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getCodeCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getGlobalAccess().getCodeCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__CodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAccess().getCodeCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getLocalAccess().getCodeCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__CodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeginAccess().getCodeCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getBeginAccess().getCodeCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__CodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCloseAccess().getCodeCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getCloseAccess().getCodeCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__PropertyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertiesAccess().getPropertyPropertyListParserRuleCall_1_0()); }
		rulePropertyList
		{ after(grammarAccess.getPropertiesAccess().getPropertyPropertyListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__PropsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyListAccess().getPropsINPUTKeyword_0_0()); }
		(
			{ before(grammarAccess.getPropertyListAccess().getPropsINPUTKeyword_0_0()); }
			'INPUT'
			{ after(grammarAccess.getPropertyListAccess().getPropsINPUTKeyword_0_0()); }
		)
		{ after(grammarAccess.getPropertyListAccess().getPropsINPUTKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__PropsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyListAccess().getPropsOUTPUTKeyword_1_0()); }
		(
			{ before(grammarAccess.getPropertyListAccess().getPropsOUTPUTKeyword_1_0()); }
			'OUTPUT'
			{ after(grammarAccess.getPropertyListAccess().getPropsOUTPUTKeyword_1_0()); }
		)
		{ after(grammarAccess.getPropertyListAccess().getPropsOUTPUTKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__PropsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyListAccess().getPropsSYNTHESIZEDKeyword_2_0()); }
		(
			{ before(grammarAccess.getPropertyListAccess().getPropsSYNTHESIZEDKeyword_2_0()); }
			'SYNTHESIZED'
			{ after(grammarAccess.getPropertyListAccess().getPropsSYNTHESIZEDKeyword_2_0()); }
		)
		{ after(grammarAccess.getPropertyListAccess().getPropsSYNTHESIZEDKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__PropsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyListAccess().getPropsINHERITEDKeyword_3_0()); }
		(
			{ before(grammarAccess.getPropertyListAccess().getPropsINHERITEDKeyword_3_0()); }
			'INHERITED'
			{ after(grammarAccess.getPropertyListAccess().getPropsINHERITEDKeyword_3_0()); }
		)
		{ after(grammarAccess.getPropertyListAccess().getPropsINHERITEDKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__PropsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyListAccess().getPropsTHREADKeyword_4_0()); }
		(
			{ before(grammarAccess.getPropertyListAccess().getPropsTHREADKeyword_4_0()); }
			'THREAD'
			{ after(grammarAccess.getPropertyListAccess().getPropsTHREADKeyword_4_0()); }
		)
		{ after(grammarAccess.getPropertyListAccess().getPropsTHREADKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__PropsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyListAccess().getPropsREVERSEKeyword_5_0()); }
		(
			{ before(grammarAccess.getPropertyListAccess().getPropsREVERSEKeyword_5_0()); }
			'REVERSE'
			{ after(grammarAccess.getPropertyListAccess().getPropsREVERSEKeyword_5_0()); }
		)
		{ after(grammarAccess.getPropertyListAccess().getPropsREVERSEKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__PropsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyListAccess().getPropsIGNOREKeyword_6_0()); }
		(
			{ before(grammarAccess.getPropertyListAccess().getPropsIGNOREKeyword_6_0()); }
			'IGNORE'
			{ after(grammarAccess.getPropertyListAccess().getPropsIGNOREKeyword_6_0()); }
		)
		{ after(grammarAccess.getPropertyListAccess().getPropsIGNOREKeyword_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyList__PropsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyListAccess().getPropsVIRTUALKeyword_7_0()); }
		(
			{ before(grammarAccess.getPropertyListAccess().getPropsVIRTUALKeyword_7_0()); }
			'VIRTUAL'
			{ after(grammarAccess.getPropertyListAccess().getPropsVIRTUALKeyword_7_0()); }
		)
		{ after(grammarAccess.getPropertyListAccess().getPropsVIRTUALKeyword_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declare__NodesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclareAccess().getNodesDeclareNodeParserRuleCall_1_0()); }
		ruleDeclareNode
		{ after(grammarAccess.getDeclareAccess().getNodesDeclareNodeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclareNodeAccess().getNamesNodeNameParserRuleCall_0_0()); }
		ruleNodeName
		{ after(grammarAccess.getDeclareNodeAccess().getNamesNodeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclareNodeAccess().getTypeAlternatives_1_0()); }
		(rule__DeclareNode__TypeAlternatives_1_0)
		{ after(grammarAccess.getDeclareNodeAccess().getTypeAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareNode__PartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclareNodeAccess().getPartNodePartParserRuleCall_2_0()); }
		ruleNodePart
		{ after(grammarAccess.getDeclareNodeAccess().getPartNodePartParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NodesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getNodesRootNodeParserRuleCall_1_0()); }
		ruleRootNode
		{ after(grammarAccess.getRuleAccess().getNodesRootNodeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootNodeAccess().getNameNodeNameParserRuleCall_0_0()); }
		ruleNodeName
		{ after(grammarAccess.getRootNodeAccess().getNameNodeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__BaseTypesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootNodeAccess().getBaseTypesBaseTypesParserRuleCall_1_0()); }
		ruleBaseTypes
		{ after(grammarAccess.getRootNodeAccess().getBaseTypesBaseTypesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootNodeAccess().getTypeNodeTypeParserRuleCall_2_0()); }
		ruleNodeType
		{ after(grammarAccess.getRootNodeAccess().getTypeNodeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__PartAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootNodeAccess().getPartNodePartParserRuleCall_3_0()); }
		ruleNodePart
		{ after(grammarAccess.getRootNodeAccess().getPartNodePartParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootNode__ExtensionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootNodeAccess().getExtensionExtensionsParserRuleCall_4_0()); }
		ruleExtensions
		{ after(grammarAccess.getRootNodeAccess().getExtensionExtensionsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseTypes__NamesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseTypesAccess().getNamesNodeNameCrossReference_1_0()); }
		(
			{ before(grammarAccess.getBaseTypesAccess().getNamesNodeNameIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBaseTypesAccess().getNamesNodeNameIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getBaseTypesAccess().getNamesNodeNameCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Extensions__NodesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionsAccess().getNodesRootNodeParserRuleCall_1_0()); }
		ruleRootNode
		{ after(grammarAccess.getExtensionsAccess().getNodesRootNodeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodePart__ChildAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodePartAccess().getChildChildNodeParserRuleCall_0_0()); }
		ruleChildNode
		{ after(grammarAccess.getNodePartAccess().getChildChildNodeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodePart__AttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodePartAccess().getAttributeNodeAttributeParserRuleCall_1_0()); }
		ruleNodeAttribute
		{ after(grammarAccess.getNodePartAccess().getAttributeNodeAttributeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNode__SelectorAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChildNodeAccess().getSelectorIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getChildNodeAccess().getSelectorIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChildNode__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChildNodeAccess().getTypeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getChildNodeAccess().getTypeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__AttributeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAttributeAccess().getAttributeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeAttributeAccess().getAttributeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAttributeAccess().getTypeIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNodeAttributeAccess().getTypeIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeAttribute__PropertyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAttributeAccess().getPropertyPropertyListParserRuleCall_3_0()); }
		rulePropertyList
		{ after(grammarAccess.getNodeAttributeAccess().getPropertyPropertyListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeNameAccess().getNameAlternatives_0()); }
		(rule__NodeName__NameAlternatives_0)
		{ after(grammarAccess.getNodeNameAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
