/**
 * generated by Xtext 2.9.1
 */
package de.roma.cocktail.xtext.ast;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see de.roma.cocktail.xtext.ast.AstFactory
 * @model kind="package"
 * @generated
 */
public interface AstPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "ast";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.roma.de/cocktail/xtext/Ast";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "ast";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  AstPackage eINSTANCE = de.roma.cocktail.xtext.ast.impl.AstPackageImpl.init();

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.ModelImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Module</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__MODULE = 0;

  /**
   * The feature id for the '<em><b>Tree</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__TREE = 1;

  /**
   * The feature id for the '<em><b>Imp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__IMP = 2;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__EXP = 3;

  /**
   * The feature id for the '<em><b>Glo</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__GLO = 4;

  /**
   * The feature id for the '<em><b>Loc</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__LOC = 5;

  /**
   * The feature id for the '<em><b>Beg</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__BEG = 6;

  /**
   * The feature id for the '<em><b>Clo</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__CLO = 7;

  /**
   * The feature id for the '<em><b>Pro</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__PRO = 8;

  /**
   * The feature id for the '<em><b>Rul</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__RUL = 9;

  /**
   * The feature id for the '<em><b>Dec</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__DEC = 10;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 11;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.ModuleImpl <em>Module</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.ModuleImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getModule()
   * @generated
   */
  int MODULE = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE__NAME = 0;

  /**
   * The number of structural features of the '<em>Module</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.TreeImpl <em>Tree</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.TreeImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getTree()
   * @generated
   */
  int TREE = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TREE__NAME = 0;

  /**
   * The number of structural features of the '<em>Tree</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TREE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.ImportImpl <em>Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.ImportImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getImport()
   * @generated
   */
  int IMPORT = 3;

  /**
   * The feature id for the '<em><b>Code</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__CODE = 0;

  /**
   * The number of structural features of the '<em>Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.ExportImpl <em>Export</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.ExportImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getExport()
   * @generated
   */
  int EXPORT = 4;

  /**
   * The feature id for the '<em><b>Code</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT__CODE = 0;

  /**
   * The number of structural features of the '<em>Export</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.GlobalImpl <em>Global</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.GlobalImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getGlobal()
   * @generated
   */
  int GLOBAL = 5;

  /**
   * The feature id for the '<em><b>Code</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GLOBAL__CODE = 0;

  /**
   * The number of structural features of the '<em>Global</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GLOBAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.LocalImpl <em>Local</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.LocalImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getLocal()
   * @generated
   */
  int LOCAL = 6;

  /**
   * The feature id for the '<em><b>Code</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL__CODE = 0;

  /**
   * The number of structural features of the '<em>Local</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOCAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.BeginImpl <em>Begin</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.BeginImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getBegin()
   * @generated
   */
  int BEGIN = 7;

  /**
   * The feature id for the '<em><b>Code</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEGIN__CODE = 0;

  /**
   * The number of structural features of the '<em>Begin</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BEGIN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.CloseImpl <em>Close</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.CloseImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getClose()
   * @generated
   */
  int CLOSE = 8;

  /**
   * The feature id for the '<em><b>Code</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLOSE__CODE = 0;

  /**
   * The number of structural features of the '<em>Close</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CLOSE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.PropertiesImpl <em>Properties</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.PropertiesImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getProperties()
   * @generated
   */
  int PROPERTIES = 9;

  /**
   * The feature id for the '<em><b>Property</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTIES__PROPERTY = 0;

  /**
   * The number of structural features of the '<em>Properties</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTIES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.PropertyListImpl <em>Property List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.PropertyListImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getPropertyList()
   * @generated
   */
  int PROPERTY_LIST = 10;

  /**
   * The feature id for the '<em><b>Props</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_LIST__PROPS = 0;

  /**
   * The number of structural features of the '<em>Property List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROPERTY_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.DeclareImpl <em>Declare</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.DeclareImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getDeclare()
   * @generated
   */
  int DECLARE = 11;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARE__NODES = 0;

  /**
   * The number of structural features of the '<em>Declare</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.DeclareNodeImpl <em>Declare Node</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.DeclareNodeImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getDeclareNode()
   * @generated
   */
  int DECLARE_NODE = 12;

  /**
   * The feature id for the '<em><b>Names</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARE_NODE__NAMES = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARE_NODE__TYPE = 1;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARE_NODE__PART = 2;

  /**
   * The number of structural features of the '<em>Declare Node</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARE_NODE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.RuleImpl <em>Rule</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.RuleImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getRule()
   * @generated
   */
  int RULE = 13;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE__NODES = 0;

  /**
   * The number of structural features of the '<em>Rule</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RULE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.RootNodeImpl <em>Root Node</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.RootNodeImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getRootNode()
   * @generated
   */
  int ROOT_NODE = 14;

  /**
   * The feature id for the '<em><b>Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT_NODE__NAME = 0;

  /**
   * The feature id for the '<em><b>Base Types</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT_NODE__BASE_TYPES = 1;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT_NODE__TYPE = 2;

  /**
   * The feature id for the '<em><b>Part</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT_NODE__PART = 3;

  /**
   * The feature id for the '<em><b>Extension</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT_NODE__EXTENSION = 4;

  /**
   * The number of structural features of the '<em>Root Node</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROOT_NODE_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.BaseTypesImpl <em>Base Types</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.BaseTypesImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getBaseTypes()
   * @generated
   */
  int BASE_TYPES = 15;

  /**
   * The feature id for the '<em><b>Names</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASE_TYPES__NAMES = 0;

  /**
   * The number of structural features of the '<em>Base Types</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASE_TYPES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.ExtensionsImpl <em>Extensions</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.ExtensionsImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getExtensions()
   * @generated
   */
  int EXTENSIONS = 16;

  /**
   * The feature id for the '<em><b>Nodes</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSIONS__NODES = 0;

  /**
   * The number of structural features of the '<em>Extensions</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTENSIONS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.NodePartImpl <em>Node Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.NodePartImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getNodePart()
   * @generated
   */
  int NODE_PART = 17;

  /**
   * The feature id for the '<em><b>Child</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PART__CHILD = 0;

  /**
   * The feature id for the '<em><b>Attribute</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PART__ATTRIBUTE = 1;

  /**
   * The number of structural features of the '<em>Node Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_PART_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.ChildNodeImpl <em>Child Node</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.ChildNodeImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getChildNode()
   * @generated
   */
  int CHILD_NODE = 18;

  /**
   * The feature id for the '<em><b>Selector</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHILD_NODE__SELECTOR = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHILD_NODE__TYPE = 1;

  /**
   * The number of structural features of the '<em>Child Node</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHILD_NODE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.NodeAttributeImpl <em>Node Attribute</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.NodeAttributeImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getNodeAttribute()
   * @generated
   */
  int NODE_ATTRIBUTE = 19;

  /**
   * The feature id for the '<em><b>Attribute</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_ATTRIBUTE__ATTRIBUTE = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_ATTRIBUTE__TYPE = 1;

  /**
   * The feature id for the '<em><b>Property</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_ATTRIBUTE__PROPERTY = 2;

  /**
   * The number of structural features of the '<em>Node Attribute</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_ATTRIBUTE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link de.roma.cocktail.xtext.ast.impl.NodeNameImpl <em>Node Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see de.roma.cocktail.xtext.ast.impl.NodeNameImpl
   * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getNodeName()
   * @generated
   */
  int NODE_NAME = 20;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Node Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NODE_NAME_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see de.roma.cocktail.xtext.ast.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getModule <em>Module</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Module</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getModule()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Module();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getTree <em>Tree</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tree</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getTree()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Tree();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getImp <em>Imp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Imp</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getImp()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Imp();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getExp()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Exp();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getGlo <em>Glo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Glo</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getGlo()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Glo();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getLoc <em>Loc</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Loc</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getLoc()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Loc();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getBeg <em>Beg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Beg</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getBeg()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Beg();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getClo <em>Clo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Clo</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getClo()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Clo();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getPro <em>Pro</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pro</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getPro()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Pro();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getRul <em>Rul</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rul</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getRul()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Rul();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Model#getDec <em>Dec</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Dec</em>'.
   * @see de.roma.cocktail.xtext.ast.Model#getDec()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Dec();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Module <em>Module</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Module</em>'.
   * @see de.roma.cocktail.xtext.ast.Module
   * @generated
   */
  EClass getModule();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.Module#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.ast.Module#getName()
   * @see #getModule()
   * @generated
   */
  EAttribute getModule_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Tree <em>Tree</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tree</em>'.
   * @see de.roma.cocktail.xtext.ast.Tree
   * @generated
   */
  EClass getTree();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.Tree#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.ast.Tree#getName()
   * @see #getTree()
   * @generated
   */
  EAttribute getTree_Name();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import</em>'.
   * @see de.roma.cocktail.xtext.ast.Import
   * @generated
   */
  EClass getImport();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.Import#getCode <em>Code</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Code</em>'.
   * @see de.roma.cocktail.xtext.ast.Import#getCode()
   * @see #getImport()
   * @generated
   */
  EAttribute getImport_Code();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Export <em>Export</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Export</em>'.
   * @see de.roma.cocktail.xtext.ast.Export
   * @generated
   */
  EClass getExport();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.Export#getCode <em>Code</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Code</em>'.
   * @see de.roma.cocktail.xtext.ast.Export#getCode()
   * @see #getExport()
   * @generated
   */
  EAttribute getExport_Code();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Global <em>Global</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Global</em>'.
   * @see de.roma.cocktail.xtext.ast.Global
   * @generated
   */
  EClass getGlobal();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.Global#getCode <em>Code</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Code</em>'.
   * @see de.roma.cocktail.xtext.ast.Global#getCode()
   * @see #getGlobal()
   * @generated
   */
  EAttribute getGlobal_Code();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Local <em>Local</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Local</em>'.
   * @see de.roma.cocktail.xtext.ast.Local
   * @generated
   */
  EClass getLocal();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.Local#getCode <em>Code</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Code</em>'.
   * @see de.roma.cocktail.xtext.ast.Local#getCode()
   * @see #getLocal()
   * @generated
   */
  EAttribute getLocal_Code();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Begin <em>Begin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Begin</em>'.
   * @see de.roma.cocktail.xtext.ast.Begin
   * @generated
   */
  EClass getBegin();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.Begin#getCode <em>Code</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Code</em>'.
   * @see de.roma.cocktail.xtext.ast.Begin#getCode()
   * @see #getBegin()
   * @generated
   */
  EAttribute getBegin_Code();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Close <em>Close</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Close</em>'.
   * @see de.roma.cocktail.xtext.ast.Close
   * @generated
   */
  EClass getClose();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.Close#getCode <em>Code</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Code</em>'.
   * @see de.roma.cocktail.xtext.ast.Close#getCode()
   * @see #getClose()
   * @generated
   */
  EAttribute getClose_Code();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Properties <em>Properties</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Properties</em>'.
   * @see de.roma.cocktail.xtext.ast.Properties
   * @generated
   */
  EClass getProperties();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Properties#getProperty <em>Property</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Property</em>'.
   * @see de.roma.cocktail.xtext.ast.Properties#getProperty()
   * @see #getProperties()
   * @generated
   */
  EReference getProperties_Property();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.PropertyList <em>Property List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Property List</em>'.
   * @see de.roma.cocktail.xtext.ast.PropertyList
   * @generated
   */
  EClass getPropertyList();

  /**
   * Returns the meta object for the attribute list '{@link de.roma.cocktail.xtext.ast.PropertyList#getProps <em>Props</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Props</em>'.
   * @see de.roma.cocktail.xtext.ast.PropertyList#getProps()
   * @see #getPropertyList()
   * @generated
   */
  EAttribute getPropertyList_Props();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Declare <em>Declare</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declare</em>'.
   * @see de.roma.cocktail.xtext.ast.Declare
   * @generated
   */
  EClass getDeclare();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.ast.Declare#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Nodes</em>'.
   * @see de.roma.cocktail.xtext.ast.Declare#getNodes()
   * @see #getDeclare()
   * @generated
   */
  EReference getDeclare_Nodes();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.DeclareNode <em>Declare Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declare Node</em>'.
   * @see de.roma.cocktail.xtext.ast.DeclareNode
   * @generated
   */
  EClass getDeclareNode();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.ast.DeclareNode#getNames <em>Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Names</em>'.
   * @see de.roma.cocktail.xtext.ast.DeclareNode#getNames()
   * @see #getDeclareNode()
   * @generated
   */
  EReference getDeclareNode_Names();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.DeclareNode#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see de.roma.cocktail.xtext.ast.DeclareNode#getType()
   * @see #getDeclareNode()
   * @generated
   */
  EAttribute getDeclareNode_Type();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.ast.DeclareNode#getPart <em>Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Part</em>'.
   * @see de.roma.cocktail.xtext.ast.DeclareNode#getPart()
   * @see #getDeclareNode()
   * @generated
   */
  EReference getDeclareNode_Part();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Rule <em>Rule</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rule</em>'.
   * @see de.roma.cocktail.xtext.ast.Rule
   * @generated
   */
  EClass getRule();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.ast.Rule#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Nodes</em>'.
   * @see de.roma.cocktail.xtext.ast.Rule#getNodes()
   * @see #getRule()
   * @generated
   */
  EReference getRule_Nodes();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.RootNode <em>Root Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Root Node</em>'.
   * @see de.roma.cocktail.xtext.ast.RootNode
   * @generated
   */
  EClass getRootNode();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.RootNode#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.ast.RootNode#getName()
   * @see #getRootNode()
   * @generated
   */
  EReference getRootNode_Name();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.RootNode#getBaseTypes <em>Base Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Base Types</em>'.
   * @see de.roma.cocktail.xtext.ast.RootNode#getBaseTypes()
   * @see #getRootNode()
   * @generated
   */
  EReference getRootNode_BaseTypes();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.RootNode#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see de.roma.cocktail.xtext.ast.RootNode#getType()
   * @see #getRootNode()
   * @generated
   */
  EAttribute getRootNode_Type();

  /**
   * Returns the meta object for the containment reference list '{@link de.roma.cocktail.xtext.ast.RootNode#getPart <em>Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Part</em>'.
   * @see de.roma.cocktail.xtext.ast.RootNode#getPart()
   * @see #getRootNode()
   * @generated
   */
  EReference getRootNode_Part();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.RootNode#getExtension <em>Extension</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Extension</em>'.
   * @see de.roma.cocktail.xtext.ast.RootNode#getExtension()
   * @see #getRootNode()
   * @generated
   */
  EReference getRootNode_Extension();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.BaseTypes <em>Base Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Base Types</em>'.
   * @see de.roma.cocktail.xtext.ast.BaseTypes
   * @generated
   */
  EClass getBaseTypes();

  /**
   * Returns the meta object for the reference list '{@link de.roma.cocktail.xtext.ast.BaseTypes#getNames <em>Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Names</em>'.
   * @see de.roma.cocktail.xtext.ast.BaseTypes#getNames()
   * @see #getBaseTypes()
   * @generated
   */
  EReference getBaseTypes_Names();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.Extensions <em>Extensions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Extensions</em>'.
   * @see de.roma.cocktail.xtext.ast.Extensions
   * @generated
   */
  EClass getExtensions();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.Extensions#getNodes <em>Nodes</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nodes</em>'.
   * @see de.roma.cocktail.xtext.ast.Extensions#getNodes()
   * @see #getExtensions()
   * @generated
   */
  EReference getExtensions_Nodes();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.NodePart <em>Node Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Part</em>'.
   * @see de.roma.cocktail.xtext.ast.NodePart
   * @generated
   */
  EClass getNodePart();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.NodePart#getChild <em>Child</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Child</em>'.
   * @see de.roma.cocktail.xtext.ast.NodePart#getChild()
   * @see #getNodePart()
   * @generated
   */
  EReference getNodePart_Child();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.NodePart#getAttribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Attribute</em>'.
   * @see de.roma.cocktail.xtext.ast.NodePart#getAttribute()
   * @see #getNodePart()
   * @generated
   */
  EReference getNodePart_Attribute();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.ChildNode <em>Child Node</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Child Node</em>'.
   * @see de.roma.cocktail.xtext.ast.ChildNode
   * @generated
   */
  EClass getChildNode();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.ChildNode#getSelector <em>Selector</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Selector</em>'.
   * @see de.roma.cocktail.xtext.ast.ChildNode#getSelector()
   * @see #getChildNode()
   * @generated
   */
  EAttribute getChildNode_Selector();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.ChildNode#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see de.roma.cocktail.xtext.ast.ChildNode#getType()
   * @see #getChildNode()
   * @generated
   */
  EAttribute getChildNode_Type();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.NodeAttribute <em>Node Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Attribute</em>'.
   * @see de.roma.cocktail.xtext.ast.NodeAttribute
   * @generated
   */
  EClass getNodeAttribute();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.NodeAttribute#getAttribute <em>Attribute</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Attribute</em>'.
   * @see de.roma.cocktail.xtext.ast.NodeAttribute#getAttribute()
   * @see #getNodeAttribute()
   * @generated
   */
  EAttribute getNodeAttribute_Attribute();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.NodeAttribute#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see de.roma.cocktail.xtext.ast.NodeAttribute#getType()
   * @see #getNodeAttribute()
   * @generated
   */
  EAttribute getNodeAttribute_Type();

  /**
   * Returns the meta object for the containment reference '{@link de.roma.cocktail.xtext.ast.NodeAttribute#getProperty <em>Property</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Property</em>'.
   * @see de.roma.cocktail.xtext.ast.NodeAttribute#getProperty()
   * @see #getNodeAttribute()
   * @generated
   */
  EReference getNodeAttribute_Property();

  /**
   * Returns the meta object for class '{@link de.roma.cocktail.xtext.ast.NodeName <em>Node Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Node Name</em>'.
   * @see de.roma.cocktail.xtext.ast.NodeName
   * @generated
   */
  EClass getNodeName();

  /**
   * Returns the meta object for the attribute '{@link de.roma.cocktail.xtext.ast.NodeName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see de.roma.cocktail.xtext.ast.NodeName#getName()
   * @see #getNodeName()
   * @generated
   */
  EAttribute getNodeName_Name();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  AstFactory getAstFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.ModelImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Module</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__MODULE = eINSTANCE.getModel_Module();

    /**
     * The meta object literal for the '<em><b>Tree</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__TREE = eINSTANCE.getModel_Tree();

    /**
     * The meta object literal for the '<em><b>Imp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__IMP = eINSTANCE.getModel_Imp();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__EXP = eINSTANCE.getModel_Exp();

    /**
     * The meta object literal for the '<em><b>Glo</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__GLO = eINSTANCE.getModel_Glo();

    /**
     * The meta object literal for the '<em><b>Loc</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__LOC = eINSTANCE.getModel_Loc();

    /**
     * The meta object literal for the '<em><b>Beg</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__BEG = eINSTANCE.getModel_Beg();

    /**
     * The meta object literal for the '<em><b>Clo</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__CLO = eINSTANCE.getModel_Clo();

    /**
     * The meta object literal for the '<em><b>Pro</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__PRO = eINSTANCE.getModel_Pro();

    /**
     * The meta object literal for the '<em><b>Rul</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__RUL = eINSTANCE.getModel_Rul();

    /**
     * The meta object literal for the '<em><b>Dec</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__DEC = eINSTANCE.getModel_Dec();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.ModuleImpl <em>Module</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.ModuleImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getModule()
     * @generated
     */
    EClass MODULE = eINSTANCE.getModule();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODULE__NAME = eINSTANCE.getModule_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.TreeImpl <em>Tree</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.TreeImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getTree()
     * @generated
     */
    EClass TREE = eINSTANCE.getTree();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TREE__NAME = eINSTANCE.getTree_Name();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.ImportImpl <em>Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.ImportImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getImport()
     * @generated
     */
    EClass IMPORT = eINSTANCE.getImport();

    /**
     * The meta object literal for the '<em><b>Code</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT__CODE = eINSTANCE.getImport_Code();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.ExportImpl <em>Export</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.ExportImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getExport()
     * @generated
     */
    EClass EXPORT = eINSTANCE.getExport();

    /**
     * The meta object literal for the '<em><b>Code</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPORT__CODE = eINSTANCE.getExport_Code();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.GlobalImpl <em>Global</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.GlobalImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getGlobal()
     * @generated
     */
    EClass GLOBAL = eINSTANCE.getGlobal();

    /**
     * The meta object literal for the '<em><b>Code</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute GLOBAL__CODE = eINSTANCE.getGlobal_Code();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.LocalImpl <em>Local</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.LocalImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getLocal()
     * @generated
     */
    EClass LOCAL = eINSTANCE.getLocal();

    /**
     * The meta object literal for the '<em><b>Code</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOCAL__CODE = eINSTANCE.getLocal_Code();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.BeginImpl <em>Begin</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.BeginImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getBegin()
     * @generated
     */
    EClass BEGIN = eINSTANCE.getBegin();

    /**
     * The meta object literal for the '<em><b>Code</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BEGIN__CODE = eINSTANCE.getBegin_Code();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.CloseImpl <em>Close</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.CloseImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getClose()
     * @generated
     */
    EClass CLOSE = eINSTANCE.getClose();

    /**
     * The meta object literal for the '<em><b>Code</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CLOSE__CODE = eINSTANCE.getClose_Code();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.PropertiesImpl <em>Properties</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.PropertiesImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getProperties()
     * @generated
     */
    EClass PROPERTIES = eINSTANCE.getProperties();

    /**
     * The meta object literal for the '<em><b>Property</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROPERTIES__PROPERTY = eINSTANCE.getProperties_Property();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.PropertyListImpl <em>Property List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.PropertyListImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getPropertyList()
     * @generated
     */
    EClass PROPERTY_LIST = eINSTANCE.getPropertyList();

    /**
     * The meta object literal for the '<em><b>Props</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROPERTY_LIST__PROPS = eINSTANCE.getPropertyList_Props();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.DeclareImpl <em>Declare</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.DeclareImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getDeclare()
     * @generated
     */
    EClass DECLARE = eINSTANCE.getDeclare();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARE__NODES = eINSTANCE.getDeclare_Nodes();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.DeclareNodeImpl <em>Declare Node</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.DeclareNodeImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getDeclareNode()
     * @generated
     */
    EClass DECLARE_NODE = eINSTANCE.getDeclareNode();

    /**
     * The meta object literal for the '<em><b>Names</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARE_NODE__NAMES = eINSTANCE.getDeclareNode_Names();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DECLARE_NODE__TYPE = eINSTANCE.getDeclareNode_Type();

    /**
     * The meta object literal for the '<em><b>Part</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARE_NODE__PART = eINSTANCE.getDeclareNode_Part();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.RuleImpl <em>Rule</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.RuleImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getRule()
     * @generated
     */
    EClass RULE = eINSTANCE.getRule();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RULE__NODES = eINSTANCE.getRule_Nodes();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.RootNodeImpl <em>Root Node</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.RootNodeImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getRootNode()
     * @generated
     */
    EClass ROOT_NODE = eINSTANCE.getRootNode();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROOT_NODE__NAME = eINSTANCE.getRootNode_Name();

    /**
     * The meta object literal for the '<em><b>Base Types</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROOT_NODE__BASE_TYPES = eINSTANCE.getRootNode_BaseTypes();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ROOT_NODE__TYPE = eINSTANCE.getRootNode_Type();

    /**
     * The meta object literal for the '<em><b>Part</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROOT_NODE__PART = eINSTANCE.getRootNode_Part();

    /**
     * The meta object literal for the '<em><b>Extension</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROOT_NODE__EXTENSION = eINSTANCE.getRootNode_Extension();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.BaseTypesImpl <em>Base Types</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.BaseTypesImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getBaseTypes()
     * @generated
     */
    EClass BASE_TYPES = eINSTANCE.getBaseTypes();

    /**
     * The meta object literal for the '<em><b>Names</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BASE_TYPES__NAMES = eINSTANCE.getBaseTypes_Names();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.ExtensionsImpl <em>Extensions</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.ExtensionsImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getExtensions()
     * @generated
     */
    EClass EXTENSIONS = eINSTANCE.getExtensions();

    /**
     * The meta object literal for the '<em><b>Nodes</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTENSIONS__NODES = eINSTANCE.getExtensions_Nodes();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.NodePartImpl <em>Node Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.NodePartImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getNodePart()
     * @generated
     */
    EClass NODE_PART = eINSTANCE.getNodePart();

    /**
     * The meta object literal for the '<em><b>Child</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_PART__CHILD = eINSTANCE.getNodePart_Child();

    /**
     * The meta object literal for the '<em><b>Attribute</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_PART__ATTRIBUTE = eINSTANCE.getNodePart_Attribute();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.ChildNodeImpl <em>Child Node</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.ChildNodeImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getChildNode()
     * @generated
     */
    EClass CHILD_NODE = eINSTANCE.getChildNode();

    /**
     * The meta object literal for the '<em><b>Selector</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHILD_NODE__SELECTOR = eINSTANCE.getChildNode_Selector();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHILD_NODE__TYPE = eINSTANCE.getChildNode_Type();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.NodeAttributeImpl <em>Node Attribute</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.NodeAttributeImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getNodeAttribute()
     * @generated
     */
    EClass NODE_ATTRIBUTE = eINSTANCE.getNodeAttribute();

    /**
     * The meta object literal for the '<em><b>Attribute</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE_ATTRIBUTE__ATTRIBUTE = eINSTANCE.getNodeAttribute_Attribute();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE_ATTRIBUTE__TYPE = eINSTANCE.getNodeAttribute_Type();

    /**
     * The meta object literal for the '<em><b>Property</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NODE_ATTRIBUTE__PROPERTY = eINSTANCE.getNodeAttribute_Property();

    /**
     * The meta object literal for the '{@link de.roma.cocktail.xtext.ast.impl.NodeNameImpl <em>Node Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see de.roma.cocktail.xtext.ast.impl.NodeNameImpl
     * @see de.roma.cocktail.xtext.ast.impl.AstPackageImpl#getNodeName()
     * @generated
     */
    EClass NODE_NAME = eINSTANCE.getNodeName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NODE_NAME__NAME = eINSTANCE.getNodeName_Name();

  }

} //AstPackage
