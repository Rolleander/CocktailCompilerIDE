/**
 * generated by Xtext 2.9.1
 */
package de.roma.cocktail.xtext.ast.impl;

import de.roma.cocktail.xtext.ast.AstPackage;
import de.roma.cocktail.xtext.ast.ModuleName;
import de.roma.cocktail.xtext.ast.Modules;
import de.roma.cocktail.xtext.ast.Specification;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Modules</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link de.roma.cocktail.xtext.ast.impl.ModulesImpl#getModuleName <em>Module Name</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.ast.impl.ModulesImpl#getSpecification <em>Specification</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.ast.impl.ModulesImpl#getModuleNameEnd <em>Module Name End</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ModulesImpl extends MinimalEObjectImpl.Container implements Modules
{
  /**
   * The cached value of the '{@link #getModuleName() <em>Module Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModuleName()
   * @generated
   * @ordered
   */
  protected ModuleName moduleName;

  /**
   * The cached value of the '{@link #getSpecification() <em>Specification</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpecification()
   * @generated
   * @ordered
   */
  protected Specification specification;

  /**
   * The cached value of the '{@link #getModuleNameEnd() <em>Module Name End</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModuleNameEnd()
   * @generated
   * @ordered
   */
  protected ModuleName moduleNameEnd;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModulesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AstPackage.Literals.MODULES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModuleName getModuleName()
  {
    return moduleName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetModuleName(ModuleName newModuleName, NotificationChain msgs)
  {
    ModuleName oldModuleName = moduleName;
    moduleName = newModuleName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AstPackage.MODULES__MODULE_NAME, oldModuleName, newModuleName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setModuleName(ModuleName newModuleName)
  {
    if (newModuleName != moduleName)
    {
      NotificationChain msgs = null;
      if (moduleName != null)
        msgs = ((InternalEObject)moduleName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AstPackage.MODULES__MODULE_NAME, null, msgs);
      if (newModuleName != null)
        msgs = ((InternalEObject)newModuleName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AstPackage.MODULES__MODULE_NAME, null, msgs);
      msgs = basicSetModuleName(newModuleName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AstPackage.MODULES__MODULE_NAME, newModuleName, newModuleName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Specification getSpecification()
  {
    return specification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSpecification(Specification newSpecification, NotificationChain msgs)
  {
    Specification oldSpecification = specification;
    specification = newSpecification;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AstPackage.MODULES__SPECIFICATION, oldSpecification, newSpecification);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSpecification(Specification newSpecification)
  {
    if (newSpecification != specification)
    {
      NotificationChain msgs = null;
      if (specification != null)
        msgs = ((InternalEObject)specification).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AstPackage.MODULES__SPECIFICATION, null, msgs);
      if (newSpecification != null)
        msgs = ((InternalEObject)newSpecification).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AstPackage.MODULES__SPECIFICATION, null, msgs);
      msgs = basicSetSpecification(newSpecification, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AstPackage.MODULES__SPECIFICATION, newSpecification, newSpecification));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModuleName getModuleNameEnd()
  {
    if (moduleNameEnd != null && moduleNameEnd.eIsProxy())
    {
      InternalEObject oldModuleNameEnd = (InternalEObject)moduleNameEnd;
      moduleNameEnd = (ModuleName)eResolveProxy(oldModuleNameEnd);
      if (moduleNameEnd != oldModuleNameEnd)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AstPackage.MODULES__MODULE_NAME_END, oldModuleNameEnd, moduleNameEnd));
      }
    }
    return moduleNameEnd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ModuleName basicGetModuleNameEnd()
  {
    return moduleNameEnd;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setModuleNameEnd(ModuleName newModuleNameEnd)
  {
    ModuleName oldModuleNameEnd = moduleNameEnd;
    moduleNameEnd = newModuleNameEnd;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AstPackage.MODULES__MODULE_NAME_END, oldModuleNameEnd, moduleNameEnd));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AstPackage.MODULES__MODULE_NAME:
        return basicSetModuleName(null, msgs);
      case AstPackage.MODULES__SPECIFICATION:
        return basicSetSpecification(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AstPackage.MODULES__MODULE_NAME:
        return getModuleName();
      case AstPackage.MODULES__SPECIFICATION:
        return getSpecification();
      case AstPackage.MODULES__MODULE_NAME_END:
        if (resolve) return getModuleNameEnd();
        return basicGetModuleNameEnd();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AstPackage.MODULES__MODULE_NAME:
        setModuleName((ModuleName)newValue);
        return;
      case AstPackage.MODULES__SPECIFICATION:
        setSpecification((Specification)newValue);
        return;
      case AstPackage.MODULES__MODULE_NAME_END:
        setModuleNameEnd((ModuleName)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AstPackage.MODULES__MODULE_NAME:
        setModuleName((ModuleName)null);
        return;
      case AstPackage.MODULES__SPECIFICATION:
        setSpecification((Specification)null);
        return;
      case AstPackage.MODULES__MODULE_NAME_END:
        setModuleNameEnd((ModuleName)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AstPackage.MODULES__MODULE_NAME:
        return moduleName != null;
      case AstPackage.MODULES__SPECIFICATION:
        return specification != null;
      case AstPackage.MODULES__MODULE_NAME_END:
        return moduleNameEnd != null;
    }
    return super.eIsSet(featureID);
  }

} //ModulesImpl
