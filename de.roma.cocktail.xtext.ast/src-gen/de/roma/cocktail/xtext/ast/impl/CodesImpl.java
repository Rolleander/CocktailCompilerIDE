/**
 * generated by Xtext 2.9.1
 */
package de.roma.cocktail.xtext.ast.impl;

import de.roma.cocktail.xtext.ast.AstPackage;
import de.roma.cocktail.xtext.ast.Begin;
import de.roma.cocktail.xtext.ast.Close;
import de.roma.cocktail.xtext.ast.Codes;
import de.roma.cocktail.xtext.ast.Export;
import de.roma.cocktail.xtext.ast.Global;
import de.roma.cocktail.xtext.ast.Import;
import de.roma.cocktail.xtext.ast.Local;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Codes</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.roma.cocktail.xtext.ast.impl.CodesImpl#getImp <em>Imp</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.ast.impl.CodesImpl#getExp <em>Exp</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.ast.impl.CodesImpl#getGlo <em>Glo</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.ast.impl.CodesImpl#getLoc <em>Loc</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.ast.impl.CodesImpl#getBeg <em>Beg</em>}</li>
 *   <li>{@link de.roma.cocktail.xtext.ast.impl.CodesImpl#getClo <em>Clo</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CodesImpl extends MinimalEObjectImpl.Container implements Codes
{
  /**
   * The cached value of the '{@link #getImp() <em>Imp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImp()
   * @generated
   * @ordered
   */
  protected Import imp;

  /**
   * The cached value of the '{@link #getExp() <em>Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExp()
   * @generated
   * @ordered
   */
  protected Export exp;

  /**
   * The cached value of the '{@link #getGlo() <em>Glo</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGlo()
   * @generated
   * @ordered
   */
  protected Global glo;

  /**
   * The cached value of the '{@link #getLoc() <em>Loc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLoc()
   * @generated
   * @ordered
   */
  protected Local loc;

  /**
   * The cached value of the '{@link #getBeg() <em>Beg</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBeg()
   * @generated
   * @ordered
   */
  protected Begin beg;

  /**
   * The cached value of the '{@link #getClo() <em>Clo</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClo()
   * @generated
   * @ordered
   */
  protected Close clo;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CodesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AstPackage.Literals.CODES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Import getImp()
  {
    return imp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetImp(Import newImp, NotificationChain msgs)
  {
    Import oldImp = imp;
    imp = newImp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AstPackage.CODES__IMP, oldImp, newImp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImp(Import newImp)
  {
    if (newImp != imp)
    {
      NotificationChain msgs = null;
      if (imp != null)
        msgs = ((InternalEObject)imp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__IMP, null, msgs);
      if (newImp != null)
        msgs = ((InternalEObject)newImp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__IMP, null, msgs);
      msgs = basicSetImp(newImp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AstPackage.CODES__IMP, newImp, newImp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Export getExp()
  {
    return exp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExp(Export newExp, NotificationChain msgs)
  {
    Export oldExp = exp;
    exp = newExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AstPackage.CODES__EXP, oldExp, newExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExp(Export newExp)
  {
    if (newExp != exp)
    {
      NotificationChain msgs = null;
      if (exp != null)
        msgs = ((InternalEObject)exp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__EXP, null, msgs);
      if (newExp != null)
        msgs = ((InternalEObject)newExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__EXP, null, msgs);
      msgs = basicSetExp(newExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AstPackage.CODES__EXP, newExp, newExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Global getGlo()
  {
    return glo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGlo(Global newGlo, NotificationChain msgs)
  {
    Global oldGlo = glo;
    glo = newGlo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AstPackage.CODES__GLO, oldGlo, newGlo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setGlo(Global newGlo)
  {
    if (newGlo != glo)
    {
      NotificationChain msgs = null;
      if (glo != null)
        msgs = ((InternalEObject)glo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__GLO, null, msgs);
      if (newGlo != null)
        msgs = ((InternalEObject)newGlo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__GLO, null, msgs);
      msgs = basicSetGlo(newGlo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AstPackage.CODES__GLO, newGlo, newGlo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Local getLoc()
  {
    return loc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLoc(Local newLoc, NotificationChain msgs)
  {
    Local oldLoc = loc;
    loc = newLoc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AstPackage.CODES__LOC, oldLoc, newLoc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLoc(Local newLoc)
  {
    if (newLoc != loc)
    {
      NotificationChain msgs = null;
      if (loc != null)
        msgs = ((InternalEObject)loc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__LOC, null, msgs);
      if (newLoc != null)
        msgs = ((InternalEObject)newLoc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__LOC, null, msgs);
      msgs = basicSetLoc(newLoc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AstPackage.CODES__LOC, newLoc, newLoc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Begin getBeg()
  {
    return beg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBeg(Begin newBeg, NotificationChain msgs)
  {
    Begin oldBeg = beg;
    beg = newBeg;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AstPackage.CODES__BEG, oldBeg, newBeg);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBeg(Begin newBeg)
  {
    if (newBeg != beg)
    {
      NotificationChain msgs = null;
      if (beg != null)
        msgs = ((InternalEObject)beg).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__BEG, null, msgs);
      if (newBeg != null)
        msgs = ((InternalEObject)newBeg).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__BEG, null, msgs);
      msgs = basicSetBeg(newBeg, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AstPackage.CODES__BEG, newBeg, newBeg));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Close getClo()
  {
    return clo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetClo(Close newClo, NotificationChain msgs)
  {
    Close oldClo = clo;
    clo = newClo;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AstPackage.CODES__CLO, oldClo, newClo);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setClo(Close newClo)
  {
    if (newClo != clo)
    {
      NotificationChain msgs = null;
      if (clo != null)
        msgs = ((InternalEObject)clo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__CLO, null, msgs);
      if (newClo != null)
        msgs = ((InternalEObject)newClo).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AstPackage.CODES__CLO, null, msgs);
      msgs = basicSetClo(newClo, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AstPackage.CODES__CLO, newClo, newClo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AstPackage.CODES__IMP:
        return basicSetImp(null, msgs);
      case AstPackage.CODES__EXP:
        return basicSetExp(null, msgs);
      case AstPackage.CODES__GLO:
        return basicSetGlo(null, msgs);
      case AstPackage.CODES__LOC:
        return basicSetLoc(null, msgs);
      case AstPackage.CODES__BEG:
        return basicSetBeg(null, msgs);
      case AstPackage.CODES__CLO:
        return basicSetClo(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AstPackage.CODES__IMP:
        return getImp();
      case AstPackage.CODES__EXP:
        return getExp();
      case AstPackage.CODES__GLO:
        return getGlo();
      case AstPackage.CODES__LOC:
        return getLoc();
      case AstPackage.CODES__BEG:
        return getBeg();
      case AstPackage.CODES__CLO:
        return getClo();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AstPackage.CODES__IMP:
        setImp((Import)newValue);
        return;
      case AstPackage.CODES__EXP:
        setExp((Export)newValue);
        return;
      case AstPackage.CODES__GLO:
        setGlo((Global)newValue);
        return;
      case AstPackage.CODES__LOC:
        setLoc((Local)newValue);
        return;
      case AstPackage.CODES__BEG:
        setBeg((Begin)newValue);
        return;
      case AstPackage.CODES__CLO:
        setClo((Close)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AstPackage.CODES__IMP:
        setImp((Import)null);
        return;
      case AstPackage.CODES__EXP:
        setExp((Export)null);
        return;
      case AstPackage.CODES__GLO:
        setGlo((Global)null);
        return;
      case AstPackage.CODES__LOC:
        setLoc((Local)null);
        return;
      case AstPackage.CODES__BEG:
        setBeg((Begin)null);
        return;
      case AstPackage.CODES__CLO:
        setClo((Close)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AstPackage.CODES__IMP:
        return imp != null;
      case AstPackage.CODES__EXP:
        return exp != null;
      case AstPackage.CODES__GLO:
        return glo != null;
      case AstPackage.CODES__LOC:
        return loc != null;
      case AstPackage.CODES__BEG:
        return beg != null;
      case AstPackage.CODES__CLO:
        return clo != null;
    }
    return super.eIsSet(featureID);
  }

} //CodesImpl
