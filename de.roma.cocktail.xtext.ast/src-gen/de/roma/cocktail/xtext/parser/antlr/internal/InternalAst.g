/*
 * generated by Xtext 2.9.1
 */
grammar InternalAst;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.roma.cocktail.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.roma.cocktail.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.roma.cocktail.xtext.services.AstGrammarAccess;

}

@parser::members {

 	private AstGrammarAccess grammarAccess;

    public InternalAstParser(TokenStream input, AstGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected AstGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getModuleModuleParserRuleCall_0_0());
								}
								lv_module_1_0=ruleModule
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"module",
										lv_module_1_0,
										"de.roma.cocktail.xtext.Ast.Module");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getTreeTreeParserRuleCall_1_0());
								}
								lv_tree_2_0=ruleTree
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"tree",
										lv_tree_2_0,
										"de.roma.cocktail.xtext.Ast.Tree");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 2);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getImpImportParserRuleCall_2_0());
								}
								lv_imp_3_0=ruleImport
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"imp",
										lv_imp_3_0,
										"de.roma.cocktail.xtext.Ast.Import");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 3);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getExpExportParserRuleCall_3_0());
								}
								lv_exp_4_0=ruleExport
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"exp",
										lv_exp_4_0,
										"de.roma.cocktail.xtext.Ast.Export");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 4);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getGloGlobalParserRuleCall_4_0());
								}
								lv_glo_5_0=ruleGlobal
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"glo",
										lv_glo_5_0,
										"de.roma.cocktail.xtext.Ast.Global");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 5);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getLocLocalParserRuleCall_5_0());
								}
								lv_loc_6_0=ruleLocal
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"loc",
										lv_loc_6_0,
										"de.roma.cocktail.xtext.Ast.Local");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 6)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 6);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getBegBeginParserRuleCall_6_0());
								}
								lv_beg_7_0=ruleBegin
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"beg",
										lv_beg_7_0,
										"de.roma.cocktail.xtext.Ast.Begin");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 7)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 7);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getCloCloseParserRuleCall_7_0());
								}
								lv_clo_8_0=ruleClose
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"clo",
										lv_clo_8_0,
										"de.roma.cocktail.xtext.Ast.Close");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 8)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 8);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getProPropertiesParserRuleCall_8_0());
								}
								lv_pro_9_0=ruleProperties
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"pro",
										lv_pro_9_0,
										"de.roma.cocktail.xtext.Ast.Properties");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 9)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 9);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getRulRuleParserRuleCall_9_0());
								}
								lv_rul_10_0=ruleRule
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"rul",
										lv_rul_10_0,
										"de.roma.cocktail.xtext.Ast.Rule");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 10)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 10);
				}
							({true}?=>((
								{
									newCompositeNode(grammarAccess.getModelAccess().getDecDeclareParserRuleCall_10_0());
								}
								lv_dec_11_0=ruleDeclare
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getModelRule());
									}
									set(
										$current,
										"dec",
										lv_dec_11_0,
										"de.roma.cocktail.xtext.Ast.Declare");
									afterParserOrEnumRuleCall();
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getModelAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
			}
	)
;

// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	iv_ruleModule=ruleModule
	{ $current=$iv_ruleModule.current; }
	EOF;

// Rule Module
ruleModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MODULE'
		{
			newLeafNode(otherlv_0, grammarAccess.getModuleAccess().getMODULEKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTree
entryRuleTree returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTreeRule()); }
	iv_ruleTree=ruleTree
	{ $current=$iv_ruleTree.current; }
	EOF;

// Rule Tree
ruleTree returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='TREE'
		{
			newLeafNode(otherlv_0, grammarAccess.getTreeAccess().getTREEKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTreeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTreeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='IMPORT'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getIMPORTKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getImportAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getCodeCodeBlockParserRuleCall_2_0());
				}
				lv_code_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"code",
						lv_code_2_0,
						"de.roma.cocktail.xtext.Ast.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getImportAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleExport
entryRuleExport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportRule()); }
	iv_ruleExport=ruleExport
	{ $current=$iv_ruleExport.current; }
	EOF;

// Rule Export
ruleExport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EXPORT'
		{
			newLeafNode(otherlv_0, grammarAccess.getExportAccess().getEXPORTKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExportAccess().getCodeCodeBlockParserRuleCall_2_0());
				}
				lv_code_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExportRule());
					}
					set(
						$current,
						"code",
						lv_code_2_0,
						"de.roma.cocktail.xtext.Ast.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getExportAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleGlobal
entryRuleGlobal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobalRule()); }
	iv_ruleGlobal=ruleGlobal
	{ $current=$iv_ruleGlobal.current; }
	EOF;

// Rule Global
ruleGlobal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GLOBAL'
		{
			newLeafNode(otherlv_0, grammarAccess.getGlobalAccess().getGLOBALKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGlobalAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGlobalAccess().getCodeCodeBlockParserRuleCall_2_0());
				}
				lv_code_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGlobalRule());
					}
					set(
						$current,
						"code",
						lv_code_2_0,
						"de.roma.cocktail.xtext.Ast.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getGlobalAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleLocal
entryRuleLocal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalRule()); }
	iv_ruleLocal=ruleLocal
	{ $current=$iv_ruleLocal.current; }
	EOF;

// Rule Local
ruleLocal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LOCAL'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocalAccess().getLOCALKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLocalAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalAccess().getCodeCodeBlockParserRuleCall_2_0());
				}
				lv_code_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalRule());
					}
					set(
						$current,
						"code",
						lv_code_2_0,
						"de.roma.cocktail.xtext.Ast.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getLocalAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleBegin
entryRuleBegin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBeginRule()); }
	iv_ruleBegin=ruleBegin
	{ $current=$iv_ruleBegin.current; }
	EOF;

// Rule Begin
ruleBegin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BEGIN'
		{
			newLeafNode(otherlv_0, grammarAccess.getBeginAccess().getBEGINKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBeginAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBeginAccess().getCodeCodeBlockParserRuleCall_2_0());
				}
				lv_code_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBeginRule());
					}
					set(
						$current,
						"code",
						lv_code_2_0,
						"de.roma.cocktail.xtext.Ast.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getBeginAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleClose
entryRuleClose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCloseRule()); }
	iv_ruleClose=ruleClose
	{ $current=$iv_ruleClose.current; }
	EOF;

// Rule Close
ruleClose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CLOSE'
		{
			newLeafNode(otherlv_0, grammarAccess.getCloseAccess().getCLOSEKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCloseAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCloseAccess().getCodeCodeBlockParserRuleCall_2_0());
				}
				lv_code_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCloseRule());
					}
					set(
						$current,
						"code",
						lv_code_2_0,
						"de.roma.cocktail.xtext.Ast.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getCloseAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleProperties
entryRuleProperties returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertiesRule()); }
	iv_ruleProperties=ruleProperties
	{ $current=$iv_ruleProperties.current; }
	EOF;

// Rule Properties
ruleProperties returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PROPERTY'
		{
			newLeafNode(otherlv_0, grammarAccess.getPropertiesAccess().getPROPERTYKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertiesAccess().getPropertyPropertyListParserRuleCall_1_0());
				}
				lv_property_1_0=rulePropertyList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertiesRule());
					}
					set(
						$current,
						"property",
						lv_property_1_0,
						"de.roma.cocktail.xtext.Ast.PropertyList");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePropertyList
entryRulePropertyList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyListRule()); }
	iv_rulePropertyList=rulePropertyList
	{ $current=$iv_rulePropertyList.current; }
	EOF;

// Rule PropertyList
rulePropertyList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getPropertyListAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 0);
				}
							({true}?=>((
								lv_props_1_0='INPUT'
								{
									newLeafNode(lv_props_1_0, grammarAccess.getPropertyListAccess().getPropsINPUTKeyword_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropertyListRule());
									}
									addWithLastConsumed($current, "props", lv_props_1_0, "INPUT");
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyListAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 1);
				}
							({true}?=>((
								lv_props_2_0='OUTPUT'
								{
									newLeafNode(lv_props_2_0, grammarAccess.getPropertyListAccess().getPropsOUTPUTKeyword_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropertyListRule());
									}
									addWithLastConsumed($current, "props", lv_props_2_0, "OUTPUT");
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyListAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 2);
				}
							({true}?=>((
								lv_props_3_0='SYNTHESIZED'
								{
									newLeafNode(lv_props_3_0, grammarAccess.getPropertyListAccess().getPropsSYNTHESIZEDKeyword_2_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropertyListRule());
									}
									addWithLastConsumed($current, "props", lv_props_3_0, "SYNTHESIZED");
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyListAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 3);
				}
							({true}?=>((
								lv_props_4_0='INHERITED'
								{
									newLeafNode(lv_props_4_0, grammarAccess.getPropertyListAccess().getPropsINHERITEDKeyword_3_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropertyListRule());
									}
									addWithLastConsumed($current, "props", lv_props_4_0, "INHERITED");
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyListAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 4);
				}
							({true}?=>((
								lv_props_5_0='THREAD'
								{
									newLeafNode(lv_props_5_0, grammarAccess.getPropertyListAccess().getPropsTHREADKeyword_4_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropertyListRule());
									}
									addWithLastConsumed($current, "props", lv_props_5_0, "THREAD");
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyListAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 5);
				}
							({true}?=>((
								lv_props_6_0='REVERSE'
								{
									newLeafNode(lv_props_6_0, grammarAccess.getPropertyListAccess().getPropsREVERSEKeyword_5_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropertyListRule());
									}
									addWithLastConsumed($current, "props", lv_props_6_0, "REVERSE");
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyListAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 6)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 6);
				}
							({true}?=>((
								lv_props_7_0='IGNORE'
								{
									newLeafNode(lv_props_7_0, grammarAccess.getPropertyListAccess().getPropsIGNOREKeyword_6_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropertyListRule());
									}
									addWithLastConsumed($current, "props", lv_props_7_0, "IGNORE");
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyListAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 7)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getPropertyListAccess().getUnorderedGroup(), 7);
				}
							({true}?=>((
								lv_props_8_0='VIRTUAL'
								{
									newLeafNode(lv_props_8_0, grammarAccess.getPropertyListAccess().getPropsVIRTUALKeyword_7_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropertyListRule());
									}
									addWithLastConsumed($current, "props", lv_props_8_0, "VIRTUAL");
								}
							)
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPropertyListAccess().getUnorderedGroup());
				}
			)
		)
				)*
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getPropertyListAccess().getUnorderedGroup());
			}
	)
;

// Entry rule entryRuleDeclare
entryRuleDeclare returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclareRule()); }
	iv_ruleDeclare=ruleDeclare
	{ $current=$iv_ruleDeclare.current; }
	EOF;

// Rule Declare
ruleDeclare returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DECLARE'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeclareAccess().getDECLAREKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclareAccess().getNodesDeclareNodeParserRuleCall_1_0());
				}
				lv_nodes_1_0=ruleDeclareNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclareRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_1_0,
						"de.roma.cocktail.xtext.Ast.DeclareNode");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDeclareNode
entryRuleDeclareNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclareNodeRule()); }
	iv_ruleDeclareNode=ruleDeclareNode
	{ $current=$iv_ruleDeclareNode.current; }
	EOF;

// Rule DeclareNode
ruleDeclareNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclareNodeAccess().getNamesNodeNameParserRuleCall_0_0());
				}
				lv_names_0_0=ruleNodeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclareNodeRule());
					}
					add(
						$current,
						"names",
						lv_names_0_0,
						"de.roma.cocktail.xtext.Ast.NodeName");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				(
					lv_type_1_1='='
					{
						newLeafNode(lv_type_1_1, grammarAccess.getDeclareNodeAccess().getTypeEqualsSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeclareNodeRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_1, null);
					}
					    |
					lv_type_1_2=':'
					{
						newLeafNode(lv_type_1_2, grammarAccess.getDeclareNodeAccess().getTypeColonKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDeclareNodeRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclareNodeAccess().getPartNodePartParserRuleCall_2_0());
				}
				lv_part_2_0=ruleNodePart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclareNodeRule());
					}
					add(
						$current,
						"part",
						lv_part_2_0,
						"de.roma.cocktail.xtext.Ast.NodePart");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeclareNodeAccess().getFullStopKeyword_3());
		}
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RULE'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRULEKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getNodesRootNodeParserRuleCall_1_0());
				}
				lv_nodes_1_0=ruleRootNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_1_0,
						"de.roma.cocktail.xtext.Ast.RootNode");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRootNode
entryRuleRootNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRootNodeRule()); }
	iv_ruleRootNode=ruleRootNode
	{ $current=$iv_ruleRootNode.current; }
	EOF;

// Rule RootNode
ruleRootNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRootNodeAccess().getNameNodeNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleNodeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootNodeRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"de.roma.cocktail.xtext.Ast.NodeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRootNodeAccess().getBaseTypesBaseTypesParserRuleCall_1_0());
				}
				lv_baseTypes_1_0=ruleBaseTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootNodeRule());
					}
					set(
						$current,
						"baseTypes",
						lv_baseTypes_1_0,
						"de.roma.cocktail.xtext.Ast.BaseTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRootNodeAccess().getTypeNodeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleNodeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootNodeRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"de.roma.cocktail.xtext.Ast.NodeType");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRootNodeAccess().getPartNodePartParserRuleCall_3_0());
				}
				lv_part_3_0=ruleNodePart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootNodeRule());
					}
					add(
						$current,
						"part",
						lv_part_3_0,
						"de.roma.cocktail.xtext.Ast.NodePart");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getRootNodeAccess().getExtensionExtensionsParserRuleCall_4_0());
				}
				lv_extension_4_0=ruleExtensions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRootNodeRule());
					}
					set(
						$current,
						"extension",
						lv_extension_4_0,
						"de.roma.cocktail.xtext.Ast.Extensions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getRootNodeAccess().getFullStopKeyword_5());
		}
	)
;

// Entry rule entryRuleBaseTypes
entryRuleBaseTypes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseTypesRule()); }
	iv_ruleBaseTypes=ruleBaseTypes
	{ $current=$iv_ruleBaseTypes.current; }
	EOF;

// Rule BaseTypes
ruleBaseTypes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<-'
		{
			newLeafNode(otherlv_0, grammarAccess.getBaseTypesAccess().getLessThanSignHyphenMinusKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBaseTypesRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getBaseTypesAccess().getNamesNodeNameCrossReference_1_0());
				}
			)
		)*
	)
;

// Entry rule entryRuleExtensions
entryRuleExtensions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtensionsRule()); }
	iv_ruleExtensions=ruleExtensions
	{ $current=$iv_ruleExtensions.current; }
	EOF;

// Rule Extensions
ruleExtensions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getExtensionsAccess().getLessThanSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtensionsAccess().getNodesRootNodeParserRuleCall_1_0());
				}
				lv_nodes_1_0=ruleRootNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtensionsRule());
					}
					set(
						$current,
						"nodes",
						lv_nodes_1_0,
						"de.roma.cocktail.xtext.Ast.RootNode");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='>'
		{
			newLeafNode(otherlv_2, grammarAccess.getExtensionsAccess().getGreaterThanSignKeyword_2());
		}
	)
;

// Entry rule entryRuleNodePart
entryRuleNodePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodePartRule()); }
	iv_ruleNodePart=ruleNodePart
	{ $current=$iv_ruleNodePart.current; }
	EOF;

// Rule NodePart
ruleNodePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getNodePartAccess().getChildChildNodeParserRuleCall_0_0());
				}
				lv_child_0_0=ruleChildNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodePartRule());
					}
					set(
						$current,
						"child",
						lv_child_0_0,
						"de.roma.cocktail.xtext.Ast.ChildNode");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getNodePartAccess().getAttributeNodeAttributeParserRuleCall_1_0());
				}
				lv_attribute_1_0=ruleNodeAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodePartRule());
					}
					set(
						$current,
						"attribute",
						lv_attribute_1_0,
						"de.roma.cocktail.xtext.Ast.NodeAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleChildNode
entryRuleChildNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChildNodeRule()); }
	iv_ruleChildNode=ruleChildNode
	{ $current=$iv_ruleChildNode.current; }
	EOF;

// Rule ChildNode
ruleChildNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_selector_0_0=RULE_ID
					{
						newLeafNode(lv_selector_0_0, grammarAccess.getChildNodeAccess().getSelectorIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChildNodeRule());
						}
						setWithLastConsumed(
							$current,
							"selector",
							lv_selector_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getChildNodeAccess().getColonKeyword_0_1());
			}
		)?
		(
			(
				lv_type_2_0=RULE_ID
				{
					newLeafNode(lv_type_2_0, grammarAccess.getChildNodeAccess().getTypeIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChildNodeRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleNodeAttribute
entryRuleNodeAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeAttributeRule()); }
	iv_ruleNodeAttribute=ruleNodeAttribute
	{ $current=$iv_ruleNodeAttribute.current; }
	EOF;

// Rule NodeAttribute
ruleNodeAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeAttributeAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				lv_attribute_1_0=RULE_ID
				{
					newLeafNode(lv_attribute_1_0, grammarAccess.getNodeAttributeAccess().getAttributeIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"attribute",
						lv_attribute_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getNodeAttributeAccess().getColonKeyword_2_0());
			}
			(
				(
					lv_type_3_0=RULE_ID
					{
						newLeafNode(lv_type_3_0, grammarAccess.getNodeAttributeAccess().getTypeIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeAttributeRule());
						}
						setWithLastConsumed(
							$current,
							"type",
							lv_type_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAttributeAccess().getPropertyPropertyListParserRuleCall_3_0());
				}
				lv_property_4_0=rulePropertyList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeAttributeRule());
					}
					set(
						$current,
						"property",
						lv_property_4_0,
						"de.roma.cocktail.xtext.Ast.PropertyList");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getNodeAttributeAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNodeName
entryRuleNodeName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeNameRule()); }
	iv_ruleNodeName=ruleNodeName
	{ $current=$iv_ruleNodeName.current; }
	EOF;

// Rule NodeName
ruleNodeName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1=RULE_ID
				{
					newLeafNode(lv_name_0_1, grammarAccess.getNodeNameAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_1,
						"org.eclipse.xtext.common.Terminals.ID");
				}
				    |
				lv_name_0_2=RULE_STRING
				{
					newLeafNode(lv_name_0_2, grammarAccess.getNodeNameAccess().getNameSTRINGTerminalRuleCall_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeNameRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_2,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleNodeType
entryRuleNodeType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNodeTypeRule()); }
	iv_ruleNodeType=ruleNodeType
	{ $current=$iv_ruleNodeType.current.getText(); }
	EOF;

// Rule NodeType
ruleNodeType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNodeTypeAccess().getEqualsSignKeyword_0());
		}
		    |
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNodeTypeAccess().getColonKeyword_1());
		}
		    |
		kw=':='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNodeTypeAccess().getColonEqualsSignKeyword_2());
		}
	)
;

// Entry rule entryRuleCodeBlock
entryRuleCodeBlock returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCodeBlockRule()); }
	iv_ruleCodeBlock=ruleCodeBlock
	{ $current=$iv_ruleCodeBlock.current.getText(); }
	EOF;

// Rule CodeBlock
ruleCodeBlock returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCodeBlockAccess().getCodeWallParserRuleCall_0());
		}
		this_CodeWall_0=ruleCodeWall
		{
			$current.merge(this_CodeWall_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		(
			kw='{'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getCodeBlockAccess().getCodeBlockParserRuleCall_1_1());
			}
			this_CodeBlock_2=ruleCodeBlock
			{
				$current.merge(this_CodeBlock_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw='}'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCodeBlockAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)*
;

// Entry rule entryRuleCodeWall
entryRuleCodeWall returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCodeWallRule()); }
	iv_ruleCodeWall=ruleCodeWall
	{ $current=$iv_ruleCodeWall.current.getText(); }
	EOF;

// Rule CodeWall
ruleCodeWall returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getCodeWallAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getCodeWallAccess().getINTTerminalRuleCall_1());
		}
		    |
		this_STRING_2=RULE_STRING
		{
			$current.merge(this_STRING_2);
		}
		{
			newLeafNode(this_STRING_2, grammarAccess.getCodeWallAccess().getSTRINGTerminalRuleCall_2());
		}
		    |
		this_WS_3=RULE_WS
		{
			$current.merge(this_WS_3);
		}
		{
			newLeafNode(this_WS_3, grammarAccess.getCodeWallAccess().getWSTerminalRuleCall_3());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getPlusSignKeyword_4());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getHyphenMinusKeyword_5());
		}
		    |
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getLeftParenthesisKeyword_6());
		}
		    |
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getRightParenthesisKeyword_7());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getAsteriskKeyword_8());
		}
		    |
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getFullStopKeyword_9());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getSolidusKeyword_10());
		}
		    |
		kw='\\'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getReverseSolidusKeyword_11());
		}
		    |
		kw='|'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getVerticalLineKeyword_12());
		}
		    |
		kw='?'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getQuestionMarkKeyword_13());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getGreaterThanSignKeyword_14());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getLessThanSignKeyword_15());
		}
		    |
		kw='#'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getNumberSignKeyword_16());
		}
		    |
		kw='$'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getDollarSignKeyword_17());
		}
		    |
		kw='%'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getPercentSignKeyword_18());
		}
		    |
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getSemicolonKeyword_19());
		}
		    |
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getColonKeyword_20());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getExclamationMarkKeyword_21());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getEqualsSignKeyword_22());
		}
		    |
		kw=','
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getCommaKeyword_23());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
