/*
 * generated by Xtext 2.9.1
 */
grammar InternalScanner;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.cocktail.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.cocktail.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.cocktail.services.ScannerGrammarAccess;

}

@parser::members {

 	private ScannerGrammarAccess grammarAccess;

    public InternalScannerParser(TokenStream input, ScannerGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ScannerGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getScannerScannerParserRuleCall_0_0());
				}
				lv_scanner_0_0=ruleScanner
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"scanner",
						lv_scanner_0_0,
						"org.xtext.cocktail.Scanner.Scanner");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getScannerExportParserRuleCall_1_0());
				}
				lv_scanner_1_0=ruleExport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"scanner",
						lv_scanner_1_0,
						"org.xtext.cocktail.Scanner.Export");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getScannerGlobalParserRuleCall_2_0());
				}
				lv_scanner_2_0=ruleGlobal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"scanner",
						lv_scanner_2_0,
						"org.xtext.cocktail.Scanner.Global");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getScannerLocalParserRuleCall_3_0());
				}
				lv_scanner_3_0=ruleLocal
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"scanner",
						lv_scanner_3_0,
						"org.xtext.cocktail.Scanner.Local");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getScannerDefaultParserRuleCall_4_0());
				}
				lv_scanner_4_0=ruleDefault
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"scanner",
						lv_scanner_4_0,
						"org.xtext.cocktail.Scanner.Default");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getScannerEofParserRuleCall_5_0());
				}
				lv_scanner_5_0=ruleEof
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"scanner",
						lv_scanner_5_0,
						"org.xtext.cocktail.Scanner.Eof");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getScannerDefineParserRuleCall_6_0());
				}
				lv_scanner_6_0=ruleDefine
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"scanner",
						lv_scanner_6_0,
						"org.xtext.cocktail.Scanner.Define");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getScannerStartStatesParserRuleCall_7_0());
				}
				lv_scanner_7_0=ruleStartStates
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"scanner",
						lv_scanner_7_0,
						"org.xtext.cocktail.Scanner.StartStates");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getScannerRuleParserRuleCall_8_0());
				}
				lv_scanner_8_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"scanner",
						lv_scanner_8_0,
						"org.xtext.cocktail.Scanner.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleScanner
entryRuleScanner returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScannerRule()); }
	iv_ruleScanner=ruleScanner
	{ $current=$iv_ruleScanner.current; }
	EOF;

// Rule Scanner
ruleScanner returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SCANNER'
		{
			newLeafNode(otherlv_0, grammarAccess.getScannerAccess().getSCANNERKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getScannerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScannerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleExport
entryRuleExport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportRule()); }
	iv_ruleExport=ruleExport
	{ $current=$iv_ruleExport.current; }
	EOF;

// Rule Export
ruleExport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EXPORT {'
		{
			newLeafNode(otherlv_0, grammarAccess.getExportAccess().getEXPORTKeyword_0());
		}
		(
			(
				lv_content_1_0=RULE_INLINE_CODE
				{
					newLeafNode(lv_content_1_0, grammarAccess.getExportAccess().getContentINLINE_CODETerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExportRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_1_0,
						"org.xtext.cocktail.Scanner.INLINE_CODE");
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getExportAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleGlobal
entryRuleGlobal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobalRule()); }
	iv_ruleGlobal=ruleGlobal
	{ $current=$iv_ruleGlobal.current; }
	EOF;

// Rule Global
ruleGlobal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GLOBAL {'
		{
			newLeafNode(otherlv_0, grammarAccess.getGlobalAccess().getGLOBALKeyword_0());
		}
		(
			(
				lv_content_1_0=RULE_ID
				{
					newLeafNode(lv_content_1_0, grammarAccess.getGlobalAccess().getContentIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGlobalRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getGlobalAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleLocal
entryRuleLocal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalRule()); }
	iv_ruleLocal=ruleLocal
	{ $current=$iv_ruleLocal.current; }
	EOF;

// Rule Local
ruleLocal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LOCAL {'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocalAccess().getLOCALKeyword_0());
		}
		(
			(
				lv_content_1_0=RULE_ID
				{
					newLeafNode(lv_content_1_0, grammarAccess.getLocalAccess().getContentIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocalRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getLocalAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleDefault
entryRuleDefault returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefaultRule()); }
	iv_ruleDefault=ruleDefault
	{ $current=$iv_ruleDefault.current; }
	EOF;

// Rule Default
ruleDefault returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DEFAULT {'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefaultAccess().getDEFAULTKeyword_0());
		}
		(
			(
				lv_content_1_0=RULE_ID
				{
					newLeafNode(lv_content_1_0, grammarAccess.getDefaultAccess().getContentIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefaultRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getDefaultAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleEof
entryRuleEof returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEofRule()); }
	iv_ruleEof=ruleEof
	{ $current=$iv_ruleEof.current; }
	EOF;

// Rule Eof
ruleEof returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EOF {'
		{
			newLeafNode(otherlv_0, grammarAccess.getEofAccess().getEOFKeyword_0());
		}
		(
			(
				lv_content_1_0=RULE_ID
				{
					newLeafNode(lv_content_1_0, grammarAccess.getEofAccess().getContentIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEofRule());
					}
					setWithLastConsumed(
						$current,
						"content",
						lv_content_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getEofAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleDefine
entryRuleDefine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineRule()); }
	iv_ruleDefine=ruleDefine
	{ $current=$iv_ruleDefine.current; }
	EOF;

// Rule Define
ruleDefine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DEFINE'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefineAccess().getDEFINEKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineAccess().getDefinesDefineRuleParserRuleCall_1_0());
				}
				lv_defines_1_0=ruleDefineRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineRule());
					}
					add(
						$current,
						"defines",
						lv_defines_1_0,
						"org.xtext.cocktail.Scanner.DefineRule");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDefineRule
entryRuleDefineRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineRuleRule()); }
	iv_ruleDefineRule=ruleDefineRule
	{ $current=$iv_ruleDefineRule.current; }
	EOF;

// Rule DefineRule
ruleDefineRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDefineRuleAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefineRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDefineRuleAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_rule_2_0=RULE_ID
				{
					newLeafNode(lv_rule_2_0, grammarAccess.getDefineRuleAccess().getRuleIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefineRuleRule());
					}
					setWithLastConsumed(
						$current,
						"rule",
						lv_rule_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getDefineRuleAccess().getFullStopKeyword_3());
		}
	)
;

// Entry rule entryRuleStartStates
entryRuleStartStates returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartStatesRule()); }
	iv_ruleStartStates=ruleStartStates
	{ $current=$iv_ruleStartStates.current; }
	EOF;

// Rule StartStates
ruleStartStates returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='START'
		{
			newLeafNode(otherlv_0, grammarAccess.getStartStatesAccess().getSTARTKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_1_0());
				}
				lv_incstates_1_0=ruleStartState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartStatesRule());
					}
					add(
						$current,
						"incstates",
						lv_incstates_1_0,
						"org.xtext.cocktail.Scanner.StartState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getStartStatesAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_2_1_0());
					}
					lv_incstates_3_0=ruleStartState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStartStatesRule());
						}
						add(
							$current,
							"incstates",
							lv_incstates_3_0,
							"org.xtext.cocktail.Scanner.StartState");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4='-'
			{
				newLeafNode(otherlv_4, grammarAccess.getStartStatesAccess().getHyphenMinusKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_1_0());
					}
					lv_exstates_5_0=ruleStartState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStartStatesRule());
						}
						add(
							$current,
							"exstates",
							lv_exstates_5_0,
							"org.xtext.cocktail.Scanner.StartState");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getStartStatesAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_2_1_0());
						}
						lv_exstates_7_0=ruleStartState
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStartStatesRule());
							}
							add(
								$current,
								"exstates",
								lv_exstates_7_0,
								"org.xtext.cocktail.Scanner.StartState");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleStartState
entryRuleStartState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartStateRule()); }
	iv_ruleStartState=ruleStartState
	{ $current=$iv_ruleStartState.current; }
	EOF;

// Rule StartState
ruleStartState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getStartStateAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStartStateRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_info_0_1='RULE'
					{
						newLeafNode(lv_info_0_1, grammarAccess.getRuleAccess().getInfoRULEKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
						setWithLastConsumed($current, "info", lv_info_0_1, null);
					}
					    |
					lv_info_0_2='RULES'
					{
						newLeafNode(lv_info_0_2, grammarAccess.getRuleAccess().getInfoRULESKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
						setWithLastConsumed($current, "info", lv_info_0_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getRulesSingleRuleParserRuleCall_1_0());
				}
				lv_rules_1_0=ruleSingleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_1_0,
						"org.xtext.cocktail.Scanner.SingleRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSingleRule
entryRuleSingleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleRuleRule()); }
	iv_ruleSingleRule=ruleSingleRule
	{ $current=$iv_ruleSingleRule.current; }
	EOF;

// Rule SingleRule
ruleSingleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSingleRuleAccess().getRuleStartParserRuleCall_0());
			}
			this_RuleStart_0=ruleRuleStart
			{
				$current = $this_RuleStart_0.current;
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				lv_rule_1_0=RULE_STRING
				{
					newLeafNode(lv_rule_1_0, grammarAccess.getSingleRuleAccess().getRuleSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleRuleRule());
					}
					addWithLastConsumed(
						$current,
						"rule",
						lv_rule_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_2=':-'
			{
				newLeafNode(otherlv_2, grammarAccess.getSingleRuleAccess().getColonHyphenMinusKeyword_2_0());
			}
			    |
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getSingleRuleAccess().getColonKeyword_2_1());
			}
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getSingleRuleAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				lv_content_5_0=RULE_ID
				{
					newLeafNode(lv_content_5_0, grammarAccess.getSingleRuleAccess().getContentIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSingleRuleRule());
					}
					addWithLastConsumed(
						$current,
						"content",
						lv_content_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSingleRuleAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleRuleStart
entryRuleRuleStart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleStartRule()); }
	iv_ruleRuleStart=ruleRuleStart
	{ $current=$iv_ruleRuleStart.current; }
	EOF;

// Rule RuleStart
ruleRuleStart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='NOT'
			{
				newLeafNode(otherlv_0, grammarAccess.getRuleStartAccess().getNOTKeyword_0_0());
			}
			    |
			otherlv_1='-'
			{
				newLeafNode(otherlv_1, grammarAccess.getRuleStartAccess().getHyphenMinusKeyword_0_1());
			}
		)?
		otherlv_2='#'
		{
			newLeafNode(otherlv_2, grammarAccess.getRuleStartAccess().getNumberSignKeyword_1());
		}
		(
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRuleStartRule());
							}
						}
						otherlv_3=RULE_ID
						{
							newLeafNode(otherlv_3, grammarAccess.getRuleStartAccess().getStateStartStateCrossReference_2_0_0_0());
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getRuleStartAccess().getCommaKeyword_2_0_1_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getRuleStartRule());
								}
							}
							otherlv_5=RULE_ID
							{
								newLeafNode(otherlv_5, grammarAccess.getRuleStartAccess().getStateStartStateCrossReference_2_0_1_1_0());
							}
						)
					)
				)*
			)
			    |
			otherlv_6='STD'
			{
				newLeafNode(otherlv_6, grammarAccess.getRuleStartAccess().getSTDKeyword_2_1());
			}
			    |
			otherlv_7='*'
			{
				newLeafNode(otherlv_7, grammarAccess.getRuleStartAccess().getAsteriskKeyword_2_2());
			}
		)
		otherlv_8='#'
		{
			newLeafNode(otherlv_8, grammarAccess.getRuleStartAccess().getNumberSignKeyword_3());
		}
	)
;

RULE_INLINE_CODE : '{' ( options {greedy=false;} : . )*'}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
