/*
 * generated by Xtext 2.9.1
 */
grammar InternalScanner;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.cocktail.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.cocktail.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.cocktail.services.ScannerGrammarAccess;

}

@parser::members {

 	private ScannerGrammarAccess grammarAccess;

    public InternalScannerParser(TokenStream input, ScannerGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ScannerGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getScannerScannerParserRuleCall_0_0());
				}
				lv_scanner_0_0=ruleScanner
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"scanner",
						lv_scanner_0_0,
						"org.xtext.cocktail.Scanner.Scanner");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup_1());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 0);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getModelAccess().getScannerExportParserRuleCall_1_0_0());
									}
									lv_scanner_2_0=ruleExport
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getModelRule());
										}
										add(
											$current,
											"scanner",
											lv_scanner_2_0,
											"org.xtext.cocktail.Scanner.Export");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getModelAccess().getScannerGlobalParserRuleCall_1_1_0());
									}
									lv_scanner_3_0=ruleGlobal
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getModelRule());
										}
										add(
											$current,
											"scanner",
											lv_scanner_3_0,
											"org.xtext.cocktail.Scanner.Global");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 2);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getModelAccess().getScannerLocalParserRuleCall_1_2_0());
									}
									lv_scanner_4_0=ruleLocal
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getModelRule());
										}
										add(
											$current,
											"scanner",
											lv_scanner_4_0,
											"org.xtext.cocktail.Scanner.Local");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 3);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getModelAccess().getScannerDefaultParserRuleCall_1_3_0());
									}
									lv_scanner_5_0=ruleDefault
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getModelRule());
										}
										add(
											$current,
											"scanner",
											lv_scanner_5_0,
											"org.xtext.cocktail.Scanner.Default");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 4);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getModelAccess().getScannerEofParserRuleCall_1_4_0());
									}
									lv_scanner_6_0=ruleEof
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getModelRule());
										}
										add(
											$current,
											"scanner",
											lv_scanner_6_0,
											"org.xtext.cocktail.Scanner.Eof");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 5);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getModelAccess().getScannerDefineParserRuleCall_1_5_0());
									}
									lv_scanner_7_0=ruleDefine
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getModelRule());
										}
										add(
											$current,
											"scanner",
											lv_scanner_7_0,
											"org.xtext.cocktail.Scanner.Define");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 6);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getModelAccess().getScannerStartStatesParserRuleCall_1_6_0());
									}
									lv_scanner_8_0=ruleStartStates
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getModelRule());
										}
										add(
											$current,
											"scanner",
											lv_scanner_8_0,
											"org.xtext.cocktail.Scanner.StartStates");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 7);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getModelAccess().getScannerRuleParserRuleCall_1_7_0());
									}
									lv_scanner_9_0=ruleRule
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getModelRule());
										}
										add(
											$current,
											"scanner",
											lv_scanner_9_0,
											"org.xtext.cocktail.Scanner.Rule");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_1(), 8)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_1(), 8);
					}
								({true}?=>((
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getScannerBeginParserRuleCall_1_8_0_0());
										}
										lv_scanner_10_0=ruleBegin
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											add(
												$current,
												"scanner",
												lv_scanner_10_0,
												"org.xtext.cocktail.Scanner.Begin");
											afterParserOrEnumRuleCall();
										}
									)
								)?
								(
									(
										{
											newCompositeNode(grammarAccess.getModelAccess().getScannerCloseParserRuleCall_1_8_1_0());
										}
										lv_scanner_11_0=ruleClose
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getModelRule());
											}
											add(
												$current,
												"scanner",
												lv_scanner_11_0,
												"org.xtext.cocktail.Scanner.Close");
											afterParserOrEnumRuleCall();
										}
									)
								)?
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_1());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getModelAccess().getUnorderedGroup_1())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup_1());
				}
		)
	)
;

// Entry rule entryRuleCodeBlock
entryRuleCodeBlock returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCodeBlockRule()); }
	iv_ruleCodeBlock=ruleCodeBlock
	{ $current=$iv_ruleCodeBlock.current.getText(); }
	EOF;

// Rule CodeBlock
ruleCodeBlock returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCodeBlockAccess().getCodeWallParserRuleCall_0());
		}
		this_CodeWall_0=ruleCodeWall
		{
			$current.merge(this_CodeWall_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		(
			kw='{'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getCodeBlockAccess().getCodeBlockParserRuleCall_1_1());
			}
			this_CodeBlock_2=ruleCodeBlock
			{
				$current.merge(this_CodeBlock_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw='}'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCodeBlockAccess().getRightCurlyBracketKeyword_1_2());
			}
		)
	)*
;

// Entry rule entryRuleCodeWall
entryRuleCodeWall returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCodeWallRule()); }
	iv_ruleCodeWall=ruleCodeWall
	{ $current=$iv_ruleCodeWall.current.getText(); }
	EOF;

// Rule CodeWall
ruleCodeWall returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getCodeWallAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getCodeWallAccess().getINTTerminalRuleCall_1());
		}
		    |
		this_STRING_2=RULE_STRING
		{
			$current.merge(this_STRING_2);
		}
		{
			newLeafNode(this_STRING_2, grammarAccess.getCodeWallAccess().getSTRINGTerminalRuleCall_2());
		}
		    |
		this_WS_3=RULE_WS
		{
			$current.merge(this_WS_3);
		}
		{
			newLeafNode(this_WS_3, grammarAccess.getCodeWallAccess().getWSTerminalRuleCall_3());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getPlusSignKeyword_4());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getHyphenMinusKeyword_5());
		}
		    |
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getLeftParenthesisKeyword_6());
		}
		    |
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getRightParenthesisKeyword_7());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getAsteriskKeyword_8());
		}
		    |
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getFullStopKeyword_9());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getSolidusKeyword_10());
		}
		    |
		kw='\\'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getReverseSolidusKeyword_11());
		}
		    |
		kw='|'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getVerticalLineKeyword_12());
		}
		    |
		kw='?'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getQuestionMarkKeyword_13());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getGreaterThanSignKeyword_14());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getLessThanSignKeyword_15());
		}
		    |
		kw='#'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getNumberSignKeyword_16());
		}
		    |
		kw='$'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getDollarSignKeyword_17());
		}
		    |
		kw='%'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getPercentSignKeyword_18());
		}
		    |
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getSemicolonKeyword_19());
		}
		    |
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getColonKeyword_20());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getExclamationMarkKeyword_21());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getEqualsSignKeyword_22());
		}
		    |
		kw=','
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCodeWallAccess().getCommaKeyword_23());
		}
	)
;

// Entry rule entryRuleScanner
entryRuleScanner returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScannerRule()); }
	iv_ruleScanner=ruleScanner
	{ $current=$iv_ruleScanner.current; }
	EOF;

// Rule Scanner
ruleScanner returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SCANNER'
		{
			newLeafNode(otherlv_0, grammarAccess.getScannerAccess().getSCANNERKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getScannerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScannerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleExport
entryRuleExport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportRule()); }
	iv_ruleExport=ruleExport
	{ $current=$iv_ruleExport.current; }
	EOF;

// Rule Export
ruleExport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EXPORT'
		{
			newLeafNode(otherlv_0, grammarAccess.getExportAccess().getEXPORTKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExportAccess().getContentCodeBlockParserRuleCall_2_0());
				}
				lv_content_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExportRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"org.xtext.cocktail.Scanner.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getExportAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleGlobal
entryRuleGlobal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGlobalRule()); }
	iv_ruleGlobal=ruleGlobal
	{ $current=$iv_ruleGlobal.current; }
	EOF;

// Rule Global
ruleGlobal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GLOBAL'
		{
			newLeafNode(otherlv_0, grammarAccess.getGlobalAccess().getGLOBALKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGlobalAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGlobalAccess().getContentCodeBlockParserRuleCall_2_0());
				}
				lv_content_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGlobalRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"org.xtext.cocktail.Scanner.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getGlobalAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleLocal
entryRuleLocal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalRule()); }
	iv_ruleLocal=ruleLocal
	{ $current=$iv_ruleLocal.current; }
	EOF;

// Rule Local
ruleLocal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LOCAL'
		{
			newLeafNode(otherlv_0, grammarAccess.getLocalAccess().getLOCALKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLocalAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalAccess().getContentCodeBlockParserRuleCall_2_0());
				}
				lv_content_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"org.xtext.cocktail.Scanner.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getLocalAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDefault
entryRuleDefault returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefaultRule()); }
	iv_ruleDefault=ruleDefault
	{ $current=$iv_ruleDefault.current; }
	EOF;

// Rule Default
ruleDefault returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DEFAULT'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefaultAccess().getDEFAULTKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDefaultAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefaultAccess().getContentCodeBlockParserRuleCall_2_0());
				}
				lv_content_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefaultRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"org.xtext.cocktail.Scanner.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getDefaultAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEof
entryRuleEof returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEofRule()); }
	iv_ruleEof=ruleEof
	{ $current=$iv_ruleEof.current; }
	EOF;

// Rule Eof
ruleEof returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EOF'
		{
			newLeafNode(otherlv_0, grammarAccess.getEofAccess().getEOFKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getEofAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEofAccess().getContentCodeBlockParserRuleCall_2_0());
				}
				lv_content_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEofRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"org.xtext.cocktail.Scanner.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getEofAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleBegin
entryRuleBegin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBeginRule()); }
	iv_ruleBegin=ruleBegin
	{ $current=$iv_ruleBegin.current; }
	EOF;

// Rule Begin
ruleBegin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BEGIN'
		{
			newLeafNode(otherlv_0, grammarAccess.getBeginAccess().getBEGINKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBeginAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBeginAccess().getContentCodeBlockParserRuleCall_2_0());
				}
				lv_content_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBeginRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"org.xtext.cocktail.Scanner.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getBeginAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleClose
entryRuleClose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCloseRule()); }
	iv_ruleClose=ruleClose
	{ $current=$iv_ruleClose.current; }
	EOF;

// Rule Close
ruleClose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CLOSE'
		{
			newLeafNode(otherlv_0, grammarAccess.getCloseAccess().getCLOSEKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCloseAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCloseAccess().getContentCodeBlockParserRuleCall_2_0());
				}
				lv_content_2_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCloseRule());
					}
					set(
						$current,
						"content",
						lv_content_2_0,
						"org.xtext.cocktail.Scanner.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getCloseAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleDefine
entryRuleDefine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineRule()); }
	iv_ruleDefine=ruleDefine
	{ $current=$iv_ruleDefine.current; }
	EOF;

// Rule Define
ruleDefine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DEFINE'
		{
			newLeafNode(otherlv_0, grammarAccess.getDefineAccess().getDEFINEKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineAccess().getDefinesDefineRuleParserRuleCall_1_0());
				}
				lv_defines_1_0=ruleDefineRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineRule());
					}
					add(
						$current,
						"defines",
						lv_defines_1_0,
						"org.xtext.cocktail.Scanner.DefineRule");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleDefineRule
entryRuleDefineRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefineRuleRule()); }
	iv_ruleDefineRule=ruleDefineRule
	{ $current=$iv_ruleDefineRule.current; }
	EOF;

// Rule DefineRule
ruleDefineRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getDefineRuleAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDefineRuleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getDefineRuleAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDefineRuleAccess().getRuleDefineRegexParserRuleCall_2_0());
				}
				lv_rule_2_0=ruleDefineRegex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDefineRuleRule());
					}
					set(
						$current,
						"rule",
						lv_rule_2_0,
						"org.xtext.cocktail.Scanner.DefineRegex");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getDefineRuleAccess().getFullStopKeyword_3());
		}
	)
;

// Entry rule entryRuleDefineRegex
entryRuleDefineRegex returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDefineRegexRule()); }
	iv_ruleDefineRegex=ruleDefineRegex
	{ $current=$iv_ruleDefineRegex.current.getText(); }
	EOF;

// Rule DefineRegex
ruleDefineRegex returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefineRegexAccess().getRegexParserRuleCall());
		}
		this_Regex_0=ruleRegex
		{
			$current.merge(this_Regex_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)*
;

// Entry rule entryRuleStartStates
entryRuleStartStates returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartStatesRule()); }
	iv_ruleStartStates=ruleStartStates
	{ $current=$iv_ruleStartStates.current; }
	EOF;

// Rule StartStates
ruleStartStates returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='START'
		{
			newLeafNode(otherlv_0, grammarAccess.getStartStatesAccess().getSTARTKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_1_0());
				}
				lv_incstates_1_0=ruleStartState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStartStatesRule());
					}
					add(
						$current,
						"incstates",
						lv_incstates_1_0,
						"org.xtext.cocktail.Scanner.StartState");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getStartStatesAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_2_1_0());
					}
					lv_incstates_3_0=ruleStartState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStartStatesRule());
						}
						add(
							$current,
							"incstates",
							lv_incstates_3_0,
							"org.xtext.cocktail.Scanner.StartState");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_4='-'
			{
				newLeafNode(otherlv_4, grammarAccess.getStartStatesAccess().getHyphenMinusKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_1_0());
					}
					lv_exstates_5_0=ruleStartState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStartStatesRule());
						}
						add(
							$current,
							"exstates",
							lv_exstates_5_0,
							"org.xtext.cocktail.Scanner.StartState");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getStartStatesAccess().getCommaKeyword_3_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_2_1_0());
						}
						lv_exstates_7_0=ruleStartState
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStartStatesRule());
							}
							add(
								$current,
								"exstates",
								lv_exstates_7_0,
								"org.xtext.cocktail.Scanner.StartState");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleStartState
entryRuleStartState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStartStateRule()); }
	iv_ruleStartState=ruleStartState
	{ $current=$iv_ruleStartState.current; }
	EOF;

// Rule StartState
ruleStartState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getStartStateAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStartStateRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_info_0_1='RULE'
					{
						newLeafNode(lv_info_0_1, grammarAccess.getRuleAccess().getInfoRULEKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
						setWithLastConsumed($current, "info", lv_info_0_1, null);
					}
					    |
					lv_info_0_2='RULES'
					{
						newLeafNode(lv_info_0_2, grammarAccess.getRuleAccess().getInfoRULESKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
						setWithLastConsumed($current, "info", lv_info_0_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getRulesSingleRuleParserRuleCall_1_0());
				}
				lv_rules_1_0=ruleSingleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_1_0,
						"org.xtext.cocktail.Scanner.SingleRule");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSingleRule
entryRuleSingleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleRuleRule()); }
	iv_ruleSingleRule=ruleSingleRule
	{ $current=$iv_ruleSingleRule.current; }
	EOF;

// Rule SingleRule
ruleSingleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleRuleAccess().getStartRuleStartParserRuleCall_0_0());
				}
				lv_start_0_0=ruleRuleStart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleRuleRule());
					}
					set(
						$current,
						"start",
						lv_start_0_0,
						"org.xtext.cocktail.Scanner.RuleStart");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleRuleAccess().getRuleRuleDefinitionParserRuleCall_1_0());
				}
				lv_rule_1_0=ruleRuleDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleRuleRule());
					}
					set(
						$current,
						"rule",
						lv_rule_1_0,
						"org.xtext.cocktail.Scanner.RuleDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSingleRuleAccess().getColonKeyword_2());
		}
		(
			otherlv_3='-'
			{
				newLeafNode(otherlv_3, grammarAccess.getSingleRuleAccess().getHyphenMinusKeyword_3());
			}
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getSingleRuleAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleRuleAccess().getContentCodeBlockParserRuleCall_5_0());
				}
				lv_content_5_0=ruleCodeBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleRuleRule());
					}
					set(
						$current,
						"content",
						lv_content_5_0,
						"org.xtext.cocktail.Scanner.CodeBlock");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getSingleRuleAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleRegex
entryRuleRegex returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRegexRule()); }
	iv_ruleRegex=ruleRegex
	{ $current=$iv_ruleRegex.current.getText(); }
	EOF;

// Rule Regex
ruleRegex returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getRegexAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getRegexAccess().getINTTerminalRuleCall_1());
		}
		    |
		this_STRING_2=RULE_STRING
		{
			$current.merge(this_STRING_2);
		}
		{
			newLeafNode(this_STRING_2, grammarAccess.getRegexAccess().getSTRINGTerminalRuleCall_2());
		}
		    |
		this_WS_3=RULE_WS
		{
			$current.merge(this_WS_3);
		}
		{
			newLeafNode(this_WS_3, grammarAccess.getRegexAccess().getWSTerminalRuleCall_3());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getPlusSignKeyword_4());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getHyphenMinusKeyword_5());
		}
		    |
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getLeftParenthesisKeyword_6());
		}
		    |
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getRightParenthesisKeyword_7());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getAsteriskKeyword_8());
		}
		    |
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getFullStopKeyword_9());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getSolidusKeyword_10());
		}
		    |
		kw='\\'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getReverseSolidusKeyword_11());
		}
		    |
		kw='|'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getVerticalLineKeyword_12());
		}
		    |
		kw='?'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getQuestionMarkKeyword_13());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getGreaterThanSignKeyword_14());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getLessThanSignKeyword_15());
		}
		    |
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getLeftCurlyBracketKeyword_16());
		}
		    |
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getRightCurlyBracketKeyword_17());
		}
		    |
		kw='"'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getQuotationMarkKeyword_18());
		}
		    |
		kw='\''
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getRegexAccess().getApostropheKeyword_19());
		}
	)
;

// Entry rule entryRuleRuleDefinition
entryRuleRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleDefinitionRule()); }
	iv_ruleRuleDefinition=ruleRuleDefinition
	{ $current=$iv_ruleRuleDefinition.current; }
	EOF;

// Rule RuleDefinition
ruleRuleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRuleDefinitionAccess().getPartsRulePartParserRuleCall_0());
			}
			lv_parts_0_0=ruleRulePart
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRuleDefinitionRule());
				}
				add(
					$current,
					"parts",
					lv_parts_0_0,
					"org.xtext.cocktail.Scanner.RulePart");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleRulePart
entryRuleRulePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRulePartRule()); }
	iv_ruleRulePart=ruleRulePart
	{ $current=$iv_ruleRulePart.current; }
	EOF;

// Rule RulePart
ruleRulePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRulePartAccess().getRegRegexParserRuleCall_0_0());
				}
				lv_reg_0_0=ruleRegex
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRulePartRule());
					}
					set(
						$current,
						"reg",
						lv_reg_0_0,
						"org.xtext.cocktail.Scanner.Regex");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			((
				RULE_ID
			)
			)=>
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRulePartRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRulePartAccess().getRefDefineRuleCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleRuleStart
entryRuleRuleStart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleStartRule()); }
	iv_ruleRuleStart=ruleRuleStart
	{ $current=$iv_ruleRuleStart.current; }
	EOF;

// Rule RuleStart
ruleRuleStart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_rulePrec_0_0='NOT'
					{
						newLeafNode(lv_rulePrec_0_0, grammarAccess.getRuleStartAccess().getRulePrecNOTKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleStartRule());
						}
						setWithLastConsumed($current, "rulePrec", lv_rulePrec_0_0, "NOT");
					}
				)
			)
			    |
			(
				(
					lv_rulePrec_1_0='-'
					{
						newLeafNode(lv_rulePrec_1_0, grammarAccess.getRuleStartAccess().getRulePrecHyphenMinusKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleStartRule());
						}
						setWithLastConsumed($current, "rulePrec", lv_rulePrec_1_0, "-");
					}
				)
			)
		)?
		otherlv_2='#'
		{
			newLeafNode(otherlv_2, grammarAccess.getRuleStartAccess().getNumberSignKeyword_1());
		}
		(
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRuleStartRule());
							}
						}
						otherlv_3=RULE_ID
						{
							newLeafNode(otherlv_3, grammarAccess.getRuleStartAccess().getRuleStatesStartStateCrossReference_2_0_0_0());
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getRuleStartAccess().getCommaKeyword_2_0_1_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getRuleStartRule());
								}
							}
							otherlv_5=RULE_ID
							{
								newLeafNode(otherlv_5, grammarAccess.getRuleStartAccess().getRuleStatesStartStateCrossReference_2_0_1_1_0());
							}
						)
					)
				)*
			)
			    |
			(
				(
					lv_ruleDefault_6_0='STD'
					{
						newLeafNode(lv_ruleDefault_6_0, grammarAccess.getRuleStartAccess().getRuleDefaultSTDKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleStartRule());
						}
						setWithLastConsumed($current, "ruleDefault", lv_ruleDefault_6_0, "STD");
					}
				)
			)
			    |
			(
				(
					lv_ruleDefault_7_0='*'
					{
						newLeafNode(lv_ruleDefault_7_0, grammarAccess.getRuleStartAccess().getRuleDefaultAsteriskKeyword_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleStartRule());
						}
						setWithLastConsumed($current, "ruleDefault", lv_ruleDefault_7_0, "*");
					}
				)
			)
		)
		otherlv_8='#'
		{
			newLeafNode(otherlv_8, grammarAccess.getRuleStartAccess().getNumberSignKeyword_3());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
