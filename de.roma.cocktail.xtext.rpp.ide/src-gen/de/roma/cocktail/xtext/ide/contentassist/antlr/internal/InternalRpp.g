/*
 * generated by Xtext 2.9.1
 */
grammar InternalRpp;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package de.roma.cocktail.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.roma.cocktail.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.roma.cocktail.xtext.services.RppGrammarAccess;

}
@parser::members {
	private RppGrammarAccess grammarAccess;

	public void setGrammarAccess(RppGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCodeBlock
entryRuleCodeBlock
:
{ before(grammarAccess.getCodeBlockRule()); }
	 ruleCodeBlock
{ after(grammarAccess.getCodeBlockRule()); } 
	 EOF 
;

// Rule CodeBlock
ruleCodeBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeBlockAccess().getAlternatives()); }
		(rule__CodeBlock__Alternatives)*
		{ after(grammarAccess.getCodeBlockAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCodeWall
entryRuleCodeWall
:
{ before(grammarAccess.getCodeWallRule()); }
	 ruleCodeWall
{ after(grammarAccess.getCodeWallRule()); } 
	 EOF 
;

// Rule CodeWall
ruleCodeWall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeWallAccess().getAlternatives()); }
		(rule__CodeWall__Alternatives)
		{ after(grammarAccess.getCodeWallAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScanner
entryRuleScanner
:
{ before(grammarAccess.getScannerRule()); }
	 ruleScanner
{ after(grammarAccess.getScannerRule()); } 
	 EOF 
;

// Rule Scanner
ruleScanner 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScannerAccess().getGroup()); }
		(rule__Scanner__Group__0)
		{ after(grammarAccess.getScannerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExport
entryRuleExport
:
{ before(grammarAccess.getExportRule()); }
	 ruleExport
{ after(grammarAccess.getExportRule()); } 
	 EOF 
;

// Rule Export
ruleExport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExportAccess().getGroup()); }
		(rule__Export__Group__0)
		{ after(grammarAccess.getExportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobal
entryRuleGlobal
:
{ before(grammarAccess.getGlobalRule()); }
	 ruleGlobal
{ after(grammarAccess.getGlobalRule()); } 
	 EOF 
;

// Rule Global
ruleGlobal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalAccess().getGroup()); }
		(rule__Global__Group__0)
		{ after(grammarAccess.getGlobalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocal
entryRuleLocal
:
{ before(grammarAccess.getLocalRule()); }
	 ruleLocal
{ after(grammarAccess.getLocalRule()); } 
	 EOF 
;

// Rule Local
ruleLocal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalAccess().getGroup()); }
		(rule__Local__Group__0)
		{ after(grammarAccess.getLocalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefault
entryRuleDefault
:
{ before(grammarAccess.getDefaultRule()); }
	 ruleDefault
{ after(grammarAccess.getDefaultRule()); } 
	 EOF 
;

// Rule Default
ruleDefault 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefaultAccess().getGroup()); }
		(rule__Default__Group__0)
		{ after(grammarAccess.getDefaultAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEof
entryRuleEof
:
{ before(grammarAccess.getEofRule()); }
	 ruleEof
{ after(grammarAccess.getEofRule()); } 
	 EOF 
;

// Rule Eof
ruleEof 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEofAccess().getGroup()); }
		(rule__Eof__Group__0)
		{ after(grammarAccess.getEofAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBegin
entryRuleBegin
:
{ before(grammarAccess.getBeginRule()); }
	 ruleBegin
{ after(grammarAccess.getBeginRule()); } 
	 EOF 
;

// Rule Begin
ruleBegin 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBeginAccess().getGroup()); }
		(rule__Begin__Group__0)
		{ after(grammarAccess.getBeginAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClose
entryRuleClose
:
{ before(grammarAccess.getCloseRule()); }
	 ruleClose
{ after(grammarAccess.getCloseRule()); } 
	 EOF 
;

// Rule Close
ruleClose 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCloseAccess().getGroup()); }
		(rule__Close__Group__0)
		{ after(grammarAccess.getCloseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefine
entryRuleDefine
:
{ before(grammarAccess.getDefineRule()); }
	 ruleDefine
{ after(grammarAccess.getDefineRule()); } 
	 EOF 
;

// Rule Define
ruleDefine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefineAccess().getGroup()); }
		(rule__Define__Group__0)
		{ after(grammarAccess.getDefineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefineRule
entryRuleDefineRule
:
{ before(grammarAccess.getDefineRuleRule()); }
	 ruleDefineRule
{ after(grammarAccess.getDefineRuleRule()); } 
	 EOF 
;

// Rule DefineRule
ruleDefineRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefineRuleAccess().getGroup()); }
		(rule__DefineRule__Group__0)
		{ after(grammarAccess.getDefineRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefineRegex
entryRuleDefineRegex
:
{ before(grammarAccess.getDefineRegexRule()); }
	 ruleDefineRegex
{ after(grammarAccess.getDefineRegexRule()); } 
	 EOF 
;

// Rule DefineRegex
ruleDefineRegex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefineRegexAccess().getRegexParserRuleCall()); }
		(ruleRegex)*
		{ after(grammarAccess.getDefineRegexAccess().getRegexParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartStates
entryRuleStartStates
:
{ before(grammarAccess.getStartStatesRule()); }
	 ruleStartStates
{ after(grammarAccess.getStartStatesRule()); } 
	 EOF 
;

// Rule StartStates
ruleStartStates 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartStatesAccess().getGroup()); }
		(rule__StartStates__Group__0)
		{ after(grammarAccess.getStartStatesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartState
entryRuleStartState
:
{ before(grammarAccess.getStartStateRule()); }
	 ruleStartState
{ after(grammarAccess.getStartStateRule()); } 
	 EOF 
;

// Rule StartState
ruleStartState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartStateAccess().getNameAssignment()); }
		(rule__StartState__NameAssignment)
		{ after(grammarAccess.getStartStateAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleRule
entryRuleSingleRule
:
{ before(grammarAccess.getSingleRuleRule()); }
	 ruleSingleRule
{ after(grammarAccess.getSingleRuleRule()); } 
	 EOF 
;

// Rule SingleRule
ruleSingleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleRuleAccess().getGroup()); }
		(rule__SingleRule__Group__0)
		{ after(grammarAccess.getSingleRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegex
entryRuleRegex
:
{ before(grammarAccess.getRegexRule()); }
	 ruleRegex
{ after(grammarAccess.getRegexRule()); } 
	 EOF 
;

// Rule Regex
ruleRegex 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegexAccess().getAlternatives()); }
		(rule__Regex__Alternatives)
		{ after(grammarAccess.getRegexAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleDefinition
entryRuleRuleDefinition
:
{ before(grammarAccess.getRuleDefinitionRule()); }
	 ruleRuleDefinition
{ after(grammarAccess.getRuleDefinitionRule()); } 
	 EOF 
;

// Rule RuleDefinition
ruleRuleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleDefinitionAccess().getPartsAssignment()); }
		(rule__RuleDefinition__PartsAssignment)*
		{ after(grammarAccess.getRuleDefinitionAccess().getPartsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRulePart
entryRuleRulePart
:
{ before(grammarAccess.getRulePartRule()); }
	 ruleRulePart
{ after(grammarAccess.getRulePartRule()); } 
	 EOF 
;

// Rule RulePart
ruleRulePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRulePartAccess().getAlternatives()); }
		(rule__RulePart__Alternatives)
		{ after(grammarAccess.getRulePartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleStart
entryRuleRuleStart
:
{ before(grammarAccess.getRuleStartRule()); }
	 ruleRuleStart
{ after(grammarAccess.getRuleStartRule()); } 
	 EOF 
;

// Rule RuleStart
ruleRuleStart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleStartAccess().getGroup()); }
		(rule__RuleStart__Group__0)
		{ after(grammarAccess.getRuleStartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getCodeWallParserRuleCall_0()); }
		ruleCodeWall
		{ after(grammarAccess.getCodeBlockAccess().getCodeWallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCodeBlockAccess().getGroup_1()); }
		(rule__CodeBlock__Group_1__0)
		{ after(grammarAccess.getCodeBlockAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeWall__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeWallAccess().getSTDKeyword_0()); }
		('STD')
		{ after(grammarAccess.getCodeWallAccess().getSTDKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getCodeWallAccess().getIDTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getINTTerminalRuleCall_2()); }
		RULE_INT
		{ after(grammarAccess.getCodeWallAccess().getINTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getSTRINGTerminalRuleCall_3()); }
		RULE_STRING
		{ after(grammarAccess.getCodeWallAccess().getSTRINGTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getWSTerminalRuleCall_4()); }
		RULE_WS
		{ after(grammarAccess.getCodeWallAccess().getWSTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getPlusSignKeyword_5()); }
		'+'
		{ after(grammarAccess.getCodeWallAccess().getPlusSignKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getHyphenMinusKeyword_6()); }
		'-'
		{ after(grammarAccess.getCodeWallAccess().getHyphenMinusKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getLeftParenthesisKeyword_7()); }
		'('
		{ after(grammarAccess.getCodeWallAccess().getLeftParenthesisKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getRightParenthesisKeyword_8()); }
		')'
		{ after(grammarAccess.getCodeWallAccess().getRightParenthesisKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getAsteriskKeyword_9()); }
		'*'
		{ after(grammarAccess.getCodeWallAccess().getAsteriskKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getFullStopKeyword_10()); }
		'.'
		{ after(grammarAccess.getCodeWallAccess().getFullStopKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getSolidusKeyword_11()); }
		'/'
		{ after(grammarAccess.getCodeWallAccess().getSolidusKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getReverseSolidusKeyword_12()); }
		'\\'
		{ after(grammarAccess.getCodeWallAccess().getReverseSolidusKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getVerticalLineKeyword_13()); }
		'|'
		{ after(grammarAccess.getCodeWallAccess().getVerticalLineKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getQuestionMarkKeyword_14()); }
		'?'
		{ after(grammarAccess.getCodeWallAccess().getQuestionMarkKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getGreaterThanSignKeyword_15()); }
		'>'
		{ after(grammarAccess.getCodeWallAccess().getGreaterThanSignKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getLessThanSignKeyword_16()); }
		'<'
		{ after(grammarAccess.getCodeWallAccess().getLessThanSignKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getLeftSquareBracketKeyword_17()); }
		'['
		{ after(grammarAccess.getCodeWallAccess().getLeftSquareBracketKeyword_17()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getRightSquareBracketKeyword_18()); }
		']'
		{ after(grammarAccess.getCodeWallAccess().getRightSquareBracketKeyword_18()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getNumberSignKeyword_19()); }
		'#'
		{ after(grammarAccess.getCodeWallAccess().getNumberSignKeyword_19()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getDollarSignKeyword_20()); }
		'$'
		{ after(grammarAccess.getCodeWallAccess().getDollarSignKeyword_20()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getPercentSignKeyword_21()); }
		'%'
		{ after(grammarAccess.getCodeWallAccess().getPercentSignKeyword_21()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getSemicolonKeyword_22()); }
		';'
		{ after(grammarAccess.getCodeWallAccess().getSemicolonKeyword_22()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getColonKeyword_23()); }
		':'
		{ after(grammarAccess.getCodeWallAccess().getColonKeyword_23()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getExclamationMarkKeyword_24()); }
		'!'
		{ after(grammarAccess.getCodeWallAccess().getExclamationMarkKeyword_24()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getEqualsSignKeyword_25()); }
		'='
		{ after(grammarAccess.getCodeWallAccess().getEqualsSignKeyword_25()); }
	)
	|
	(
		{ before(grammarAccess.getCodeWallAccess().getCommaKeyword_26()); }
		','
		{ after(grammarAccess.getCodeWallAccess().getCommaKeyword_26()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__InfoAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getInfoRULEKeyword_0_0_0()); }
		'RULE'
		{ after(grammarAccess.getRuleAccess().getInfoRULEKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getInfoRULESKeyword_0_0_1()); }
		'RULES'
		{ after(grammarAccess.getRuleAccess().getInfoRULESKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Regex__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegexAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getRegexAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getRegexAccess().getINTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getSTRINGTerminalRuleCall_2()); }
		RULE_STRING
		{ after(grammarAccess.getRegexAccess().getSTRINGTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getWSTerminalRuleCall_3()); }
		RULE_WS
		{ after(grammarAccess.getRegexAccess().getWSTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getPlusSignKeyword_4()); }
		'+'
		{ after(grammarAccess.getRegexAccess().getPlusSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getHyphenMinusKeyword_5()); }
		'-'
		{ after(grammarAccess.getRegexAccess().getHyphenMinusKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getLeftParenthesisKeyword_6()); }
		'('
		{ after(grammarAccess.getRegexAccess().getLeftParenthesisKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getRightParenthesisKeyword_7()); }
		')'
		{ after(grammarAccess.getRegexAccess().getRightParenthesisKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getAsteriskKeyword_8()); }
		'*'
		{ after(grammarAccess.getRegexAccess().getAsteriskKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getFullStopKeyword_9()); }
		'.'
		{ after(grammarAccess.getRegexAccess().getFullStopKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getSolidusKeyword_10()); }
		'/'
		{ after(grammarAccess.getRegexAccess().getSolidusKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getReverseSolidusKeyword_11()); }
		'\\'
		{ after(grammarAccess.getRegexAccess().getReverseSolidusKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getVerticalLineKeyword_12()); }
		'|'
		{ after(grammarAccess.getRegexAccess().getVerticalLineKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getQuestionMarkKeyword_13()); }
		'?'
		{ after(grammarAccess.getRegexAccess().getQuestionMarkKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getGreaterThanSignKeyword_14()); }
		'>'
		{ after(grammarAccess.getRegexAccess().getGreaterThanSignKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getLessThanSignKeyword_15()); }
		'<'
		{ after(grammarAccess.getRegexAccess().getLessThanSignKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getLeftCurlyBracketKeyword_16()); }
		'{'
		{ after(grammarAccess.getRegexAccess().getLeftCurlyBracketKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getRightCurlyBracketKeyword_17()); }
		'}'
		{ after(grammarAccess.getRegexAccess().getRightCurlyBracketKeyword_17()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getQuotationMarkKeyword_18()); }
		'"'
		{ after(grammarAccess.getRegexAccess().getQuotationMarkKeyword_18()); }
	)
	|
	(
		{ before(grammarAccess.getRegexAccess().getApostropheKeyword_19()); }
		'\''
		{ after(grammarAccess.getRegexAccess().getApostropheKeyword_19()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RulePart__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulePartAccess().getRegAssignment_0()); }
		(rule__RulePart__RegAssignment_0)
		{ after(grammarAccess.getRulePartAccess().getRegAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getRulePartAccess().getRefAssignment_1()); }
		(rule__RulePart__RefAssignment_1)
		{ after(grammarAccess.getRulePartAccess().getRefAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getRulePrecAssignment_0_0()); }
		(rule__RuleStart__RulePrecAssignment_0_0)
		{ after(grammarAccess.getRuleStartAccess().getRulePrecAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleStartAccess().getRulePrecAssignment_0_1()); }
		(rule__RuleStart__RulePrecAssignment_0_1)
		{ after(grammarAccess.getRuleStartAccess().getRulePrecAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getRuleStatesAssignment_2_0()); }
		(rule__RuleStart__RuleStatesAssignment_2_0)
		{ after(grammarAccess.getRuleStartAccess().getRuleStatesAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleStartAccess().getRuleDefaultAssignment_2_1()); }
		(rule__RuleStart__RuleDefaultAssignment_2_1)
		{ after(grammarAccess.getRuleStartAccess().getRuleDefaultAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getRuleStartAccess().getRuleDefaultAssignment_2_2()); }
		(rule__RuleStart__RuleDefaultAssignment_2_2)
		{ after(grammarAccess.getRuleStartAccess().getRuleDefaultAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getUnorderedGroup_0()); }
	(rule__Model__UnorderedGroup_0)
	{ after(grammarAccess.getModelAccess().getUnorderedGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRulesAssignment_1()); }
	(rule__Model__RulesAssignment_1)
	{ after(grammarAccess.getModelAccess().getRulesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlock__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_1__0__Impl
	rule__CodeBlock__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1_0()); }
	'{'
	{ after(grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_1__1__Impl
	rule__CodeBlock__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getCodeBlockParserRuleCall_1_1()); }
	ruleCodeBlock
	{ after(grammarAccess.getCodeBlockAccess().getCodeBlockParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getRightCurlyBracketKeyword_1_2()); }
	'}'
	{ after(grammarAccess.getCodeBlockAccess().getRightCurlyBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scanner__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scanner__Group__0__Impl
	rule__Scanner__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScannerAccess().getSCANNERKeyword_0()); }
	'SCANNER'
	{ after(grammarAccess.getScannerAccess().getSCANNERKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scanner__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScannerAccess().getNameAssignment_1()); }
	(rule__Scanner__NameAssignment_1)
	{ after(grammarAccess.getScannerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Export__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__0__Impl
	rule__Export__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getEXPORTKeyword_0()); }
	'EXPORT'
	{ after(grammarAccess.getExportAccess().getEXPORTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__1__Impl
	rule__Export__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getExportAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__2__Impl
	rule__Export__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getContentAssignment_2()); }
	(rule__Export__ContentAssignment_2)
	{ after(grammarAccess.getExportAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Export__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getExportAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getIMPORTKeyword_0()); }
	'IMPORT'
	{ after(grammarAccess.getImportAccess().getIMPORTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getImportAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getContentAssignment_2()); }
	(rule__Import__ContentAssignment_2)
	{ after(grammarAccess.getImportAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getImportAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Global__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__0__Impl
	rule__Global__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getGLOBALKeyword_0()); }
	'GLOBAL'
	{ after(grammarAccess.getGlobalAccess().getGLOBALKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__1__Impl
	rule__Global__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getGlobalAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__2__Impl
	rule__Global__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getContentAssignment_2()); }
	(rule__Global__ContentAssignment_2)
	{ after(grammarAccess.getGlobalAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Global__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getGlobalAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Local__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__0__Impl
	rule__Local__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getLOCALKeyword_0()); }
	'LOCAL'
	{ after(grammarAccess.getLocalAccess().getLOCALKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__1__Impl
	rule__Local__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLocalAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__2__Impl
	rule__Local__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getContentAssignment_2()); }
	(rule__Local__ContentAssignment_2)
	{ after(grammarAccess.getLocalAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Local__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getLocalAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Default__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group__0__Impl
	rule__Default__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getDEFAULTKeyword_0()); }
	'DEFAULT'
	{ after(grammarAccess.getDefaultAccess().getDEFAULTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group__1__Impl
	rule__Default__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDefaultAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group__2__Impl
	rule__Default__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getContentAssignment_2()); }
	(rule__Default__ContentAssignment_2)
	{ after(grammarAccess.getDefaultAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Default__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefaultAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getDefaultAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Eof__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eof__Group__0__Impl
	rule__Eof__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEofAccess().getEOFKeyword_0()); }
	'EOF'
	{ after(grammarAccess.getEofAccess().getEOFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eof__Group__1__Impl
	rule__Eof__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEofAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getEofAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eof__Group__2__Impl
	rule__Eof__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEofAccess().getContentAssignment_2()); }
	(rule__Eof__ContentAssignment_2)
	{ after(grammarAccess.getEofAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eof__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEofAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getEofAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Begin__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Begin__Group__0__Impl
	rule__Begin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeginAccess().getBEGINKeyword_0()); }
	'BEGIN'
	{ after(grammarAccess.getBeginAccess().getBEGINKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Begin__Group__1__Impl
	rule__Begin__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeginAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBeginAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Begin__Group__2__Impl
	rule__Begin__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeginAccess().getContentAssignment_2()); }
	(rule__Begin__ContentAssignment_2)
	{ after(grammarAccess.getBeginAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Begin__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBeginAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBeginAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Close__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group__0__Impl
	rule__Close__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getCLOSEKeyword_0()); }
	'CLOSE'
	{ after(grammarAccess.getCloseAccess().getCLOSEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group__1__Impl
	rule__Close__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCloseAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group__2__Impl
	rule__Close__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getContentAssignment_2()); }
	(rule__Close__ContentAssignment_2)
	{ after(grammarAccess.getCloseAccess().getContentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getCloseAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Define__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__0__Impl
	rule__Define__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineAccess().getDEFINEKeyword_0()); }
	'DEFINE'
	{ after(grammarAccess.getDefineAccess().getDEFINEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Define__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDefineAccess().getDefinesAssignment_1()); }
		(rule__Define__DefinesAssignment_1)
		{ after(grammarAccess.getDefineAccess().getDefinesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getDefineAccess().getDefinesAssignment_1()); }
		(rule__Define__DefinesAssignment_1)*
		{ after(grammarAccess.getDefineAccess().getDefinesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefineRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineRule__Group__0__Impl
	rule__DefineRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineRuleAccess().getNameAssignment_0()); }
	(rule__DefineRule__NameAssignment_0)
	{ after(grammarAccess.getDefineRuleAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineRule__Group__1__Impl
	rule__DefineRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineRuleAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getDefineRuleAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineRule__Group__2__Impl
	rule__DefineRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineRuleAccess().getRuleAssignment_2()); }
	(rule__DefineRule__RuleAssignment_2)
	{ after(grammarAccess.getDefineRuleAccess().getRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefineRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefineRuleAccess().getFullStopKeyword_3()); }
	'.'
	{ after(grammarAccess.getDefineRuleAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartStates__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group__0__Impl
	rule__StartStates__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getSTARTKeyword_0()); }
	'START'
	{ after(grammarAccess.getStartStatesAccess().getSTARTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group__1__Impl
	rule__StartStates__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getIncstatesAssignment_1()); }
	(rule__StartStates__IncstatesAssignment_1)
	{ after(grammarAccess.getStartStatesAccess().getIncstatesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group__2__Impl
	rule__StartStates__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getGroup_2()); }
	(rule__StartStates__Group_2__0)*
	{ after(grammarAccess.getStartStatesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getGroup_3()); }
	(rule__StartStates__Group_3__0)?
	{ after(grammarAccess.getStartStatesAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartStates__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_2__0__Impl
	rule__StartStates__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getStartStatesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getIncstatesAssignment_2_1()); }
	(rule__StartStates__IncstatesAssignment_2_1)
	{ after(grammarAccess.getStartStatesAccess().getIncstatesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartStates__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_3__0__Impl
	rule__StartStates__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getHyphenMinusKeyword_3_0()); }
	'-'
	{ after(grammarAccess.getStartStatesAccess().getHyphenMinusKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_3__1__Impl
	rule__StartStates__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getExstatesAssignment_3_1()); }
	(rule__StartStates__ExstatesAssignment_3_1)
	{ after(grammarAccess.getStartStatesAccess().getExstatesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getGroup_3_2()); }
	(rule__StartStates__Group_3_2__0)*
	{ after(grammarAccess.getStartStatesAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartStates__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_3_2__0__Impl
	rule__StartStates__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getStartStatesAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartStates__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartStatesAccess().getExstatesAssignment_3_2_1()); }
	(rule__StartStates__ExstatesAssignment_3_2_1)
	{ after(grammarAccess.getStartStatesAccess().getExstatesAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getInfoAssignment_0()); }
	(rule__Rule__InfoAssignment_0)
	{ after(grammarAccess.getRuleAccess().getInfoAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRulesAssignment_1()); }
	(rule__Rule__RulesAssignment_1)*
	{ after(grammarAccess.getRuleAccess().getRulesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__0__Impl
	rule__SingleRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getStartAssignment_0()); }
	(rule__SingleRule__StartAssignment_0)?
	{ after(grammarAccess.getSingleRuleAccess().getStartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__1__Impl
	rule__SingleRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getRuleAssignment_1()); }
	(rule__SingleRule__RuleAssignment_1)
	{ after(grammarAccess.getSingleRuleAccess().getRuleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__2__Impl
	rule__SingleRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getSingleRuleAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__3__Impl
	rule__SingleRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getHyphenMinusKeyword_3()); }
	('-')?
	{ after(grammarAccess.getSingleRuleAccess().getHyphenMinusKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__4__Impl
	rule__SingleRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getSingleRuleAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__5__Impl
	rule__SingleRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getContentAssignment_5()); }
	(rule__SingleRule__ContentAssignment_5)
	{ after(grammarAccess.getSingleRuleAccess().getContentAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRuleAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getSingleRuleAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleStart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group__0__Impl
	rule__RuleStart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getAlternatives_0()); }
	(rule__RuleStart__Alternatives_0)?
	{ after(grammarAccess.getRuleStartAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group__1__Impl
	rule__RuleStart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getNumberSignKeyword_1()); }
	'#'
	{ after(grammarAccess.getRuleStartAccess().getNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group__2__Impl
	rule__RuleStart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getAlternatives_2()); }
	(rule__RuleStart__Alternatives_2)
	{ after(grammarAccess.getRuleStartAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group__3__Impl
	rule__RuleStart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getGroup_3()); }
	(rule__RuleStart__Group_3__0)*
	{ after(grammarAccess.getRuleStartAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getNumberSignKeyword_4()); }
	'#'
	{ after(grammarAccess.getRuleStartAccess().getNumberSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleStart__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group_3__0__Impl
	rule__RuleStart__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getRuleStartAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleStart__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleStartAccess().getRuleStatesAssignment_3_1()); }
	(rule__RuleStart__RuleStatesAssignment_3_1)
	{ after(grammarAccess.getRuleStartAccess().getRuleStatesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup_0
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup_0());
	}
:
	rule__Model__UnorderedGroup_0__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getScannerAssignment_0_0()); }
					(rule__Model__ScannerAssignment_0_0)
					{ after(grammarAccess.getModelAccess().getScannerAssignment_0_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getExportAssignment_0_1()); }
					(rule__Model__ExportAssignment_0_1)
					{ after(grammarAccess.getModelAccess().getExportAssignment_0_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getImportsAssignment_0_2()); }
					(rule__Model__ImportsAssignment_0_2)
					{ after(grammarAccess.getModelAccess().getImportsAssignment_0_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getGlobalAssignment_0_3()); }
					(rule__Model__GlobalAssignment_0_3)
					{ after(grammarAccess.getModelAccess().getGlobalAssignment_0_3()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 4);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getLocalAssignment_0_4()); }
					(rule__Model__LocalAssignment_0_4)
					{ after(grammarAccess.getModelAccess().getLocalAssignment_0_4()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 5);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getDefaultAssignment_0_5()); }
					(rule__Model__DefaultAssignment_0_5)
					{ after(grammarAccess.getModelAccess().getDefaultAssignment_0_5()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 6)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 6);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getEofAssignment_0_6()); }
					(rule__Model__EofAssignment_0_6)
					{ after(grammarAccess.getModelAccess().getEofAssignment_0_6()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 7)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 7);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getBeginAssignment_0_7()); }
					(rule__Model__BeginAssignment_0_7)
					{ after(grammarAccess.getModelAccess().getBeginAssignment_0_7()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 8)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 8);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getCloseAssignment_0_8()); }
					(rule__Model__CloseAssignment_0_8)
					{ after(grammarAccess.getModelAccess().getCloseAssignment_0_8()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 9)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 9);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getDefineAssignment_0_9()); }
					(rule__Model__DefineAssignment_0_9)
					{ after(grammarAccess.getModelAccess().getDefineAssignment_0_9()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup_0(), 10)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup_0(), 10);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getStatesAssignment_0_10()); }
					(rule__Model__StatesAssignment_0_10)
					{ after(grammarAccess.getModelAccess().getStatesAssignment_0_10()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__5?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__6?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__7?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__8?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__9?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
	rule__Model__UnorderedGroup_0__10?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup_0__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup_0__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ScannerAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScannerScannerParserRuleCall_0_0_0()); }
		ruleScanner
		{ after(grammarAccess.getModelAccess().getScannerScannerParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ExportAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getExportExportParserRuleCall_0_1_0()); }
		ruleExport
		{ after(grammarAccess.getModelAccess().getExportExportParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_2_0()); }
		ruleImport
		{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GlobalAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGlobalGlobalParserRuleCall_0_3_0()); }
		ruleGlobal
		{ after(grammarAccess.getModelAccess().getGlobalGlobalParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__LocalAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getLocalLocalParserRuleCall_0_4_0()); }
		ruleLocal
		{ after(grammarAccess.getModelAccess().getLocalLocalParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DefaultAssignment_0_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDefaultDefaultParserRuleCall_0_5_0()); }
		ruleDefault
		{ after(grammarAccess.getModelAccess().getDefaultDefaultParserRuleCall_0_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__EofAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEofEofParserRuleCall_0_6_0()); }
		ruleEof
		{ after(grammarAccess.getModelAccess().getEofEofParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__BeginAssignment_0_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getBeginBeginParserRuleCall_0_7_0()); }
		ruleBegin
		{ after(grammarAccess.getModelAccess().getBeginBeginParserRuleCall_0_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__CloseAssignment_0_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getCloseCloseParserRuleCall_0_8_0()); }
		ruleClose
		{ after(grammarAccess.getModelAccess().getCloseCloseParserRuleCall_0_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DefineAssignment_0_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDefineDefineParserRuleCall_0_9_0()); }
		ruleDefine
		{ after(grammarAccess.getModelAccess().getDefineDefineParserRuleCall_0_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatesAssignment_0_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getStatesStartStatesParserRuleCall_0_10_0()); }
		ruleStartStates
		{ after(grammarAccess.getModelAccess().getStatesStartStatesParserRuleCall_0_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getModelAccess().getRulesRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scanner__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScannerAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScannerAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Export__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportAccess().getContentCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getExportAccess().getContentCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getContentCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getImportAccess().getContentCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Global__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getContentCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getGlobalAccess().getContentCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Local__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalAccess().getContentCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getLocalAccess().getContentCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Default__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefaultAccess().getContentCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getDefaultAccess().getContentCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eof__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEofAccess().getContentCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getEofAccess().getContentCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Begin__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeginAccess().getContentCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getBeginAccess().getContentCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__ContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCloseAccess().getContentCodeBlockParserRuleCall_2_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getCloseAccess().getContentCodeBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Define__DefinesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineAccess().getDefinesDefineRuleParserRuleCall_1_0()); }
		ruleDefineRule
		{ after(grammarAccess.getDefineAccess().getDefinesDefineRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineRuleAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDefineRuleAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineRule__RuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefineRuleAccess().getRuleDefineRegexParserRuleCall_2_0()); }
		ruleDefineRegex
		{ after(grammarAccess.getDefineRuleAccess().getRuleDefineRegexParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__IncstatesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_1_0()); }
		ruleStartState
		{ after(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__IncstatesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_2_1_0()); }
		ruleStartState
		{ after(grammarAccess.getStartStatesAccess().getIncstatesStartStateParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__ExstatesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_1_0()); }
		ruleStartState
		{ after(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartStates__ExstatesAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_2_1_0()); }
		ruleStartState
		{ after(grammarAccess.getStartStatesAccess().getExstatesStartStateParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartState__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartStateAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getStartStateAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__InfoAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getInfoAlternatives_0_0()); }
		(rule__Rule__InfoAlternatives_0_0)
		{ after(grammarAccess.getRuleAccess().getInfoAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__RulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getRulesSingleRuleParserRuleCall_1_0()); }
		ruleSingleRule
		{ after(grammarAccess.getRuleAccess().getRulesSingleRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__StartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getStartRuleStartParserRuleCall_0_0()); }
		ruleRuleStart
		{ after(grammarAccess.getSingleRuleAccess().getStartRuleStartParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__RuleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getRuleRuleDefinitionParserRuleCall_1_0()); }
		ruleRuleDefinition
		{ after(grammarAccess.getSingleRuleAccess().getRuleRuleDefinitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRule__ContentAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRuleAccess().getContentCodeBlockParserRuleCall_5_0()); }
		ruleCodeBlock
		{ after(grammarAccess.getSingleRuleAccess().getContentCodeBlockParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDefinition__PartsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDefinitionAccess().getPartsRulePartParserRuleCall_0()); }
		ruleRulePart
		{ after(grammarAccess.getRuleDefinitionAccess().getPartsRulePartParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RulePart__RegAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulePartAccess().getRegRegexParserRuleCall_0_0()); }
		ruleRegex
		{ after(grammarAccess.getRulePartAccess().getRegRegexParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RulePart__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRulePartAccess().getRefDefineRuleCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRulePartAccess().getRefDefineRuleIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRulePartAccess().getRefDefineRuleIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRulePartAccess().getRefDefineRuleCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__RulePrecAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getRulePrecNOTKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getRuleStartAccess().getRulePrecNOTKeyword_0_0_0()); }
			'NOT'
			{ after(grammarAccess.getRuleStartAccess().getRulePrecNOTKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getRuleStartAccess().getRulePrecNOTKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__RulePrecAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getRulePrecHyphenMinusKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getRuleStartAccess().getRulePrecHyphenMinusKeyword_0_1_0()); }
			'-'
			{ after(grammarAccess.getRuleStartAccess().getRulePrecHyphenMinusKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getRuleStartAccess().getRulePrecHyphenMinusKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__RuleStatesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getRuleStatesStartStateCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getRuleStartAccess().getRuleStatesStartStateIDTerminalRuleCall_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleStartAccess().getRuleStatesStartStateIDTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getRuleStartAccess().getRuleStatesStartStateCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__RuleDefaultAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getRuleDefaultSTDKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getRuleStartAccess().getRuleDefaultSTDKeyword_2_1_0()); }
			'STD'
			{ after(grammarAccess.getRuleStartAccess().getRuleDefaultSTDKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getRuleStartAccess().getRuleDefaultSTDKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__RuleDefaultAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getRuleDefaultAsteriskKeyword_2_2_0()); }
		(
			{ before(grammarAccess.getRuleStartAccess().getRuleDefaultAsteriskKeyword_2_2_0()); }
			'*'
			{ after(grammarAccess.getRuleStartAccess().getRuleDefaultAsteriskKeyword_2_2_0()); }
		)
		{ after(grammarAccess.getRuleStartAccess().getRuleDefaultAsteriskKeyword_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleStart__RuleStatesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleStartAccess().getRuleStatesStartStateCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getRuleStartAccess().getRuleStatesStartStateIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRuleStartAccess().getRuleStatesStartStateIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getRuleStartAccess().getRuleStatesStartStateCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
