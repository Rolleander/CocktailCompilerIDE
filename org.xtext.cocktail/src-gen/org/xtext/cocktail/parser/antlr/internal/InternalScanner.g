/*
 * generated by Xtext
 */
grammar InternalScanner;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.cocktail.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.cocktail.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.cocktail.services.ScannerGrammarAccess;

}

@parser::members {

 	private ScannerGrammarAccess grammarAccess;
 	
    public InternalScannerParser(TokenStream input, ScannerGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected ScannerGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getScannerTitleParserRuleCall_0_0()); 
	    }
		lv_scanner_0_0=ruleTitle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"scanner",
        		lv_scanner_0_0, 
        		"Title");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getScannerExportParserRuleCall_1_0()); 
	    }
		lv_scanner_1_0=ruleExport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"scanner",
        		lv_scanner_1_0, 
        		"Export");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getScannerGlobalParserRuleCall_2_0()); 
	    }
		lv_scanner_2_0=ruleGlobal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"scanner",
        		lv_scanner_2_0, 
        		"Global");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getScannerLocalParserRuleCall_3_0()); 
	    }
		lv_scanner_3_0=ruleLocal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"scanner",
        		lv_scanner_3_0, 
        		"Local");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getScannerDefaultParserRuleCall_4_0()); 
	    }
		lv_scanner_4_0=ruleDefault		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"scanner",
        		lv_scanner_4_0, 
        		"Default");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getScannerEofParserRuleCall_5_0()); 
	    }
		lv_scanner_5_0=ruleEof		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"scanner",
        		lv_scanner_5_0, 
        		"Eof");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getScannerDefineParserRuleCall_6_0()); 
	    }
		lv_scanner_6_0=ruleDefine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"scanner",
        		lv_scanner_6_0, 
        		"Define");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getScannerStartStatesParserRuleCall_7_0()); 
	    }
		lv_scanner_7_0=ruleStartStates		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"scanner",
        		lv_scanner_7_0, 
        		"StartStates");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getScannerRuleParserRuleCall_8_0()); 
	    }
		lv_scanner_8_0=ruleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"scanner",
        		lv_scanner_8_0, 
        		"Rule");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTitle
entryRuleTitle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	 iv_ruleTitle=ruleTitle 
	 { $current=$iv_ruleTitle.current; } 
	 EOF 
;

// Rule Title
ruleTitle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SCANNER' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTitleAccess().getSCANNERKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTitleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTitleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleExport
entryRuleExport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExportRule()); }
	 iv_ruleExport=ruleExport 
	 { $current=$iv_ruleExport.current; } 
	 EOF 
;

// Rule Export
ruleExport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='EXPORT {' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExportAccess().getEXPORTKeyword_0());
    }
(
(
		lv_content_1_0=RULE_ID
		{
			newLeafNode(lv_content_1_0, grammarAccess.getExportAccess().getContentIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"content",
        		lv_content_1_0, 
        		"ID");
	    }

)
)	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExportAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleGlobal
entryRuleGlobal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGlobalRule()); }
	 iv_ruleGlobal=ruleGlobal 
	 { $current=$iv_ruleGlobal.current; } 
	 EOF 
;

// Rule Global
ruleGlobal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='GLOBAL {' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGlobalAccess().getGLOBALKeyword_0());
    }
(
(
		lv_content_1_0=RULE_ID
		{
			newLeafNode(lv_content_1_0, grammarAccess.getGlobalAccess().getContentIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGlobalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"content",
        		lv_content_1_0, 
        		"ID");
	    }

)
)	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGlobalAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleLocal
entryRuleLocal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalRule()); }
	 iv_ruleLocal=ruleLocal 
	 { $current=$iv_ruleLocal.current; } 
	 EOF 
;

// Rule Local
ruleLocal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LOCAL {' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLocalAccess().getLOCALKeyword_0());
    }
(
(
		lv_content_1_0=RULE_ID
		{
			newLeafNode(lv_content_1_0, grammarAccess.getLocalAccess().getContentIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"content",
        		lv_content_1_0, 
        		"ID");
	    }

)
)	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLocalAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleDefault
entryRuleDefault returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultRule()); }
	 iv_ruleDefault=ruleDefault 
	 { $current=$iv_ruleDefault.current; } 
	 EOF 
;

// Rule Default
ruleDefault returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DEFAULT {' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDefaultAccess().getDEFAULTKeyword_0());
    }
(
(
		lv_content_1_0=RULE_ID
		{
			newLeafNode(lv_content_1_0, grammarAccess.getDefaultAccess().getContentIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefaultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"content",
        		lv_content_1_0, 
        		"ID");
	    }

)
)	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDefaultAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleEof
entryRuleEof returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEofRule()); }
	 iv_ruleEof=ruleEof 
	 { $current=$iv_ruleEof.current; } 
	 EOF 
;

// Rule Eof
ruleEof returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='EOF {' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEofAccess().getEOFKeyword_0());
    }
(
(
		lv_content_1_0=RULE_ID
		{
			newLeafNode(lv_content_1_0, grammarAccess.getEofAccess().getContentIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEofRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"content",
        		lv_content_1_0, 
        		"ID");
	    }

)
)	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEofAccess().getRightCurlyBracketKeyword_2());
    }
)
;





// Entry rule entryRuleDefine
entryRuleDefine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefineRule()); }
	 iv_ruleDefine=ruleDefine 
	 { $current=$iv_ruleDefine.current; } 
	 EOF 
;

// Rule Define
ruleDefine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DEFINE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDefineAccess().getDEFINEKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefineAccess().getDefinesDefineRuleParserRuleCall_1_0()); 
	    }
		lv_defines_1_0=ruleDefineRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefineRule());
	        }
       		add(
       			$current, 
       			"defines",
        		lv_defines_1_0, 
        		"DefineRule");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleDefineRule
entryRuleDefineRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefineRuleRule()); }
	 iv_ruleDefineRule=ruleDefineRule 
	 { $current=$iv_ruleDefineRule.current; } 
	 EOF 
;

// Rule DefineRule
ruleDefineRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getDefineRuleAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefineRuleAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_rule_2_0=RULE_ID
		{
			newLeafNode(lv_rule_2_0, grammarAccess.getDefineRuleAccess().getRuleIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefineRuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_2_0, 
        		"ID");
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDefineRuleAccess().getFullStopKeyword_3());
    }
)
;





// Entry rule entryRuleStartStates
entryRuleStartStates returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStartStatesRule()); }
	 iv_ruleStartStates=ruleStartStates 
	 { $current=$iv_ruleStartStates.current; } 
	 EOF 
;

// Rule StartStates
ruleStartStates returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='START' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStartStatesAccess().getSTARTKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStartStatesAccess().getStatesStartStateParserRuleCall_1_0()); 
	    }
		lv_states_1_0=ruleStartState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartStatesRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_1_0, 
        		"StartState");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStartStatesAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStartStatesAccess().getStatesStartStateParserRuleCall_2_1_0()); 
	    }
		lv_states_3_0=ruleStartState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStartStatesRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_3_0, 
        		"StartState");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleStartState
entryRuleStartState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStartStateRule()); }
	 iv_ruleStartState=ruleStartState 
	 { $current=$iv_ruleStartState.current; } 
	 EOF 
;

// Rule StartState
ruleStartState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getStartStateAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStartStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	 iv_ruleRule=ruleRule 
	 { $current=$iv_ruleRule.current; } 
	 EOF 
;

// Rule Rule
ruleRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RULE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleAccess().getRULEKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRuleAccess().getContentSingleRuleParserRuleCall_1_0()); 
	    }
		lv_content_1_0=ruleSingleRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRuleRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_1_0, 
        		"SingleRule");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSingleRule
entryRuleSingleRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleRuleRule()); }
	 iv_ruleSingleRule=ruleSingleRule 
	 { $current=$iv_ruleSingleRule.current; } 
	 EOF 
;

// Rule SingleRule
ruleSingleRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getSingleRuleAccess().getRuleStartParserRuleCall_0()); 
    }
    this_RuleStart_0=ruleRuleStart
    { 
        $current = $this_RuleStart_0.current; 
        afterParserOrEnumRuleCall();
    }
)?(
(
		lv_rule_1_0=RULE_TEXT
		{
			newLeafNode(lv_rule_1_0, grammarAccess.getSingleRuleAccess().getRuleTEXTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_1_0, 
        		"TEXT");
	    }

)
)(	otherlv_2=':-' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSingleRuleAccess().getColonHyphenMinusKeyword_2_0());
    }

    |	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSingleRuleAccess().getColonKeyword_2_1());
    }
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSingleRuleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		lv_content_5_0=RULE_ID
		{
			newLeafNode(lv_content_5_0, grammarAccess.getSingleRuleAccess().getContentIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleRuleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"content",
        		lv_content_5_0, 
        		"ID");
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSingleRuleAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleRuleStart
entryRuleRuleStart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRuleStartRule()); }
	 iv_ruleRuleStart=ruleRuleStart 
	 { $current=$iv_ruleRuleStart.current; } 
	 EOF 
;

// Rule RuleStart
ruleRuleStart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRuleStartAccess().getNumberSignKeyword_0());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRuleStartRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRuleStartAccess().getStateStartStateCrossReference_1_0_0()); 
	}

)
)
    |	otherlv_2='STD' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRuleStartAccess().getSTDKeyword_1_1());
    }
)	otherlv_3='#' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRuleStartAccess().getNumberSignKeyword_2());
    }
)
;





RULE_TEXT : ~(':')* ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


